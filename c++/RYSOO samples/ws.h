// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* ws.h
   Generated by wsdl2h 2.8.16 from http://iabx000002.iabx.net/abxWsGestService/abxWsGest?wsdl and typemap.dat
   2014-05-27 15:10:29 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on ws.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://ws.abx/                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://ws.abx/"
empty = ""
empty = ""
empty = ""
empty = ""
ns2 = "http://xml.netbeans.org/schema/abxProtocol"
ns3 = "http://xml.netbeans.org/schema/abxDynaminorg"
ns4 = "http://xml.netbeans.org/schema/abxCan"

*/

#define SOAP_NAMESPACE_OF_empty	""
//gsoap empty schema namespace:	
//gsoap empty schema form:	unqualified

#define SOAP_NAMESPACE_OF_empty	""
//gsoap empty schema namespace:	
//gsoap empty schema form:	unqualified

#define SOAP_NAMESPACE_OF_empty	""
//gsoap empty schema namespace:	
//gsoap empty schema form:	unqualified

#define SOAP_NAMESPACE_OF_empty	""
//gsoap empty schema namespace:	
//gsoap empty schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://xml.netbeans.org/schema/abxProtocol"
//gsoap ns2   schema namespace:	http://xml.netbeans.org/schema/abxProtocol
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://xml.netbeans.org/schema/abxDynaminorg"
//gsoap ns3   schema namespace:	http://xml.netbeans.org/schema/abxDynaminorg
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://xml.netbeans.org/schema/abxCan"
//gsoap ns4   schema namespace:	http://xml.netbeans.org/schema/abxCan
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://ws.abx/"
//gsoap ns1   schema namespace:	http://ws.abx/
//gsoap ns1   schema form:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
	struct soap *soap;
};

/// Class wrapper for built-in type "xs:base64Binary" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__base64Binary_ to check runtime type (see soapStub.h)
class xsd__base64Binary_ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item;                       
};

/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;                       
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;                       
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;                       
};

/// Class wrapper for built-in type "xs:long" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__long to check runtime type (see soapStub.h)
class xsd__long : public xsd__anyType
{ public:
    LONG64                               __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    char*                                __item;                       
};

/// Class wrapper for built-in type "xs:unsignedInt" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__unsignedInt to check runtime type (see soapStub.h)
class xsd__unsignedInt : public xsd__anyType
{ public:
    unsigned int                         __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns2__abxProtocolResult.
class ns2__abxProtocolResult;

//  Forward declaration of class ns2__abxProtocolList.
class ns2__abxProtocolList;

//  Forward declaration of class ns2__abxProtocol.
class ns2__abxProtocol;

//  Forward declaration of class ns3__abxDynamicorgRuleList.
class ns3__abxDynamicorgRuleList;

//  Forward declaration of class ns3__abxDynamicorgRule.
class ns3__abxDynamicorgRule;

//  Forward declaration of class ns3__abxDynamicorgRuleElement.
class ns3__abxDynamicorgRuleElement;

//  Forward declaration of class ns3__abxDynamicRuleResult.
class ns3__abxDynamicRuleResult;

//  Forward declaration of class ns3__abxDynorgTypeResult.
class ns3__abxDynorgTypeResult;

//  Forward declaration of class ns3__abxDynamicorgTypeList.
class ns3__abxDynamicorgTypeList;

//  Forward declaration of class ns3__abxDynorgRuleType.
class ns3__abxDynorgRuleType;

//  Forward declaration of class ns4__abxCan.
class ns4__abxCan;

//  Forward declaration of class ns1__DeleteSDKTaskFieldMapping.
class ns1__DeleteSDKTaskFieldMapping;

//  Forward declaration of class ns1__IDtype.
class ns1__IDtype;

//  Forward declaration of class ns1__DeleteSDKTaskFieldMappingResponse.
class ns1__DeleteSDKTaskFieldMappingResponse;

//  Forward declaration of class ns1__abxSDKResult.
class ns1__abxSDKResult;

//  Forward declaration of class ns1__abxSDKTaskList.
class ns1__abxSDKTaskList;

//  Forward declaration of class ns1__abxSDKTask.
class ns1__abxSDKTask;

//  Forward declaration of class ns1__abxSDKWatchFolder.
class ns1__abxSDKWatchFolder;

//  Forward declaration of class ns1__abxSDKTaskFieldMapping.
class ns1__abxSDKTaskFieldMapping;

//  Forward declaration of class ns1__abxSDKTaskFieldMappingRule.
class ns1__abxSDKTaskFieldMappingRule;

//  Forward declaration of class ns1__abxSDKTaskExcelPreviewSheet.
class ns1__abxSDKTaskExcelPreviewSheet;

//  Forward declaration of class ns1__abxSDKTaskExcelPreviewColumn.
class ns1__abxSDKTaskExcelPreviewColumn;

//  Forward declaration of class ns1__abxSDKTaskExcelPreviewRow.
class ns1__abxSDKTaskExcelPreviewRow;

//  Forward declaration of class ns1__abxSDKTaskPDFPreview.
class ns1__abxSDKTaskPDFPreview;

//  Forward declaration of class ns1__abxSDKTaskPDFImage.
class ns1__abxSDKTaskPDFImage;

//  Forward declaration of class ns1__abxSDKTaskValidateData.
class ns1__abxSDKTaskValidateData;

//  Forward declaration of class ns1__abxSDKTaskValidateField.
class ns1__abxSDKTaskValidateField;

//  Forward declaration of class ns1__abxSDKRuleList.
class ns1__abxSDKRuleList;

//  Forward declaration of class ns1__abxSDKRule.
class ns1__abxSDKRule;

//  Forward declaration of class ns1__abxSDKVariableList.
class ns1__abxSDKVariableList;

//  Forward declaration of class ns1__abxSDKVariable.
class ns1__abxSDKVariable;

//  Forward declaration of class ns1__abxSDKWatchFolderDirectoryList.
class ns1__abxSDKWatchFolderDirectoryList;

//  Forward declaration of class ns1__abxSDKWatchFolderDirectory.
class ns1__abxSDKWatchFolderDirectory;

//  Forward declaration of class ns1__RemoveUserByAllGroups.
class ns1__RemoveUserByAllGroups;

//  Forward declaration of class ns1__RemoveUserByAllGroupsResponse.
class ns1__RemoveUserByAllGroupsResponse;

//  Forward declaration of class ns1__abxUserListResult.
class ns1__abxUserListResult;

//  Forward declaration of class ns1__abxUserList.
class ns1__abxUserList;

//  Forward declaration of class ns1__abxUser.
class ns1__abxUser;

//  Forward declaration of class ns1__abxUserConfig.
class ns1__abxUserConfig;

//  Forward declaration of class ns1__abxGroupList.
class ns1__abxGroupList;

//  Forward declaration of class ns1__abxGroup.
class ns1__abxGroup;

//  Forward declaration of class ns1__AddSign.
class ns1__AddSign;

//  Forward declaration of class ns1__abxWorkflow.
class ns1__abxWorkflow;

//  Forward declaration of class ns1__AddSignResponse.
class ns1__AddSignResponse;

//  Forward declaration of class ns1__abxWorkflowResult.
class ns1__abxWorkflowResult;

//  Forward declaration of class ns1__abxWorkflowList.
class ns1__abxWorkflowList;

//  Forward declaration of class ns1__GetUserDetailByUsername.
class ns1__GetUserDetailByUsername;

//  Forward declaration of class ns1__GetUserDetailByUsernameResponse.
class ns1__GetUserDetailByUsernameResponse;

//  Forward declaration of class ns1__AddExpression.
class ns1__AddExpression;

//  Forward declaration of class ns1__abxExpression.
class ns1__abxExpression;

//  Forward declaration of class ns1__abxTranslation.
class ns1__abxTranslation;

//  Forward declaration of class ns1__AddExpressionResponse.
class ns1__AddExpressionResponse;

//  Forward declaration of class ns1__abxExpressionResult.
class ns1__abxExpressionResult;

//  Forward declaration of class ns1__abxExpressionList.
class ns1__abxExpressionList;

//  Forward declaration of class ns1__canModifyRaccoglitore.
class ns1__canModifyRaccoglitore;

//  Forward declaration of class ns1__canModifyRaccoglitoreResponse.
class ns1__canModifyRaccoglitoreResponse;

//  Forward declaration of class ns1__QueryTotAttach.
class ns1__QueryTotAttach;

//  Forward declaration of class ns1__abxQexpression.
class ns1__abxQexpression;

//  Forward declaration of class ns1__abxQnode.
class ns1__abxQnode;

//  Forward declaration of class ns1__abxQField.
class ns1__abxQField;

//  Forward declaration of class ns1__abxField.
class ns1__abxField;

//  Forward declaration of class ns1__abxPermission.
class ns1__abxPermission;

//  Forward declaration of class ns1__abxObjAction.
class ns1__abxObjAction;

//  Forward declaration of class ns1__abxEditPermissionList.
class ns1__abxEditPermissionList;

//  Forward declaration of class ns1__abxEditPermission.
class ns1__abxEditPermission;

//  Forward declaration of class ns1__abxQFieldRange.
class ns1__abxQFieldRange;

//  Forward declaration of class ns1__abxOption4Query.
class ns1__abxOption4Query;

//  Forward declaration of class ns1__abxProtocolUse.
class ns1__abxProtocolUse;

//  Forward declaration of class ns1__QueryTotAttachResponse.
class ns1__QueryTotAttachResponse;

//  Forward declaration of class ns1__abxRetQueryResult.
class ns1__abxRetQueryResult;

//  Forward declaration of class ns1__abxResultsList.
class ns1__abxResultsList;

//  Forward declaration of class ns1__abxResults.
class ns1__abxResults;

//  Forward declaration of class ns1__abxQcHeadList.
class ns1__abxQcHeadList;

//  Forward declaration of class ns1__abxQcHead.
class ns1__abxQcHead;

//  Forward declaration of class ns1__abxQrowList.
class ns1__abxQrowList;

//  Forward declaration of class ns1__abxQrow.
class ns1__abxQrow;

//  Forward declaration of class ns1__GetFileListByCode.
class ns1__GetFileListByCode;

//  Forward declaration of class ns1__GetFileListByCodeResponse.
class ns1__GetFileListByCodeResponse;

//  Forward declaration of class ns1__abxFileResult.
class ns1__abxFileResult;

//  Forward declaration of class ns1__abxFileList.
class ns1__abxFileList;

//  Forward declaration of class ns1__abxFile.
class ns1__abxFile;

//  Forward declaration of class ns1__downloadData.
class ns1__downloadData;

//  Forward declaration of class ns1__uploadData.
class ns1__uploadData;

//  Forward declaration of class ns1__abxAllPermission.
class ns1__abxAllPermission;

//  Forward declaration of class ns1__DestroyRaccoglitore.
class ns1__DestroyRaccoglitore;

//  Forward declaration of class ns1__DestroyRaccoglitoreResponse.
class ns1__DestroyRaccoglitoreResponse;

//  Forward declaration of class ns1__abxRaccoglitoreResult.
class ns1__abxRaccoglitoreResult;

//  Forward declaration of class ns1__abxTemplateList.
class ns1__abxTemplateList;

//  Forward declaration of class ns1__abxTemplate.
class ns1__abxTemplate;

//  Forward declaration of class ns1__abxFieldList.
class ns1__abxFieldList;

//  Forward declaration of class ns1__abxContainerList.
class ns1__abxContainerList;

//  Forward declaration of class ns1__abxContainer.
class ns1__abxContainer;

//  Forward declaration of class ns1__abxMasterDetail.
class ns1__abxMasterDetail;

//  Forward declaration of class ns1__InsertUSFileWithUser.
class ns1__InsertUSFileWithUser;

//  Forward declaration of class ns1__InsertUSFileWithUserResponse.
class ns1__InsertUSFileWithUserResponse;

//  Forward declaration of class ns1__GetSDKLogList.
class ns1__GetSDKLogList;

//  Forward declaration of class ns1__abxLog.
class ns1__abxLog;

//  Forward declaration of class ns1__GetSDKLogListResponse.
class ns1__GetSDKLogListResponse;

//  Forward declaration of class ns1__abxLogResult.
class ns1__abxLogResult;

//  Forward declaration of class ns1__abxLogList.
class ns1__abxLogList;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteFieldList.
class ns1__Fk_USCOREgetRemoteFieldList;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteFieldListResponse.
class ns1__Fk_USCOREgetRemoteFieldListResponse;

//  Forward declaration of class ns1__abxFKResult.
class ns1__abxFKResult;

//  Forward declaration of class ns1__abxFKList.
class ns1__abxFKList;

//  Forward declaration of class ns1__abxFK.
class ns1__abxFK;

//  Forward declaration of class ns1__abxFkDb.
class ns1__abxFkDb;

//  Forward declaration of class ns1__abxFKDbRecord.
class ns1__abxFKDbRecord;

//  Forward declaration of class ns1__abxFKDbField.
class ns1__abxFKDbField;

//  Forward declaration of class ns1__abxFKFieldMap.
class ns1__abxFKFieldMap;

//  Forward declaration of class ns1__abxFKTableFields.
class ns1__abxFKTableFields;

//  Forward declaration of class ns1__abxRmDatabaseList.
class ns1__abxRmDatabaseList;

//  Forward declaration of class ns1__abxRmTableList.
class ns1__abxRmTableList;

//  Forward declaration of class ns1__abxRmViewList.
class ns1__abxRmViewList;

//  Forward declaration of class ns1__abxRmFieldList.
class ns1__abxRmFieldList;

//  Forward declaration of class ns1__abxMultiFKList.
class ns1__abxMultiFKList;

//  Forward declaration of class ns1__abxMultiFK.
class ns1__abxMultiFK;

//  Forward declaration of class ns1__abxFkArchiboxRacc.
class ns1__abxFkArchiboxRacc;

//  Forward declaration of class ns1__abxFKRaccRecord.
class ns1__abxFKRaccRecord;

//  Forward declaration of class ns1__abxFkArchiboxUtenti.
class ns1__abxFkArchiboxUtenti;

//  Forward declaration of class ns1__abxFKUtentiRecord.
class ns1__abxFKUtentiRecord;

//  Forward declaration of class ns1__abxFKUtentiField.
class ns1__abxFKUtentiField;

//  Forward declaration of class ns1__GetAllContainerExpressions.
class ns1__GetAllContainerExpressions;

//  Forward declaration of class ns1__GetAllContainerExpressionsResponse.
class ns1__GetAllContainerExpressionsResponse;

//  Forward declaration of class ns1__canDeleteDynorg.
class ns1__canDeleteDynorg;

//  Forward declaration of class ns1__canDeleteDynorgResponse.
class ns1__canDeleteDynorgResponse;

//  Forward declaration of class ns1__GetDataTPFileListByContainer.
class ns1__GetDataTPFileListByContainer;

//  Forward declaration of class ns1__GetDataTPFileListByContainerResponse.
class ns1__GetDataTPFileListByContainerResponse;

//  Forward declaration of class ns1__abxFileTpResult.
class ns1__abxFileTpResult;

//  Forward declaration of class ns1__abxFileTpList.
class ns1__abxFileTpList;

//  Forward declaration of class ns1__abxFileTp.
class ns1__abxFileTp;

//  Forward declaration of class ns1__bindingExcel.
class ns1__bindingExcel;

//  Forward declaration of class ns1__bindingWord.
class ns1__bindingWord;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREtestConnection.
class ns1__Fk_USCOREDB_USCOREtestConnection;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREtestConnectionResponse.
class ns1__Fk_USCOREDB_USCOREtestConnectionResponse;

//  Forward declaration of class ns1__ModifyContainer.
class ns1__ModifyContainer;

//  Forward declaration of class ns1__abxVersioningList.
class ns1__abxVersioningList;

//  Forward declaration of class ns1__abxVersioning.
class ns1__abxVersioning;

//  Forward declaration of class ns1__ModifyContainerResponse.
class ns1__ModifyContainerResponse;

//  Forward declaration of class ns1__abxContainerResult.
class ns1__abxContainerResult;

//  Forward declaration of class ns1__GetSDKImagesFromPDFTemplate.
class ns1__GetSDKImagesFromPDFTemplate;

//  Forward declaration of class ns1__GetSDKImagesFromPDFTemplateResponse.
class ns1__GetSDKImagesFromPDFTemplateResponse;

//  Forward declaration of class ns1__GetListMarker.
class ns1__GetListMarker;

//  Forward declaration of class ns1__GetListMarkerResponse.
class ns1__GetListMarkerResponse;

//  Forward declaration of class ns1__GetDataFileContainerDetail.
class ns1__GetDataFileContainerDetail;

//  Forward declaration of class ns1__GetDataFileContainerDetailResponse.
class ns1__GetDataFileContainerDetailResponse;

//  Forward declaration of class ns1__GetSDKTextFromTemplate.
class ns1__GetSDKTextFromTemplate;

//  Forward declaration of class ns1__GetSDKTextFromTemplateResponse.
class ns1__GetSDKTextFromTemplateResponse;

//  Forward declaration of class ns1__GetDataFileListWA.
class ns1__GetDataFileListWA;

//  Forward declaration of class ns1__GetDataFileListWAResponse.
class ns1__GetDataFileListWAResponse;

//  Forward declaration of class ns1__ModifyTemplate.
class ns1__ModifyTemplate;

//  Forward declaration of class ns1__ModifyTemplateResponse.
class ns1__ModifyTemplateResponse;

//  Forward declaration of class ns1__abxTemplateResult.
class ns1__abxTemplateResult;

//  Forward declaration of class ns1__CanInsertFileContainer.
class ns1__CanInsertFileContainer;

//  Forward declaration of class ns1__CanInsertFileContainerResponse.
class ns1__CanInsertFileContainerResponse;

//  Forward declaration of class ns1__ModifyLinkContainerToContainer.
class ns1__ModifyLinkContainerToContainer;

//  Forward declaration of class ns1__ModifyLinkContainerToContainerResponse.
class ns1__ModifyLinkContainerToContainerResponse;

//  Forward declaration of class ns1__abxLinkResult.
class ns1__abxLinkResult;

//  Forward declaration of class ns1__abxLinkList.
class ns1__abxLinkList;

//  Forward declaration of class ns1__abxLink.
class ns1__abxLink;

//  Forward declaration of class ns1__CreateDynorg.
class ns1__CreateDynorg;

//  Forward declaration of class ns1__CreateDynorgResponse.
class ns1__CreateDynorgResponse;

//  Forward declaration of class ns1__GetInstancePathname.
class ns1__GetInstancePathname;

//  Forward declaration of class ns1__GetInstancePathnameResponse.
class ns1__GetInstancePathnameResponse;

//  Forward declaration of class ns1__abxGipResult.
class ns1__abxGipResult;

//  Forward declaration of class ns1__ValidateSDKTask.
class ns1__ValidateSDKTask;

//  Forward declaration of class ns1__ValidateSDKTaskResponse.
class ns1__ValidateSDKTaskResponse;

//  Forward declaration of class ns1__Login.
class ns1__Login;

//  Forward declaration of class ns1__abxLoginIdentity.
class ns1__abxLoginIdentity;

//  Forward declaration of class ns1__LoginResponse.
class ns1__LoginResponse;

//  Forward declaration of class ns1__abxLoginResult.
class ns1__abxLoginResult;

//  Forward declaration of class ns1__abxLoginInfo.
class ns1__abxLoginInfo;

//  Forward declaration of class ns1__GetFieldList.
class ns1__GetFieldList;

//  Forward declaration of class ns1__GetFieldListResponse.
class ns1__GetFieldListResponse;

//  Forward declaration of class ns1__abxFieldResult.
class ns1__abxFieldResult;

//  Forward declaration of class ns1__DownloadUSGetNext.
class ns1__DownloadUSGetNext;

//  Forward declaration of class ns1__DownloadUSGetNextResponse.
class ns1__DownloadUSGetNextResponse;

//  Forward declaration of class ns1__ModifyFileDescription.
class ns1__ModifyFileDescription;

//  Forward declaration of class ns1__ModifyFileDescriptionResponse.
class ns1__ModifyFileDescriptionResponse;

//  Forward declaration of class ns1__canCreateField.
class ns1__canCreateField;

//  Forward declaration of class ns1__canCreateFieldResponse.
class ns1__canCreateFieldResponse;

//  Forward declaration of class ns1__InsertData.
class ns1__InsertData;

//  Forward declaration of class ns1__abxDataList.
class ns1__abxDataList;

//  Forward declaration of class ns1__abxData.
class ns1__abxData;

//  Forward declaration of class ns1__InsertDataResponse.
class ns1__InsertDataResponse;

//  Forward declaration of class ns1__abxDataResult.
class ns1__abxDataResult;

//  Forward declaration of class ns1__UploadWFSendChunk.
class ns1__UploadWFSendChunk;

//  Forward declaration of class ns1__UploadWFSendChunkResponse.
class ns1__UploadWFSendChunkResponse;

//  Forward declaration of class ns1__GetDataLimit.
class ns1__GetDataLimit;

//  Forward declaration of class ns1__GetDataLimitResponse.
class ns1__GetDataLimitResponse;

//  Forward declaration of class ns1__DownloadGetNextWA.
class ns1__DownloadGetNextWA;

//  Forward declaration of class ns1__DownloadGetNextWAResponse.
class ns1__DownloadGetNextWAResponse;

//  Forward declaration of class ns1__GetDataTPFileListByName.
class ns1__GetDataTPFileListByName;

//  Forward declaration of class ns1__GetDataTPFileListByNameResponse.
class ns1__GetDataTPFileListByNameResponse;

//  Forward declaration of class ns1__DownloadUSFile.
class ns1__DownloadUSFile;

//  Forward declaration of class ns1__DownloadUSFileResponse.
class ns1__DownloadUSFileResponse;

//  Forward declaration of class ns1__SetTmpTPUploadPath.
class ns1__SetTmpTPUploadPath;

//  Forward declaration of class ns1__SetTmpTPUploadPathResponse.
class ns1__SetTmpTPUploadPathResponse;

//  Forward declaration of class ns1__GetGroupsListByUser.
class ns1__GetGroupsListByUser;

//  Forward declaration of class ns1__GetGroupsListByUserResponse.
class ns1__GetGroupsListByUserResponse;

//  Forward declaration of class ns1__DownloadWFEndFile.
class ns1__DownloadWFEndFile;

//  Forward declaration of class ns1__DownloadWFEndFileResponse.
class ns1__DownloadWFEndFileResponse;

//  Forward declaration of class ns1__canDeleteTemplate.
class ns1__canDeleteTemplate;

//  Forward declaration of class ns1__canDeleteTemplateResponse.
class ns1__canDeleteTemplateResponse;

//  Forward declaration of class ns1__DeleteSDKLog.
class ns1__DeleteSDKLog;

//  Forward declaration of class ns1__DeleteSDKLogResponse.
class ns1__DeleteSDKLogResponse;

//  Forward declaration of class ns1__CopyData.
class ns1__CopyData;

//  Forward declaration of class ns1__CopyDataResponse.
class ns1__CopyDataResponse;

//  Forward declaration of class ns1__CreateSDKTaskWatchFolder.
class ns1__CreateSDKTaskWatchFolder;

//  Forward declaration of class ns1__CreateSDKTaskWatchFolderResponse.
class ns1__CreateSDKTaskWatchFolderResponse;

//  Forward declaration of class ns1__GetArchiBoxInfo.
class ns1__GetArchiBoxInfo;

//  Forward declaration of class ns1__GetArchiBoxInfoResponse.
class ns1__GetArchiBoxInfoResponse;

//  Forward declaration of class ns1__abxArchiBoxDomainResult.
class ns1__abxArchiBoxDomainResult;

//  Forward declaration of class ns1__abxArchiBoxDomainList.
class ns1__abxArchiBoxDomainList;

//  Forward declaration of class ns1__abxArchiBoxDomain.
class ns1__abxArchiBoxDomain;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecordByIndexDesc.
class ns1__Fk_USCOREgetCountAllRecordByIndexDesc;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse.
class ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse;

//  Forward declaration of class ns1__GetSDKTaskFieldMapping.
class ns1__GetSDKTaskFieldMapping;

//  Forward declaration of class ns1__GetSDKTaskFieldMappingResponse.
class ns1__GetSDKTaskFieldMappingResponse;

//  Forward declaration of class ns1__DeleteTPFileByCode.
class ns1__DeleteTPFileByCode;

//  Forward declaration of class ns1__DeleteTPFileByCodeResponse.
class ns1__DeleteTPFileByCodeResponse;

//  Forward declaration of class ns1__MoveData.
class ns1__MoveData;

//  Forward declaration of class ns1__MoveDataResponse.
class ns1__MoveDataResponse;

//  Forward declaration of class ns1__ModifyUser.
class ns1__ModifyUser;

//  Forward declaration of class ns1__ModifyUserResponse.
class ns1__ModifyUserResponse;

//  Forward declaration of class ns1__GetSchedulerTasks.
class ns1__GetSchedulerTasks;

//  Forward declaration of class ns1__GetSchedulerTasksResponse.
class ns1__GetSchedulerTasksResponse;

//  Forward declaration of class ns1__abxSchedulerResult.
class ns1__abxSchedulerResult;

//  Forward declaration of class ns1__abxSchedulerTaskList.
class ns1__abxSchedulerTaskList;

//  Forward declaration of class ns1__abxSchedulerTask.
class ns1__abxSchedulerTask;

//  Forward declaration of class ns1__ModifyField.
class ns1__ModifyField;

//  Forward declaration of class ns1__abxCombo.
class ns1__abxCombo;

//  Forward declaration of class ns1__abxComboRecord.
class ns1__abxComboRecord;

//  Forward declaration of class ns1__ModifyFieldResponse.
class ns1__ModifyFieldResponse;

//  Forward declaration of class ns1__ExistUserByUsername.
class ns1__ExistUserByUsername;

//  Forward declaration of class ns1__ExistUserByUsernameResponse.
class ns1__ExistUserByUsernameResponse;

//  Forward declaration of class ns1__GetDownloadDetailByContId.
class ns1__GetDownloadDetailByContId;

//  Forward declaration of class ns1__GetDownloadDetailByContIdResponse.
class ns1__GetDownloadDetailByContIdResponse;

//  Forward declaration of class ns1__GetUserListActiveDirectory.
class ns1__GetUserListActiveDirectory;

//  Forward declaration of class ns1__GetUserListActiveDirectoryResponse.
class ns1__GetUserListActiveDirectoryResponse;

//  Forward declaration of class ns1__CreateSDKTaskFieldMapping.
class ns1__CreateSDKTaskFieldMapping;

//  Forward declaration of class ns1__CreateSDKTaskFieldMappingResponse.
class ns1__CreateSDKTaskFieldMappingResponse;

//  Forward declaration of class ns1__RegenerateDynOrg.
class ns1__RegenerateDynOrg;

//  Forward declaration of class ns1__RegenerateDynOrgResponse.
class ns1__RegenerateDynOrgResponse;

//  Forward declaration of class ns1__DownloadUSGetChunk.
class ns1__DownloadUSGetChunk;

//  Forward declaration of class ns1__DownloadUSGetChunkResponse.
class ns1__DownloadUSGetChunkResponse;

//  Forward declaration of class ns1__GetSchedulerTaskByTaskTypeId.
class ns1__GetSchedulerTaskByTaskTypeId;

//  Forward declaration of class ns1__GetSchedulerTaskByTaskTypeIdResponse.
class ns1__GetSchedulerTaskByTaskTypeIdResponse;

//  Forward declaration of class ns1__GetProtocolByNameDesc.
class ns1__GetProtocolByNameDesc;

//  Forward declaration of class ns1__GetProtocolByNameDescResponse.
class ns1__GetProtocolByNameDescResponse;

//  Forward declaration of class ns1__canDeleteRaccoglitore.
class ns1__canDeleteRaccoglitore;

//  Forward declaration of class ns1__canDeleteRaccoglitoreResponse.
class ns1__canDeleteRaccoglitoreResponse;

//  Forward declaration of class ns1__GetDynorgTypeList.
class ns1__GetDynorgTypeList;

//  Forward declaration of class ns1__GetDynorgTypeListResponse.
class ns1__GetDynorgTypeListResponse;

//  Forward declaration of class ns1__GetTemplateList.
class ns1__GetTemplateList;

//  Forward declaration of class ns1__GetTemplateListResponse.
class ns1__GetTemplateListResponse;

//  Forward declaration of class ns1__UploadUSSendChunk.
class ns1__UploadUSSendChunk;

//  Forward declaration of class ns1__UploadUSSendChunkResponse.
class ns1__UploadUSSendChunkResponse;

//  Forward declaration of class ns1__GetInstanceNameFromLinks.
class ns1__GetInstanceNameFromLinks;

//  Forward declaration of class ns1__GetInstanceNameFromLinksResponse.
class ns1__GetInstanceNameFromLinksResponse;

//  Forward declaration of class ns1__GetTreeForSecurity.
class ns1__GetTreeForSecurity;

//  Forward declaration of class ns1__abxTreeParam.
class ns1__abxTreeParam;

//  Forward declaration of class ns1__GetTreeForSecurityResponse.
class ns1__GetTreeForSecurityResponse;

//  Forward declaration of class ns1__abxTreeResult.
class ns1__abxTreeResult;

//  Forward declaration of class ns1__abxTree.
class ns1__abxTree;

//  Forward declaration of class ns1__abxTreeElement.
class ns1__abxTreeElement;

//  Forward declaration of class ns1__Logout.
class ns1__Logout;

//  Forward declaration of class ns1__LogoutResponse.
class ns1__LogoutResponse;

//  Forward declaration of class ns1__DeleteGroup.
class ns1__DeleteGroup;

//  Forward declaration of class ns1__DeleteGroupResponse.
class ns1__DeleteGroupResponse;

//  Forward declaration of class ns1__abxGroupResult.
class ns1__abxGroupResult;

//  Forward declaration of class ns1__GetFileListByCodeForSecurity.
class ns1__GetFileListByCodeForSecurity;

//  Forward declaration of class ns1__GetFileListByCodeForSecurityResponse.
class ns1__GetFileListByCodeForSecurityResponse;

//  Forward declaration of class ns1__SetFileAvailable.
class ns1__SetFileAvailable;

//  Forward declaration of class ns1__SetFileAvailableResponse.
class ns1__SetFileAvailableResponse;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecord.
class ns1__Fk_USCOREgetCountAllRecord;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecordResponse.
class ns1__Fk_USCOREgetCountAllRecordResponse;

//  Forward declaration of class ns1__GetExpression.
class ns1__GetExpression;

//  Forward declaration of class ns1__GetExpressionResponse.
class ns1__GetExpressionResponse;

//  Forward declaration of class ns1__DeleteField.
class ns1__DeleteField;

//  Forward declaration of class ns1__DeleteFieldResponse.
class ns1__DeleteFieldResponse;

//  Forward declaration of class ns1__GetContSignByUser.
class ns1__GetContSignByUser;

//  Forward declaration of class ns1__GetContSignByUserResponse.
class ns1__GetContSignByUserResponse;

//  Forward declaration of class ns1__GetSDKTasks.
class ns1__GetSDKTasks;

//  Forward declaration of class ns1__GetSDKTasksResponse.
class ns1__GetSDKTasksResponse;

//  Forward declaration of class ns1__Fk_USCOREgetColumnsName.
class ns1__Fk_USCOREgetColumnsName;

//  Forward declaration of class ns1__Fk_USCOREgetColumnsNameResponse.
class ns1__Fk_USCOREgetColumnsNameResponse;

//  Forward declaration of class ns1__Fk_USCOREcreate.
class ns1__Fk_USCOREcreate;

//  Forward declaration of class ns1__Fk_USCOREcreateResponse.
class ns1__Fk_USCOREcreateResponse;

//  Forward declaration of class ns1__InsertFileContainer.
class ns1__InsertFileContainer;

//  Forward declaration of class ns1__InsertFileContainerResponse.
class ns1__InsertFileContainerResponse;

//  Forward declaration of class ns1__GetContainerLinks.
class ns1__GetContainerLinks;

//  Forward declaration of class ns1__GetContainerLinksResponse.
class ns1__GetContainerLinksResponse;

//  Forward declaration of class ns1__DeleteTPFileById.
class ns1__DeleteTPFileById;

//  Forward declaration of class ns1__DeleteTPFileByIdResponse.
class ns1__DeleteTPFileByIdResponse;

//  Forward declaration of class ns1__canDeleteContainer.
class ns1__canDeleteContainer;

//  Forward declaration of class ns1__canDeleteContainerResponse.
class ns1__canDeleteContainerResponse;

//  Forward declaration of class ns1__IfFileExist.
class ns1__IfFileExist;

//  Forward declaration of class ns1__IfFileExistResponse.
class ns1__IfFileExistResponse;

//  Forward declaration of class ns1__SetInstanceReplication.
class ns1__SetInstanceReplication;

//  Forward declaration of class ns1__abxReplicationList.
class ns1__abxReplicationList;

//  Forward declaration of class ns1__abxArchiBoxInDomain.
class ns1__abxArchiBoxInDomain;

//  Forward declaration of class ns1__SetInstanceReplicationResponse.
class ns1__SetInstanceReplicationResponse;

//  Forward declaration of class ns1__abxReplicationResult.
class ns1__abxReplicationResult;

//  Forward declaration of class ns1__DownloadTPFile.
class ns1__DownloadTPFile;

//  Forward declaration of class ns1__DownloadTPFileResponse.
class ns1__DownloadTPFileResponse;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteTableList.
class ns1__Fk_USCOREgetRemoteTableList;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteTableListResponse.
class ns1__Fk_USCOREgetRemoteTableListResponse;

//  Forward declaration of class ns1__GetDataFileListOnlyLastVersion.
class ns1__GetDataFileListOnlyLastVersion;

//  Forward declaration of class ns1__GetDataFileListOnlyLastVersionResponse.
class ns1__GetDataFileListOnlyLastVersionResponse;

//  Forward declaration of class ns1__DelMarker.
class ns1__DelMarker;

//  Forward declaration of class ns1__DelMarkerResponse.
class ns1__DelMarkerResponse;

//  Forward declaration of class ns1__ModDefaultProcess.
class ns1__ModDefaultProcess;

//  Forward declaration of class ns1__ModDefaultProcessResponse.
class ns1__ModDefaultProcessResponse;

//  Forward declaration of class ns1__canModifyTemplate.
class ns1__canModifyTemplate;

//  Forward declaration of class ns1__canModifyTemplateResponse.
class ns1__canModifyTemplateResponse;

//  Forward declaration of class ns1__GetTranslationByRangeLabelCode.
class ns1__GetTranslationByRangeLabelCode;

//  Forward declaration of class ns1__GetTranslationByRangeLabelCodeResponse.
class ns1__GetTranslationByRangeLabelCodeResponse;

//  Forward declaration of class ns1__abxTranslationResult.
class ns1__abxTranslationResult;

//  Forward declaration of class ns1__abxTranslationList.
class ns1__abxTranslationList;

//  Forward declaration of class ns1__GetCountDocumentLinks.
class ns1__GetCountDocumentLinks;

//  Forward declaration of class ns1__GetCountDocumentLinksResponse.
class ns1__GetCountDocumentLinksResponse;

//  Forward declaration of class ns1__GetSDKRules.
class ns1__GetSDKRules;

//  Forward declaration of class ns1__GetSDKRulesResponse.
class ns1__GetSDKRulesResponse;

//  Forward declaration of class ns1__DeleteFileContainer.
class ns1__DeleteFileContainer;

//  Forward declaration of class ns1__DeleteFileContainerResponse.
class ns1__DeleteFileContainerResponse;

//  Forward declaration of class ns1__GetUploadDetailByFilecode.
class ns1__GetUploadDetailByFilecode;

//  Forward declaration of class ns1__GetUploadDetailByFilecodeResponse.
class ns1__GetUploadDetailByFilecodeResponse;

//  Forward declaration of class ns1__Ping.
class ns1__Ping;

//  Forward declaration of class ns1__PingResponse.
class ns1__PingResponse;

//  Forward declaration of class ns1__AbxPingResult.
class ns1__AbxPingResult;

//  Forward declaration of class ns1__CanAddNewYear.
class ns1__CanAddNewYear;

//  Forward declaration of class ns1__CanAddNewYearResponse.
class ns1__CanAddNewYearResponse;

//  Forward declaration of class ns1__InsertUser.
class ns1__InsertUser;

//  Forward declaration of class ns1__InsertUserResponse.
class ns1__InsertUserResponse;

//  Forward declaration of class ns1__GetDataUSFileListByUsername.
class ns1__GetDataUSFileListByUsername;

//  Forward declaration of class ns1__GetDataUSFileListByUsernameResponse.
class ns1__GetDataUSFileListByUsernameResponse;

//  Forward declaration of class ns1__canModifyField.
class ns1__canModifyField;

//  Forward declaration of class ns1__canModifyFieldResponse.
class ns1__canModifyFieldResponse;

//  Forward declaration of class ns1__ModifyFilter.
class ns1__ModifyFilter;

//  Forward declaration of class ns1__AbxFilter.
class ns1__AbxFilter;

//  Forward declaration of class ns1__ModifyFilterResponse.
class ns1__ModifyFilterResponse;

//  Forward declaration of class ns1__AbxFilterResult.
class ns1__AbxFilterResult;

//  Forward declaration of class ns1__AbxFilterList.
class ns1__AbxFilterList;

//  Forward declaration of class ns1__InsertGroup.
class ns1__InsertGroup;

//  Forward declaration of class ns1__InsertGroupResponse.
class ns1__InsertGroupResponse;

//  Forward declaration of class ns1__GetProtocolById.
class ns1__GetProtocolById;

//  Forward declaration of class ns1__GetProtocolByIdResponse.
class ns1__GetProtocolByIdResponse;

//  Forward declaration of class ns1__GetData.
class ns1__GetData;

//  Forward declaration of class ns1__GetDataResponse.
class ns1__GetDataResponse;

//  Forward declaration of class ns1__canDeleteField.
class ns1__canDeleteField;

//  Forward declaration of class ns1__canDeleteFieldResponse.
class ns1__canDeleteFieldResponse;

//  Forward declaration of class ns1__AddDefaultProcess.
class ns1__AddDefaultProcess;

//  Forward declaration of class ns1__AddDefaultProcessResponse.
class ns1__AddDefaultProcessResponse;

//  Forward declaration of class ns1__ValidateSession.
class ns1__ValidateSession;

//  Forward declaration of class ns1__ValidateSessionResponse.
class ns1__ValidateSessionResponse;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecordByDesc.
class ns1__Fk_USCOREgetCountAllRecordByDesc;

//  Forward declaration of class ns1__Fk_USCOREgetCountAllRecordByDescResponse.
class ns1__Fk_USCOREgetCountAllRecordByDescResponse;

//  Forward declaration of class ns1__SchedulerTaskScheduleProcessed.
class ns1__SchedulerTaskScheduleProcessed;

//  Forward declaration of class ns1__SchedulerTaskScheduleProcessedResponse.
class ns1__SchedulerTaskScheduleProcessedResponse;

//  Forward declaration of class ns1__EditProtocol.
class ns1__EditProtocol;

//  Forward declaration of class ns1__EditProtocolResponse.
class ns1__EditProtocolResponse;

//  Forward declaration of class ns1__DownloadWFFile.
class ns1__DownloadWFFile;

//  Forward declaration of class ns1__DownloadWFFileResponse.
class ns1__DownloadWFFileResponse;

//  Forward declaration of class ns1__InsertLinkContainerToContainer.
class ns1__InsertLinkContainerToContainer;

//  Forward declaration of class ns1__InsertLinkContainerToContainerResponse.
class ns1__InsertLinkContainerToContainerResponse;

//  Forward declaration of class ns1__GetDataCountWithoutPermission.
class ns1__GetDataCountWithoutPermission;

//  Forward declaration of class ns1__GetDataCountWithoutPermissionResponse.
class ns1__GetDataCountWithoutPermissionResponse;

//  Forward declaration of class ns1__GetDataTPFileDetail.
class ns1__GetDataTPFileDetail;

//  Forward declaration of class ns1__GetDataTPFileDetailResponse.
class ns1__GetDataTPFileDetailResponse;

//  Forward declaration of class ns1__GetSign.
class ns1__GetSign;

//  Forward declaration of class ns1__GetSignResponse.
class ns1__GetSignResponse;

//  Forward declaration of class ns1__UploadUSEndFile.
class ns1__UploadUSEndFile;

//  Forward declaration of class ns1__UploadUSEndFileResponse.
class ns1__UploadUSEndFileResponse;

//  Forward declaration of class ns1__DelDefaultProcess.
class ns1__DelDefaultProcess;

//  Forward declaration of class ns1__DelDefaultProcessResponse.
class ns1__DelDefaultProcessResponse;

//  Forward declaration of class ns1__GetDataCountWithPermission.
class ns1__GetDataCountWithPermission;

//  Forward declaration of class ns1__GetDataCountWithPermissionResponse.
class ns1__GetDataCountWithPermissionResponse;

//  Forward declaration of class ns1__GetLanguages.
class ns1__GetLanguages;

//  Forward declaration of class ns1__GetLanguagesResponse.
class ns1__GetLanguagesResponse;

//  Forward declaration of class ns1__abxLanguageResult.
class ns1__abxLanguageResult;

//  Forward declaration of class ns1__abxLanguageList.
class ns1__abxLanguageList;

//  Forward declaration of class ns1__abxLanguage.
class ns1__abxLanguage;

//  Forward declaration of class ns1__GetExpressionValue.
class ns1__GetExpressionValue;

//  Forward declaration of class ns1__GetExpressionValueResponse.
class ns1__GetExpressionValueResponse;

//  Forward declaration of class ns1__CanDeleteLinkFromContainer.
class ns1__CanDeleteLinkFromContainer;

//  Forward declaration of class ns1__CanDeleteLinkFromContainerResponse.
class ns1__CanDeleteLinkFromContainerResponse;

//  Forward declaration of class ns1__DeleteTemplate.
class ns1__DeleteTemplate;

//  Forward declaration of class ns1__DeleteTemplateResponse.
class ns1__DeleteTemplateResponse;

//  Forward declaration of class ns1__TestScritturaLettura.
class ns1__TestScritturaLettura;

//  Forward declaration of class ns1__TestScritturaLetturaResponse.
class ns1__TestScritturaLetturaResponse;

//  Forward declaration of class ns1__DeleteRaccoglitore.
class ns1__DeleteRaccoglitore;

//  Forward declaration of class ns1__DeleteRaccoglitoreResponse.
class ns1__DeleteRaccoglitoreResponse;

//  Forward declaration of class ns1__DeleteFile.
class ns1__DeleteFile;

//  Forward declaration of class ns1__DeleteFileResponse.
class ns1__DeleteFileResponse;

//  Forward declaration of class ns1__ModUserSettings.
class ns1__ModUserSettings;

//  Forward declaration of class ns1__ModUserSettingsResponse.
class ns1__ModUserSettingsResponse;

//  Forward declaration of class ns1__InsertLinkContainerToDocument.
class ns1__InsertLinkContainerToDocument;

//  Forward declaration of class ns1__InsertLinkContainerToDocumentResponse.
class ns1__InsertLinkContainerToDocumentResponse;

//  Forward declaration of class ns1__CopyFile.
class ns1__CopyFile;

//  Forward declaration of class ns1__CopyFileResponse.
class ns1__CopyFileResponse;

//  Forward declaration of class ns1__GetTree.
class ns1__GetTree;

//  Forward declaration of class ns1__GetTreeResponse.
class ns1__GetTreeResponse;

//  Forward declaration of class ns1__CanInsertLinkDocumentToDocument.
class ns1__CanInsertLinkDocumentToDocument;

//  Forward declaration of class ns1__CanInsertLinkDocumentToDocumentResponse.
class ns1__CanInsertLinkDocumentToDocumentResponse;

//  Forward declaration of class ns1__GetDataUSFileDetail.
class ns1__GetDataUSFileDetail;

//  Forward declaration of class ns1__GetDataUSFileDetailResponse.
class ns1__GetDataUSFileDetailResponse;

//  Forward declaration of class ns1__ModUser.
class ns1__ModUser;

//  Forward declaration of class ns1__ModUserResponse.
class ns1__ModUserResponse;

//  Forward declaration of class ns1__DeleteSchedulerTaskSchedule.
class ns1__DeleteSchedulerTaskSchedule;

//  Forward declaration of class ns1__DeleteSchedulerTaskScheduleResponse.
class ns1__DeleteSchedulerTaskScheduleResponse;

//  Forward declaration of class ns1__AddMarker.
class ns1__AddMarker;

//  Forward declaration of class ns1__AddMarkerResponse.
class ns1__AddMarkerResponse;

//  Forward declaration of class ns1__GetInstanceReplicationStatus.
class ns1__GetInstanceReplicationStatus;

//  Forward declaration of class ns1__GetInstanceReplicationStatusResponse.
class ns1__GetInstanceReplicationStatusResponse;

//  Forward declaration of class ns1__GetDocumentLinks.
class ns1__GetDocumentLinks;

//  Forward declaration of class ns1__GetDocumentLinksResponse.
class ns1__GetDocumentLinksResponse;

//  Forward declaration of class ns1__Fk_USCOREgetPars.
class ns1__Fk_USCOREgetPars;

//  Forward declaration of class ns1__Fk_USCOREgetParsResponse.
class ns1__Fk_USCOREgetParsResponse;

//  Forward declaration of class ns1__CheckOut_USCOREattachContainer.
class ns1__CheckOut_USCOREattachContainer;

//  Forward declaration of class ns1__CheckOut_USCOREattachContainerResponse.
class ns1__CheckOut_USCOREattachContainerResponse;

//  Forward declaration of class ns1__abxCheckinResult.
class ns1__abxCheckinResult;

//  Forward declaration of class ns1__abxCheckinList.
class ns1__abxCheckinList;

//  Forward declaration of class ns1__abxCheckin.
class ns1__abxCheckin;

//  Forward declaration of class ns1__GetTranslationByMessageId.
class ns1__GetTranslationByMessageId;

//  Forward declaration of class ns1__GetTranslationByMessageIdResponse.
class ns1__GetTranslationByMessageIdResponse;

//  Forward declaration of class ns1__GetSDKTaskExcelPreview.
class ns1__GetSDKTaskExcelPreview;

//  Forward declaration of class ns1__GetSDKTaskExcelPreviewResponse.
class ns1__GetSDKTaskExcelPreviewResponse;

//  Forward declaration of class ns1__CheckIn_USCOREattach.
class ns1__CheckIn_USCOREattach;

//  Forward declaration of class ns1__CheckIn_USCOREattachResponse.
class ns1__CheckIn_USCOREattachResponse;

//  Forward declaration of class ns1__ModifyData.
class ns1__ModifyData;

//  Forward declaration of class ns1__ModifyDataResponse.
class ns1__ModifyDataResponse;

//  Forward declaration of class ns1__GetDownloadDetailByCont.
class ns1__GetDownloadDetailByCont;

//  Forward declaration of class ns1__GetDownloadDetailByContResponse.
class ns1__GetDownloadDetailByContResponse;

//  Forward declaration of class ns1__SetTmpWFUploadPath.
class ns1__SetTmpWFUploadPath;

//  Forward declaration of class ns1__SetTmpWFUploadPathResponse.
class ns1__SetTmpWFUploadPathResponse;

//  Forward declaration of class ns1__Fk_USCOREgetParsAllFk.
class ns1__Fk_USCOREgetParsAllFk;

//  Forward declaration of class ns1__Fk_USCOREgetParsAllFkResponse.
class ns1__Fk_USCOREgetParsAllFkResponse;

//  Forward declaration of class ns1__GetLinksToDocument.
class ns1__GetLinksToDocument;

//  Forward declaration of class ns1__GetLinksToDocumentResponse.
class ns1__GetLinksToDocumentResponse;

//  Forward declaration of class ns1__GetDownloadDetailByDataId.
class ns1__GetDownloadDetailByDataId;

//  Forward declaration of class ns1__GetDownloadDetailByDataIdResponse.
class ns1__GetDownloadDetailByDataIdResponse;

//  Forward declaration of class ns1__UploadEndFileContainer.
class ns1__UploadEndFileContainer;

//  Forward declaration of class ns1__UploadEndFileContainerResponse.
class ns1__UploadEndFileContainerResponse;

//  Forward declaration of class ns1__GetArchiBoxInDomain.
class ns1__GetArchiBoxInDomain;

//  Forward declaration of class ns1__GetArchiBoxInDomainResponse.
class ns1__GetArchiBoxInDomainResponse;

//  Forward declaration of class ns1__GetDataWAById.
class ns1__GetDataWAById;

//  Forward declaration of class ns1__GetDataWAByIdResponse.
class ns1__GetDataWAByIdResponse;

//  Forward declaration of class ns1__Fk_USCOREWS_USCOREinsert.
class ns1__Fk_USCOREWS_USCOREinsert;

//  Forward declaration of class ns1__Fk_USCOREWS_USCOREinsertResponse.
class ns1__Fk_USCOREWS_USCOREinsertResponse;

//  Forward declaration of class ns1__CanDeleteData.
class ns1__CanDeleteData;

//  Forward declaration of class ns1__CanDeleteDataResponse.
class ns1__CanDeleteDataResponse;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteViewList.
class ns1__Fk_USCOREgetRemoteViewList;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteViewListResponse.
class ns1__Fk_USCOREgetRemoteViewListResponse;

//  Forward declaration of class ns1__GetDataByIdForSecurity.
class ns1__GetDataByIdForSecurity;

//  Forward declaration of class ns1__GetDataByIdForSecurityResponse.
class ns1__GetDataByIdForSecurityResponse;

//  Forward declaration of class ns1__ModifyUserConfig.
class ns1__ModifyUserConfig;

//  Forward declaration of class ns1__ModifyUserConfigResponse.
class ns1__ModifyUserConfigResponse;

//  Forward declaration of class ns1__DeleteProtocol.
class ns1__DeleteProtocol;

//  Forward declaration of class ns1__DeleteProtocolResponse.
class ns1__DeleteProtocolResponse;

//  Forward declaration of class ns1__DelSign.
class ns1__DelSign;

//  Forward declaration of class ns1__DelSignResponse.
class ns1__DelSignResponse;

//  Forward declaration of class ns1__VerifyExpression.
class ns1__VerifyExpression;

//  Forward declaration of class ns1__VerifyExpressionResponse.
class ns1__VerifyExpressionResponse;

//  Forward declaration of class ns1__DeleteFilter.
class ns1__DeleteFilter;

//  Forward declaration of class ns1__DeleteFilterResponse.
class ns1__DeleteFilterResponse;

//  Forward declaration of class ns1__CreateRaccoglitore.
class ns1__CreateRaccoglitore;

//  Forward declaration of class ns1__CreateRaccoglitoreResponse.
class ns1__CreateRaccoglitoreResponse;

//  Forward declaration of class ns1__CanInsertLinkContainerToContainer.
class ns1__CanInsertLinkContainerToContainer;

//  Forward declaration of class ns1__CanInsertLinkContainerToContainerResponse.
class ns1__CanInsertLinkContainerToContainerResponse;

//  Forward declaration of class ns1__UploadEndFileWA.
class ns1__UploadEndFileWA;

//  Forward declaration of class ns1__UploadEndFileWAResponse.
class ns1__UploadEndFileWAResponse;

//  Forward declaration of class ns1__canCreateRaccoglitore.
class ns1__canCreateRaccoglitore;

//  Forward declaration of class ns1__canCreateRaccoglitoreResponse.
class ns1__canCreateRaccoglitoreResponse;

//  Forward declaration of class ns1__CanModifyLinkContainerToContainer.
class ns1__CanModifyLinkContainerToContainer;

//  Forward declaration of class ns1__CanModifyLinkContainerToContainerResponse.
class ns1__CanModifyLinkContainerToContainerResponse;

//  Forward declaration of class ns1__GetQueryParam.
class ns1__GetQueryParam;

//  Forward declaration of class ns1__GetQueryParamResponse.
class ns1__GetQueryParamResponse;

//  Forward declaration of class ns1__abxRetOption4QueryResult.
class ns1__abxRetOption4QueryResult;

//  Forward declaration of class ns1__abxQFieldList.
class ns1__abxQFieldList;

//  Forward declaration of class ns1__abxQobjectList.
class ns1__abxQobjectList;

//  Forward declaration of class ns1__abxQobject.
class ns1__abxQobject;

//  Forward declaration of class ns1__abxQtemplateList.
class ns1__abxQtemplateList;

//  Forward declaration of class ns1__abxQtemplate.
class ns1__abxQtemplate;

//  Forward declaration of class ns1__GetSDKWatchFolderDirectories.
class ns1__GetSDKWatchFolderDirectories;

//  Forward declaration of class ns1__GetSDKWatchFolderDirectoriesResponse.
class ns1__GetSDKWatchFolderDirectoriesResponse;

//  Forward declaration of class ns1__GetArchSostRules.
class ns1__GetArchSostRules;

//  Forward declaration of class ns1__GetArchSostRulesResponse.
class ns1__GetArchSostRulesResponse;

//  Forward declaration of class ns1__abxArchSostResult.
class ns1__abxArchSostResult;

//  Forward declaration of class ns1__abxArchSostRuleList.
class ns1__abxArchSostRuleList;

//  Forward declaration of class ns1__abxArchSostRule.
class ns1__abxArchSostRule;

//  Forward declaration of class ns1__DownloadFileWAByFileUniqueCode.
class ns1__DownloadFileWAByFileUniqueCode;

//  Forward declaration of class ns1__DownloadFileWAByFileUniqueCodeResponse.
class ns1__DownloadFileWAByFileUniqueCodeResponse;

//  Forward declaration of class ns1__GetSDKVariables.
class ns1__GetSDKVariables;

//  Forward declaration of class ns1__GetSDKVariablesResponse.
class ns1__GetSDKVariablesResponse;

//  Forward declaration of class ns1__DownloadEndFileWA.
class ns1__DownloadEndFileWA;

//  Forward declaration of class ns1__DownloadEndFileWAResponse.
class ns1__DownloadEndFileWAResponse;

//  Forward declaration of class ns1__DeleteClasseDocumentale.
class ns1__DeleteClasseDocumentale;

//  Forward declaration of class ns1__DeleteClasseDocumentaleResponse.
class ns1__DeleteClasseDocumentaleResponse;

//  Forward declaration of class ns1__abxClasseDocumentaleResult.
class ns1__abxClasseDocumentaleResult;

//  Forward declaration of class ns1__abxClasseDocumentaleList.
class ns1__abxClasseDocumentaleList;

//  Forward declaration of class ns1__abxClasseDocumentale.
class ns1__abxClasseDocumentale;

//  Forward declaration of class ns1__CanDeleteFile.
class ns1__CanDeleteFile;

//  Forward declaration of class ns1__CanDeleteFileResponse.
class ns1__CanDeleteFileResponse;

//  Forward declaration of class ns1__InsertUserInGroup.
class ns1__InsertUserInGroup;

//  Forward declaration of class ns1__InsertUserInGroupResponse.
class ns1__InsertUserInGroupResponse;

//  Forward declaration of class ns1__EndPermissionSettings.
class ns1__EndPermissionSettings;

//  Forward declaration of class ns1__EndPermissionSettingsResponse.
class ns1__EndPermissionSettingsResponse;

//  Forward declaration of class ns1__abxPermissionResult.
class ns1__abxPermissionResult;

//  Forward declaration of class ns1__abxPermissionElenco.
class ns1__abxPermissionElenco;

//  Forward declaration of class ns1__GetDownloadDetailByFilecode.
class ns1__GetDownloadDetailByFilecode;

//  Forward declaration of class ns1__GetDownloadDetailByFilecodeResponse.
class ns1__GetDownloadDetailByFilecodeResponse;

//  Forward declaration of class ns1__canCreateContainer.
class ns1__canCreateContainer;

//  Forward declaration of class ns1__canCreateContainerResponse.
class ns1__canCreateContainerResponse;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByIndex.
class ns1__Fk_USCOREgetAllRecordByIndex;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByIndexResponse.
class ns1__Fk_USCOREgetAllRecordByIndexResponse;

//  Forward declaration of class ns1__GetAllFilter.
class ns1__GetAllFilter;

//  Forward declaration of class ns1__GetAllFilterResponse.
class ns1__GetAllFilterResponse;

//  Forward declaration of class ns1__DownloadGetNext.
class ns1__DownloadGetNext;

//  Forward declaration of class ns1__DownloadGetNextResponse.
class ns1__DownloadGetNextResponse;

//  Forward declaration of class ns1__InsertClasseDocumentale.
class ns1__InsertClasseDocumentale;

//  Forward declaration of class ns1__InsertClasseDocumentaleResponse.
class ns1__InsertClasseDocumentaleResponse;

//  Forward declaration of class ns1__CheckOut_USCOREdocument.
class ns1__CheckOut_USCOREdocument;

//  Forward declaration of class ns1__CheckOut_USCOREdocumentResponse.
class ns1__CheckOut_USCOREdocumentResponse;

//  Forward declaration of class ns1__SetTmpUSDownloadPath.
class ns1__SetTmpUSDownloadPath;

//  Forward declaration of class ns1__SetTmpUSDownloadPathResponse.
class ns1__SetTmpUSDownloadPathResponse;

//  Forward declaration of class ns1__canCreateTemplate.
class ns1__canCreateTemplate;

//  Forward declaration of class ns1__canCreateTemplateResponse.
class ns1__canCreateTemplateResponse;

//  Forward declaration of class ns1__CanDeleteFileContainer.
class ns1__CanDeleteFileContainer;

//  Forward declaration of class ns1__CanDeleteFileContainerResponse.
class ns1__CanDeleteFileContainerResponse;

//  Forward declaration of class ns1__QueryHeader.
class ns1__QueryHeader;

//  Forward declaration of class ns1__QueryHeaderResponse.
class ns1__QueryHeaderResponse;

//  Forward declaration of class ns1__GetProtocolList.
class ns1__GetProtocolList;

//  Forward declaration of class ns1__GetProtocolListResponse.
class ns1__GetProtocolListResponse;

//  Forward declaration of class ns1__CheckOut_USCOREattach.
class ns1__CheckOut_USCOREattach;

//  Forward declaration of class ns1__CheckOut_USCOREattachResponse.
class ns1__CheckOut_USCOREattachResponse;

//  Forward declaration of class ns1__GetFieldsPropertiesFromTemplate.
class ns1__GetFieldsPropertiesFromTemplate;

//  Forward declaration of class ns1__GetFieldsPropertiesFromTemplateResponse.
class ns1__GetFieldsPropertiesFromTemplateResponse;

//  Forward declaration of class ns1__DeleteDataWA.
class ns1__DeleteDataWA;

//  Forward declaration of class ns1__DeleteDataWAResponse.
class ns1__DeleteDataWAResponse;

//  Forward declaration of class ns1__DeleteArchSostRule.
class ns1__DeleteArchSostRule;

//  Forward declaration of class ns1__DeleteArchSostRuleResponse.
class ns1__DeleteArchSostRuleResponse;

//  Forward declaration of class ns1__GetMethod.
class ns1__GetMethod;

//  Forward declaration of class ns1__GetMethodResponse.
class ns1__GetMethodResponse;

//  Forward declaration of class ns1__abxGmResult.
class ns1__abxGmResult;

//  Forward declaration of class ns1__abxMethodDef.
class ns1__abxMethodDef;

//  Forward declaration of class ns1__CanAddNewDate.
class ns1__CanAddNewDate;

//  Forward declaration of class ns1__CanAddNewDateResponse.
class ns1__CanAddNewDateResponse;

//  Forward declaration of class ns1__GetArchiBoxInDomainByMatricola.
class ns1__GetArchiBoxInDomainByMatricola;

//  Forward declaration of class ns1__GetArchiBoxInDomainByMatricolaResponse.
class ns1__GetArchiBoxInDomainByMatricolaResponse;

//  Forward declaration of class ns1__ModifySDKTask.
class ns1__ModifySDKTask;

//  Forward declaration of class ns1__ModifySDKTaskResponse.
class ns1__ModifySDKTaskResponse;

//  Forward declaration of class ns1__InsertTranslationCode.
class ns1__InsertTranslationCode;

//  Forward declaration of class ns1__InsertTranslationCodeResponse.
class ns1__InsertTranslationCodeResponse;

//  Forward declaration of class ns1__GetGroupList.
class ns1__GetGroupList;

//  Forward declaration of class ns1__GetGroupListResponse.
class ns1__GetGroupListResponse;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByIndexDesc.
class ns1__Fk_USCOREgetAllRecordByIndexDesc;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByIndexDescResponse.
class ns1__Fk_USCOREgetAllRecordByIndexDescResponse;

//  Forward declaration of class ns1__CanModifyData.
class ns1__CanModifyData;

//  Forward declaration of class ns1__CanModifyDataResponse.
class ns1__CanModifyDataResponse;

//  Forward declaration of class ns1__Query.
class ns1__Query;

//  Forward declaration of class ns1__QueryResponse.
class ns1__QueryResponse;

//  Forward declaration of class ns1__CanAddDigitalSignature.
class ns1__CanAddDigitalSignature;

//  Forward declaration of class ns1__CanAddDigitalSignatureResponse.
class ns1__CanAddDigitalSignatureResponse;

//  Forward declaration of class ns1__GetInstanceId.
class ns1__GetInstanceId;

//  Forward declaration of class ns1__GetInstanceIdResponse.
class ns1__GetInstanceIdResponse;

//  Forward declaration of class ns1__abxGiiResult.
class ns1__abxGiiResult;

//  Forward declaration of class ns1__InsertArchSostRule.
class ns1__InsertArchSostRule;

//  Forward declaration of class ns1__InsertArchSostRuleResponse.
class ns1__InsertArchSostRuleResponse;

//  Forward declaration of class ns1__Combo_USCOREinsert.
class ns1__Combo_USCOREinsert;

//  Forward declaration of class ns1__Combo_USCOREinsertResponse.
class ns1__Combo_USCOREinsertResponse;

//  Forward declaration of class ns1__abxComboResult.
class ns1__abxComboResult;

//  Forward declaration of class ns1__abxComboList.
class ns1__abxComboList;

//  Forward declaration of class ns1__GetAdjacentArchiBox.
class ns1__GetAdjacentArchiBox;

//  Forward declaration of class ns1__GetAdjacentArchiBoxResponse.
class ns1__GetAdjacentArchiBoxResponse;

//  Forward declaration of class ns1__GetDefaultObjActList.
class ns1__GetDefaultObjActList;

//  Forward declaration of class ns1__GetDefaultObjActListResponse.
class ns1__GetDefaultObjActListResponse;

//  Forward declaration of class ns1__ExtractSDKPDFTemplateTextByArea.
class ns1__ExtractSDKPDFTemplateTextByArea;

//  Forward declaration of class ns1__ExtractSDKPDFTemplateTextByAreaResponse.
class ns1__ExtractSDKPDFTemplateTextByAreaResponse;

//  Forward declaration of class ns1__DeleteSDKTask.
class ns1__DeleteSDKTask;

//  Forward declaration of class ns1__DeleteSDKTaskResponse.
class ns1__DeleteSDKTaskResponse;

//  Forward declaration of class ns1__GetUploadDetailByContId.
class ns1__GetUploadDetailByContId;

//  Forward declaration of class ns1__GetUploadDetailByContIdResponse.
class ns1__GetUploadDetailByContIdResponse;

//  Forward declaration of class ns1__DownloadTPEndFile.
class ns1__DownloadTPEndFile;

//  Forward declaration of class ns1__DownloadTPEndFileResponse.
class ns1__DownloadTPEndFileResponse;

//  Forward declaration of class ns1__GetLinksToDocumentFiltered.
class ns1__GetLinksToDocumentFiltered;

//  Forward declaration of class ns1__GetLinksToDocumentFilteredResponse.
class ns1__GetLinksToDocumentFilteredResponse;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteDatabaseList.
class ns1__Fk_USCOREgetRemoteDatabaseList;

//  Forward declaration of class ns1__Fk_USCOREgetRemoteDatabaseListResponse.
class ns1__Fk_USCOREgetRemoteDatabaseListResponse;

//  Forward declaration of class ns1__GetDataFileListForSecurity.
class ns1__GetDataFileListForSecurity;

//  Forward declaration of class ns1__GetDataFileListForSecurityResponse.
class ns1__GetDataFileListForSecurityResponse;

//  Forward declaration of class ns1__GetUploadDetailByData.
class ns1__GetUploadDetailByData;

//  Forward declaration of class ns1__GetUploadDetailByDataResponse.
class ns1__GetUploadDetailByDataResponse;

//  Forward declaration of class ns1__DownloadGetChunkWA.
class ns1__DownloadGetChunkWA;

//  Forward declaration of class ns1__DownloadGetChunkWAResponse.
class ns1__DownloadGetChunkWAResponse;

//  Forward declaration of class ns1__GetWsdlVersion.
class ns1__GetWsdlVersion;

//  Forward declaration of class ns1__GetWsdlVersionResponse.
class ns1__GetWsdlVersionResponse;

//  Forward declaration of class ns1__AbxWsdlResult.
class ns1__AbxWsdlResult;

//  Forward declaration of class ns1__InsertUSFile.
class ns1__InsertUSFile;

//  Forward declaration of class ns1__InsertUSFileResponse.
class ns1__InsertUSFileResponse;

//  Forward declaration of class ns1__InsertProtocol.
class ns1__InsertProtocol;

//  Forward declaration of class ns1__InsertProtocolResponse.
class ns1__InsertProtocolResponse;

//  Forward declaration of class ns1__DownloadFilePreview.
class ns1__DownloadFilePreview;

//  Forward declaration of class ns1__DownloadFilePreviewResponse.
class ns1__DownloadFilePreviewResponse;

//  Forward declaration of class ns1__AddFileToSyncByArcCue.
class ns1__AddFileToSyncByArcCue;

//  Forward declaration of class ns1__AddFileToSyncByArcCueResponse.
class ns1__AddFileToSyncByArcCueResponse;

//  Forward declaration of class ns1__AddLogSDK.
class ns1__AddLogSDK;

//  Forward declaration of class ns1__AddLogSDKResponse.
class ns1__AddLogSDKResponse;

//  Forward declaration of class ns1__GetUploadDetailByCont.
class ns1__GetUploadDetailByCont;

//  Forward declaration of class ns1__GetUploadDetailByContResponse.
class ns1__GetUploadDetailByContResponse;

//  Forward declaration of class ns1__DigitalSign.
class ns1__DigitalSign;

//  Forward declaration of class ns1__DigitalSignResponse.
class ns1__DigitalSignResponse;

//  Forward declaration of class ns1__GetFieldProperties.
class ns1__GetFieldProperties;

//  Forward declaration of class ns1__GetFieldPropertiesResponse.
class ns1__GetFieldPropertiesResponse;

//  Forward declaration of class ns1__SetTmpUploadPath.
class ns1__SetTmpUploadPath;

//  Forward declaration of class ns1__SetTmpUploadPathResponse.
class ns1__SetTmpUploadPathResponse;

//  Forward declaration of class ns1__DelExpression.
class ns1__DelExpression;

//  Forward declaration of class ns1__DelExpressionResponse.
class ns1__DelExpressionResponse;

//  Forward declaration of class ns1__CanEditProtocol.
class ns1__CanEditProtocol;

//  Forward declaration of class ns1__CanEditProtocolResponse.
class ns1__CanEditProtocolResponse;

//  Forward declaration of class ns1__GetUserList.
class ns1__GetUserList;

//  Forward declaration of class ns1__GetUserListResponse.
class ns1__GetUserListResponse;

//  Forward declaration of class ns1__DeleteUSFileByCode.
class ns1__DeleteUSFileByCode;

//  Forward declaration of class ns1__DeleteUSFileByCodeResponse.
class ns1__DeleteUSFileByCodeResponse;

//  Forward declaration of class ns1__UploadTPSendChunk.
class ns1__UploadTPSendChunk;

//  Forward declaration of class ns1__UploadTPSendChunkResponse.
class ns1__UploadTPSendChunkResponse;

//  Forward declaration of class ns1__DownloadFileContainer.
class ns1__DownloadFileContainer;

//  Forward declaration of class ns1__DownloadFileContainerResponse.
class ns1__DownloadFileContainerResponse;

//  Forward declaration of class ns1__SetTmpTPDownloadPath.
class ns1__SetTmpTPDownloadPath;

//  Forward declaration of class ns1__SetTmpTPDownloadPathResponse.
class ns1__SetTmpTPDownloadPathResponse;

//  Forward declaration of class ns1__DeleteUSFileById.
class ns1__DeleteUSFileById;

//  Forward declaration of class ns1__DeleteUSFileByIdResponse.
class ns1__DeleteUSFileByIdResponse;

//  Forward declaration of class ns1__DeleteTranslationByCode.
class ns1__DeleteTranslationByCode;

//  Forward declaration of class ns1__DeleteTranslationByCodeResponse.
class ns1__DeleteTranslationByCodeResponse;

//  Forward declaration of class ns1__InsertFilter.
class ns1__InsertFilter;

//  Forward declaration of class ns1__InsertFilterResponse.
class ns1__InsertFilterResponse;

//  Forward declaration of class ns1__GetDataFileList.
class ns1__GetDataFileList;

//  Forward declaration of class ns1__GetDataFileListResponse.
class ns1__GetDataFileListResponse;

//  Forward declaration of class ns1__GetDataTPFileList.
class ns1__GetDataTPFileList;

//  Forward declaration of class ns1__GetDataTPFileListResponse.
class ns1__GetDataTPFileListResponse;

//  Forward declaration of class ns1__GetRootId.
class ns1__GetRootId;

//  Forward declaration of class ns1__GetRootIdResponse.
class ns1__GetRootIdResponse;

//  Forward declaration of class ns1__GetTranslationByLabelCode.
class ns1__GetTranslationByLabelCode;

//  Forward declaration of class ns1__GetTranslationByLabelCodeResponse.
class ns1__GetTranslationByLabelCodeResponse;

//  Forward declaration of class ns1__GetSchedulerTasksToRun.
class ns1__GetSchedulerTasksToRun;

//  Forward declaration of class ns1__GetSchedulerTasksToRunResponse.
class ns1__GetSchedulerTasksToRunResponse;

//  Forward declaration of class ns1__DownloadFileByFileUniqueCode.
class ns1__DownloadFileByFileUniqueCode;

//  Forward declaration of class ns1__DownloadFileByFileUniqueCodeResponse.
class ns1__DownloadFileByFileUniqueCodeResponse;

//  Forward declaration of class ns1__ModifyRaccoglitore.
class ns1__ModifyRaccoglitore;

//  Forward declaration of class ns1__ModifyRaccoglitoreResponse.
class ns1__ModifyRaccoglitoreResponse;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREmodify.
class ns1__Fk_USCOREDB_USCOREmodify;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREmodifyResponse.
class ns1__Fk_USCOREDB_USCOREmodifyResponse;

//  Forward declaration of class ns1__SetTmpUSUploadPath.
class ns1__SetTmpUSUploadPath;

//  Forward declaration of class ns1__SetTmpUSUploadPathResponse.
class ns1__SetTmpUSUploadPathResponse;

//  Forward declaration of class ns1__GetDataFileListContainer.
class ns1__GetDataFileListContainer;

//  Forward declaration of class ns1__GetDataFileListContainerResponse.
class ns1__GetDataFileListContainerResponse;

//  Forward declaration of class ns1__UploadWFEndFile.
class ns1__UploadWFEndFile;

//  Forward declaration of class ns1__UploadWFEndFileResponse.
class ns1__UploadWFEndFileResponse;

//  Forward declaration of class ns1__ModSign.
class ns1__ModSign;

//  Forward declaration of class ns1__ModSignResponse.
class ns1__ModSignResponse;

//  Forward declaration of class ns1__Combo_USCOREgetAll.
class ns1__Combo_USCOREgetAll;

//  Forward declaration of class ns1__Combo_USCOREgetAllResponse.
class ns1__Combo_USCOREgetAllResponse;

//  Forward declaration of class ns1__DownloadGetChunk.
class ns1__DownloadGetChunk;

//  Forward declaration of class ns1__DownloadGetChunkResponse.
class ns1__DownloadGetChunkResponse;

//  Forward declaration of class ns1__ModifyGroup.
class ns1__ModifyGroup;

//  Forward declaration of class ns1__ModifyGroupResponse.
class ns1__ModifyGroupResponse;

//  Forward declaration of class ns1__InsertUserConfig.
class ns1__InsertUserConfig;

//  Forward declaration of class ns1__InsertUserConfigResponse.
class ns1__InsertUserConfigResponse;

//  Forward declaration of class ns1__GetProtocolByName.
class ns1__GetProtocolByName;

//  Forward declaration of class ns1__GetProtocolByNameResponse.
class ns1__GetProtocolByNameResponse;

//  Forward declaration of class ns1__canModifyContainer.
class ns1__canModifyContainer;

//  Forward declaration of class ns1__canModifyContainerResponse.
class ns1__canModifyContainerResponse;

//  Forward declaration of class ns1__InsertTranslationDecimalCode.
class ns1__InsertTranslationDecimalCode;

//  Forward declaration of class ns1__InsertTranslationDecimalCodeResponse.
class ns1__InsertTranslationDecimalCodeResponse;

//  Forward declaration of class ns1__GetTranslationBySourceSuffix.
class ns1__GetTranslationBySourceSuffix;

//  Forward declaration of class ns1__GetTranslationBySourceSuffixResponse.
class ns1__GetTranslationBySourceSuffixResponse;

//  Forward declaration of class ns1__GetDynorgList.
class ns1__GetDynorgList;

//  Forward declaration of class ns1__GetDynorgListResponse.
class ns1__GetDynorgListResponse;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREdelete.
class ns1__Fk_USCOREDB_USCOREdelete;

//  Forward declaration of class ns1__Fk_USCOREDB_USCOREdeleteResponse.
class ns1__Fk_USCOREDB_USCOREdeleteResponse;

//  Forward declaration of class ns1__UploadTPEndFile.
class ns1__UploadTPEndFile;

//  Forward declaration of class ns1__UploadTPEndFileResponse.
class ns1__UploadTPEndFileResponse;

//  Forward declaration of class ns1__AddUserSettings.
class ns1__AddUserSettings;

//  Forward declaration of class ns1__AddUserSettingsResponse.
class ns1__AddUserSettingsResponse;

//  Forward declaration of class ns1__GetUploadDetailByDataId.
class ns1__GetUploadDetailByDataId;

//  Forward declaration of class ns1__GetUploadDetailByDataIdResponse.
class ns1__GetUploadDetailByDataIdResponse;

//  Forward declaration of class ns1__Combo_USCOREremoveItem.
class ns1__Combo_USCOREremoveItem;

//  Forward declaration of class ns1__Combo_USCOREremoveItemResponse.
class ns1__Combo_USCOREremoveItemResponse;

//  Forward declaration of class ns1__ModifyDynorg.
class ns1__ModifyDynorg;

//  Forward declaration of class ns1__ModifyDynorgResponse.
class ns1__ModifyDynorgResponse;

//  Forward declaration of class ns1__GetDataById.
class ns1__GetDataById;

//  Forward declaration of class ns1__GetDataByIdResponse.
class ns1__GetDataByIdResponse;

//  Forward declaration of class ns1__GetListDataWA.
class ns1__GetListDataWA;

//  Forward declaration of class ns1__GetListDataWAResponse.
class ns1__GetListDataWAResponse;

//  Forward declaration of class ns1__DeleteWFFileByCode.
class ns1__DeleteWFFileByCode;

//  Forward declaration of class ns1__DeleteWFFileByCodeResponse.
class ns1__DeleteWFFileByCodeResponse;

//  Forward declaration of class ns1__GetContSign.
class ns1__GetContSign;

//  Forward declaration of class ns1__GetContSignResponse.
class ns1__GetContSignResponse;

//  Forward declaration of class ns1__GetDomainList.
class ns1__GetDomainList;

//  Forward declaration of class ns1__GetDomainListResponse.
class ns1__GetDomainListResponse;

//  Forward declaration of class ns1__abxDomainResult.
class ns1__abxDomainResult;

//  Forward declaration of class ns1__abxDomainList.
class ns1__abxDomainList;

//  Forward declaration of class ns1__abxDomain.
class ns1__abxDomain;

//  Forward declaration of class ns1__UploadSendChunkWA.
class ns1__UploadSendChunkWA;

//  Forward declaration of class ns1__UploadSendChunkWAResponse.
class ns1__UploadSendChunkWAResponse;

//  Forward declaration of class ns1__InsertLinkDocumentToDocument.
class ns1__InsertLinkDocumentToDocument;

//  Forward declaration of class ns1__InsertLinkDocumentToDocumentResponse.
class ns1__InsertLinkDocumentToDocumentResponse;

//  Forward declaration of class ns1__GetNewProtocolNumber.
class ns1__GetNewProtocolNumber;

//  Forward declaration of class ns1__GetNewProtocolNumberResponse.
class ns1__GetNewProtocolNumberResponse;

//  Forward declaration of class ns1__abxProtocolUseResult.
class ns1__abxProtocolUseResult;

//  Forward declaration of class ns1__abxProtocolUseList.
class ns1__abxProtocolUseList;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByDesc.
class ns1__Fk_USCOREgetAllRecordByDesc;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordByDescResponse.
class ns1__Fk_USCOREgetAllRecordByDescResponse;

//  Forward declaration of class ns1__CanUseProtocol.
class ns1__CanUseProtocol;

//  Forward declaration of class ns1__CanUseProtocolResponse.
class ns1__CanUseProtocolResponse;

//  Forward declaration of class ns1__CreateContainer.
class ns1__CreateContainer;

//  Forward declaration of class ns1__CreateContainerResponse.
class ns1__CreateContainerResponse;

//  Forward declaration of class ns1__Fk_USCOREgetLocalFieldList.
class ns1__Fk_USCOREgetLocalFieldList;

//  Forward declaration of class ns1__Fk_USCOREgetLocalFieldListResponse.
class ns1__Fk_USCOREgetLocalFieldListResponse;

//  Forward declaration of class ns1__ChangeSchedulerTaskScheduleStatus.
class ns1__ChangeSchedulerTaskScheduleStatus;

//  Forward declaration of class ns1__ChangeSchedulerTaskScheduleStatusResponse.
class ns1__ChangeSchedulerTaskScheduleStatusResponse;

//  Forward declaration of class ns1__DeleteTranslation.
class ns1__DeleteTranslation;

//  Forward declaration of class ns1__DeleteTranslationResponse.
class ns1__DeleteTranslationResponse;

//  Forward declaration of class ns1__Combo_USCOREremoveAll.
class ns1__Combo_USCOREremoveAll;

//  Forward declaration of class ns1__Combo_USCOREremoveAllResponse.
class ns1__Combo_USCOREremoveAllResponse;

//  Forward declaration of class ns1__canModifyDynorg.
class ns1__canModifyDynorg;

//  Forward declaration of class ns1__canModifyDynorgResponse.
class ns1__canModifyDynorgResponse;

//  Forward declaration of class ns1__ModifyUserPassword.
class ns1__ModifyUserPassword;

//  Forward declaration of class ns1__ModifyUserPasswordResponse.
class ns1__ModifyUserPasswordResponse;

//  Forward declaration of class ns1__GetDataUSFileList.
class ns1__GetDataUSFileList;

//  Forward declaration of class ns1__GetDataUSFileListResponse.
class ns1__GetDataUSFileListResponse;

//  Forward declaration of class ns1__Combo_USCOREisCombo.
class ns1__Combo_USCOREisCombo;

//  Forward declaration of class ns1__Combo_USCOREisComboResponse.
class ns1__Combo_USCOREisComboResponse;

//  Forward declaration of class ns1__CanModifyLinkContainerToDocument.
class ns1__CanModifyLinkContainerToDocument;

//  Forward declaration of class ns1__CanModifyLinkContainerToDocumentResponse.
class ns1__CanModifyLinkContainerToDocumentResponse;

//  Forward declaration of class ns1__ModifyTranslation.
class ns1__ModifyTranslation;

//  Forward declaration of class ns1__ModifyTranslationResponse.
class ns1__ModifyTranslationResponse;

//  Forward declaration of class ns1__GetFileAvailable.
class ns1__GetFileAvailable;

//  Forward declaration of class ns1__GetFileAvailableResponse.
class ns1__GetFileAvailableResponse;

//  Forward declaration of class ns1__DeleteSchedulerTask.
class ns1__DeleteSchedulerTask;

//  Forward declaration of class ns1__DeleteSchedulerTaskResponse.
class ns1__DeleteSchedulerTaskResponse;

//  Forward declaration of class ns1__CanShowFile.
class ns1__CanShowFile;

//  Forward declaration of class ns1__CanShowFileResponse.
class ns1__CanShowFileResponse;

//  Forward declaration of class ns1__DeleteDynorg.
class ns1__DeleteDynorg;

//  Forward declaration of class ns1__DeleteDynorgResponse.
class ns1__DeleteDynorgResponse;

//  Forward declaration of class ns1__DeleteUserByUsername.
class ns1__DeleteUserByUsername;

//  Forward declaration of class ns1__DeleteUserByUsernameResponse.
class ns1__DeleteUserByUsernameResponse;

//  Forward declaration of class ns1__TestLettura.
class ns1__TestLettura;

//  Forward declaration of class ns1__TestLetturaResponse.
class ns1__TestLetturaResponse;

//  Forward declaration of class ns1__FullTreePathName.
class ns1__FullTreePathName;

//  Forward declaration of class ns1__FullTreePathNameResponse.
class ns1__FullTreePathNameResponse;

//  Forward declaration of class ns1__UploadEndFile.
class ns1__UploadEndFile;

//  Forward declaration of class ns1__UploadEndFileResponse.
class ns1__UploadEndFileResponse;

//  Forward declaration of class ns1__ModifyLinkContainerToDocument.
class ns1__ModifyLinkContainerToDocument;

//  Forward declaration of class ns1__ModifyLinkContainerToDocumentResponse.
class ns1__ModifyLinkContainerToDocumentResponse;

//  Forward declaration of class ns1__GetUserDetailByUserId.
class ns1__GetUserDetailByUserId;

//  Forward declaration of class ns1__GetUserDetailByUserIdResponse.
class ns1__GetUserDetailByUserIdResponse;

//  Forward declaration of class ns1__GetUsersListByGroup.
class ns1__GetUsersListByGroup;

//  Forward declaration of class ns1__GetUsersListByGroupResponse.
class ns1__GetUsersListByGroupResponse;

//  Forward declaration of class ns1__GetDataWFFileList.
class ns1__GetDataWFFileList;

//  Forward declaration of class ns1__GetDataWFFileListResponse.
class ns1__GetDataWFFileListResponse;

//  Forward declaration of class ns1__CreateSDKTask.
class ns1__CreateSDKTask;

//  Forward declaration of class ns1__CreateSDKTaskResponse.
class ns1__CreateSDKTaskResponse;

//  Forward declaration of class ns1__ModifyDataWA.
class ns1__ModifyDataWA;

//  Forward declaration of class ns1__ModifyDataWAResponse.
class ns1__ModifyDataWAResponse;

//  Forward declaration of class ns1__InsertFileWA.
class ns1__InsertFileWA;

//  Forward declaration of class ns1__InsertFileWAResponse.
class ns1__InsertFileWAResponse;

//  Forward declaration of class ns1__GetDataFileDetail.
class ns1__GetDataFileDetail;

//  Forward declaration of class ns1__GetDataFileDetailResponse.
class ns1__GetDataFileDetailResponse;

//  Forward declaration of class ns1__ChangeSDKTaskStatus.
class ns1__ChangeSDKTaskStatus;

//  Forward declaration of class ns1__ChangeSDKTaskStatusResponse.
class ns1__ChangeSDKTaskStatusResponse;

//  Forward declaration of class ns1__CanInsertFile.
class ns1__CanInsertFile;

//  Forward declaration of class ns1__CanInsertFileResponse.
class ns1__CanInsertFileResponse;

//  Forward declaration of class ns1__GetDefaultProcess.
class ns1__GetDefaultProcess;

//  Forward declaration of class ns1__GetDefaultProcessResponse.
class ns1__GetDefaultProcessResponse;

//  Forward declaration of class ns1__GetClasseDocumentale.
class ns1__GetClasseDocumentale;

//  Forward declaration of class ns1__GetClasseDocumentaleResponse.
class ns1__GetClasseDocumentaleResponse;

//  Forward declaration of class ns1__UploadPreviewFile.
class ns1__UploadPreviewFile;

//  Forward declaration of class ns1__UploadPreviewFileResponse.
class ns1__UploadPreviewFileResponse;

//  Forward declaration of class ns1__Combo_USCOREmodify.
class ns1__Combo_USCOREmodify;

//  Forward declaration of class ns1__Combo_USCOREmodifyResponse.
class ns1__Combo_USCOREmodifyResponse;

//  Forward declaration of class ns1__InsertTPFile.
class ns1__InsertTPFile;

//  Forward declaration of class ns1__InsertTPFileResponse.
class ns1__InsertTPFileResponse;

//  Forward declaration of class ns1__GetWorkflowVariables.
class ns1__GetWorkflowVariables;

//  Forward declaration of class ns1__GetWorkflowVariablesResponse.
class ns1__GetWorkflowVariablesResponse;

//  Forward declaration of class ns1__DeleteWFFileById.
class ns1__DeleteWFFileById;

//  Forward declaration of class ns1__DeleteWFFileByIdResponse.
class ns1__DeleteWFFileByIdResponse;

//  Forward declaration of class ns1__CanInsertData.
class ns1__CanInsertData;

//  Forward declaration of class ns1__CanInsertDataResponse.
class ns1__CanInsertDataResponse;

//  Forward declaration of class ns1__VerifySDKTaskNameExists.
class ns1__VerifySDKTaskNameExists;

//  Forward declaration of class ns1__VerifySDKTaskNameExistsResponse.
class ns1__VerifySDKTaskNameExistsResponse;

//  Forward declaration of class ns1__ModifySchedulerTaskSchedule.
class ns1__ModifySchedulerTaskSchedule;

//  Forward declaration of class ns1__ModifySchedulerTaskScheduleResponse.
class ns1__ModifySchedulerTaskScheduleResponse;

//  Forward declaration of class ns1__ModifyArchSostRule.
class ns1__ModifyArchSostRule;

//  Forward declaration of class ns1__ModifyArchSostRuleResponse.
class ns1__ModifyArchSostRuleResponse;

//  Forward declaration of class ns1__InsertDataWA.
class ns1__InsertDataWA;

//  Forward declaration of class ns1__InsertDataWAResponse.
class ns1__InsertDataWAResponse;

//  Forward declaration of class ns1__CanInsertProtocol.
class ns1__CanInsertProtocol;

//  Forward declaration of class ns1__CanInsertProtocolResponse.
class ns1__CanInsertProtocolResponse;

//  Forward declaration of class ns1__UploadUSEndFileWithUser.
class ns1__UploadUSEndFileWithUser;

//  Forward declaration of class ns1__UploadUSEndFileWithUserResponse.
class ns1__UploadUSEndFileWithUserResponse;

//  Forward declaration of class ns1__CanInsertLinkContainerToDocument.
class ns1__CanInsertLinkContainerToDocument;

//  Forward declaration of class ns1__CanInsertLinkContainerToDocumentResponse.
class ns1__CanInsertLinkContainerToDocumentResponse;

//  Forward declaration of class ns1__ResetUserSessions.
class ns1__ResetUserSessions;

//  Forward declaration of class ns1__ResetUserSessionsResponse.
class ns1__ResetUserSessionsResponse;

//  Forward declaration of class ns1__SetTmpDownloadPath.
class ns1__SetTmpDownloadPath;

//  Forward declaration of class ns1__SetTmpDownloadPathResponse.
class ns1__SetTmpDownloadPathResponse;

//  Forward declaration of class ns1__InsertWFFile.
class ns1__InsertWFFile;

//  Forward declaration of class ns1__InsertWFFileResponse.
class ns1__InsertWFFileResponse;

//  Forward declaration of class ns1__ModExpression.
class ns1__ModExpression;

//  Forward declaration of class ns1__ModExpressionResponse.
class ns1__ModExpressionResponse;

//  Forward declaration of class ns1__GetDownloadDetailByData.
class ns1__GetDownloadDetailByData;

//  Forward declaration of class ns1__GetDownloadDetailByDataResponse.
class ns1__GetDownloadDetailByDataResponse;

//  Forward declaration of class ns1__GetSDKTaskWatchFolder.
class ns1__GetSDKTaskWatchFolder;

//  Forward declaration of class ns1__GetSDKTaskWatchFolderResponse.
class ns1__GetSDKTaskWatchFolderResponse;

//  Forward declaration of class ns1__GetProtocolByDesc.
class ns1__GetProtocolByDesc;

//  Forward declaration of class ns1__GetProtocolByDescResponse.
class ns1__GetProtocolByDescResponse;

//  Forward declaration of class ns1__DeleteLink.
class ns1__DeleteLink;

//  Forward declaration of class ns1__DeleteLinkResponse.
class ns1__DeleteLinkResponse;

//  Forward declaration of class ns1__ModifySDKTaskWatchFolder.
class ns1__ModifySDKTaskWatchFolder;

//  Forward declaration of class ns1__ModifySDKTaskWatchFolderResponse.
class ns1__ModifySDKTaskWatchFolderResponse;

//  Forward declaration of class ns1__InsertTranslation.
class ns1__InsertTranslation;

//  Forward declaration of class ns1__InsertTranslationResponse.
class ns1__InsertTranslationResponse;

//  Forward declaration of class ns1__UploadSendChunk.
class ns1__UploadSendChunk;

//  Forward declaration of class ns1__UploadSendChunkResponse.
class ns1__UploadSendChunkResponse;

//  Forward declaration of class ns1__GetCountLinksToDocument.
class ns1__GetCountLinksToDocument;

//  Forward declaration of class ns1__GetCountLinksToDocumentResponse.
class ns1__GetCountLinksToDocumentResponse;

//  Forward declaration of class ns1__CreateTemplate.
class ns1__CreateTemplate;

//  Forward declaration of class ns1__CreateTemplateResponse.
class ns1__CreateTemplateResponse;

//  Forward declaration of class ns1__DestroyContainer.
class ns1__DestroyContainer;

//  Forward declaration of class ns1__DestroyContainerResponse.
class ns1__DestroyContainerResponse;

//  Forward declaration of class ns1__RemoveUserByGroup.
class ns1__RemoveUserByGroup;

//  Forward declaration of class ns1__RemoveUserByGroupResponse.
class ns1__RemoveUserByGroupResponse;

//  Forward declaration of class ns1__GetCountFileList.
class ns1__GetCountFileList;

//  Forward declaration of class ns1__GetCountFileListResponse.
class ns1__GetCountFileListResponse;

//  Forward declaration of class ns1__DownloadFileContainerUnc.
class ns1__DownloadFileContainerUnc;

//  Forward declaration of class ns1__DownloadFileContainerUncResponse.
class ns1__DownloadFileContainerUncResponse;

//  Forward declaration of class ns1__DownloadFile.
class ns1__DownloadFile;

//  Forward declaration of class ns1__DownloadFileResponse.
class ns1__DownloadFileResponse;

//  Forward declaration of class ns1__GetDataTPFileListByDocument.
class ns1__GetDataTPFileListByDocument;

//  Forward declaration of class ns1__GetDataTPFileListByDocumentResponse.
class ns1__GetDataTPFileListByDocumentResponse;

//  Forward declaration of class ns1__CanDeleteProtocol.
class ns1__CanDeleteProtocol;

//  Forward declaration of class ns1__CanDeleteProtocolResponse.
class ns1__CanDeleteProtocolResponse;

//  Forward declaration of class ns1__canCreateDynorg.
class ns1__canCreateDynorg;

//  Forward declaration of class ns1__canCreateDynorgResponse.
class ns1__canCreateDynorgResponse;

//  Forward declaration of class ns1__InsertSchedulerTask.
class ns1__InsertSchedulerTask;

//  Forward declaration of class ns1__abxArchSostDocumentList.
class ns1__abxArchSostDocumentList;

//  Forward declaration of class ns1__abxArchSostDocument.
class ns1__abxArchSostDocument;

//  Forward declaration of class ns1__InsertSchedulerTaskResponse.
class ns1__InsertSchedulerTaskResponse;

//  Forward declaration of class ns1__DownloadFileWA.
class ns1__DownloadFileWA;

//  Forward declaration of class ns1__DownloadFileWAResponse.
class ns1__DownloadFileWAResponse;

//  Forward declaration of class ns1__CreateField.
class ns1__CreateField;

//  Forward declaration of class ns1__CreateFieldResponse.
class ns1__CreateFieldResponse;

//  Forward declaration of class ns1__DownloadFileUnc.
class ns1__DownloadFileUnc;

//  Forward declaration of class ns1__DownloadFileUncResponse.
class ns1__DownloadFileUncResponse;

//  Forward declaration of class ns1__GetDataTPFileListByUsername.
class ns1__GetDataTPFileListByUsername;

//  Forward declaration of class ns1__GetDataTPFileListByUsernameResponse.
class ns1__GetDataTPFileListByUsernameResponse;

//  Forward declaration of class ns1__GetUserSettings.
class ns1__GetUserSettings;

//  Forward declaration of class ns1__GetUserSettingsResponse.
class ns1__GetUserSettingsResponse;

//  Forward declaration of class ns1__SaveChars.
class ns1__SaveChars;

//  Forward declaration of class ns1__SaveCharsResponse.
class ns1__SaveCharsResponse;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecord.
class ns1__Fk_USCOREgetAllRecord;

//  Forward declaration of class ns1__Fk_USCOREgetAllRecordResponse.
class ns1__Fk_USCOREgetAllRecordResponse;

//  Forward declaration of class ns1__StartSDKTask.
class ns1__StartSDKTask;

//  Forward declaration of class ns1__DeleteContainer.
class ns1__DeleteContainer;

//  Forward declaration of class ns1__DeleteContainerResponse.
class ns1__DeleteContainerResponse;

//  Forward declaration of class ns1__DeleteFileVersion.
class ns1__DeleteFileVersion;

//  Forward declaration of class ns1__DeleteFileVersionResponse.
class ns1__DeleteFileVersionResponse;

//  Forward declaration of class ns1__CanModifyFile.
class ns1__CanModifyFile;

//  Forward declaration of class ns1__CanModifyFileResponse.
class ns1__CanModifyFileResponse;

//  Forward declaration of class ns1__DelUserSettings.
class ns1__DelUserSettings;

//  Forward declaration of class ns1__DelUserSettingsResponse.
class ns1__DelUserSettingsResponse;

//  Forward declaration of class ns1__CheckIn_USCOREdocument.
class ns1__CheckIn_USCOREdocument;

//  Forward declaration of class ns1__CheckIn_USCOREdocumentResponse.
class ns1__CheckIn_USCOREdocumentResponse;

//  Forward declaration of class ns1__ShowProtocol.
class ns1__ShowProtocol;

//  Forward declaration of class ns1__ShowProtocolResponse.
class ns1__ShowProtocolResponse;

//  Forward declaration of class ns1__SetTmpWFDownloadPath.
class ns1__SetTmpWFDownloadPath;

//  Forward declaration of class ns1__SetTmpWFDownloadPathResponse.
class ns1__SetTmpWFDownloadPathResponse;

//  Forward declaration of class ns1__DeleteData.
class ns1__DeleteData;

//  Forward declaration of class ns1__DeleteDataResponse.
class ns1__DeleteDataResponse;

//  Forward declaration of class ns1__GetObject.
class ns1__GetObject;

//  Forward declaration of class ns1__GetObjectResponse.
class ns1__GetObjectResponse;

//  Forward declaration of class ns1__abxGoResult.
class ns1__abxGoResult;

//  Forward declaration of class ns1__abxObjDef.
class ns1__abxObjDef;

//  Forward declaration of class ns1__StoreSDKVariable.
class ns1__StoreSDKVariable;

//  Forward declaration of class ns1__StoreSDKVariableResponse.
class ns1__StoreSDKVariableResponse;

//  Forward declaration of class ns1__CheckIn_USCOREattachContainer.
class ns1__CheckIn_USCOREattachContainer;

//  Forward declaration of class ns1__CheckIn_USCOREattachContainerResponse.
class ns1__CheckIn_USCOREattachContainerResponse;

//  Forward declaration of class ns1__AddUser.
class ns1__AddUser;

//  Forward declaration of class ns1__AddUserResponse.
class ns1__AddUserResponse;

//  Forward declaration of class ns1__GetTemplateProperties.
class ns1__GetTemplateProperties;

//  Forward declaration of class ns1__GetTemplatePropertiesResponse.
class ns1__GetTemplatePropertiesResponse;

//  Forward declaration of class ns1__GetDataWFFileDetail.
class ns1__GetDataWFFileDetail;

//  Forward declaration of class ns1__GetDataWFFileDetailResponse.
class ns1__GetDataWFFileDetailResponse;

//  Forward declaration of class ns1__GetAllObjectWithSystem.
class ns1__GetAllObjectWithSystem;

//  Forward declaration of class ns1__GetAllObjectWithSystemResponse.
class ns1__GetAllObjectWithSystemResponse;

//  Forward declaration of class ns1__DeleteFileWA.
class ns1__DeleteFileWA;

//  Forward declaration of class ns1__DeleteFileWAResponse.
class ns1__DeleteFileWAResponse;

//  Forward declaration of class ns1__DeleteFileContainerVersion.
class ns1__DeleteFileContainerVersion;

//  Forward declaration of class ns1__DeleteFileContainerVersionResponse.
class ns1__DeleteFileContainerVersionResponse;

//  Forward declaration of class ns1__InsertFile.
class ns1__InsertFile;

//  Forward declaration of class ns1__InsertFileResponse.
class ns1__InsertFileResponse;

//  Forward declaration of class ns1__GetInstanceReplication.
class ns1__GetInstanceReplication;

//  Forward declaration of class ns1__GetInstanceReplicationResponse.
class ns1__GetInstanceReplicationResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xml.netbeans.org/schema/abxProtocol                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xml.netbeans.org/schema/abxDynaminorg                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xml.netbeans.org/schema/abxCan                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://ws.abx/                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xml.netbeans.org/schema/abxProtocol                               *
 *                                                                            *
\******************************************************************************/


/// "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult is a complexType.
/// class ns2__abxProtocolResult operations:
/// - soap_new_ns2__abxProtocolResult(soap*) allocate
/// - soap_new_ns2__abxProtocolResult(soap*, int num) allocate array
/// - soap_new_req_ns2__abxProtocolResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__abxProtocolResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__abxProtocolResult(soap*, ns2__abxProtocolResult*) deserialize from a stream
/// - int soap_write_ns2__abxProtocolResult(soap, ns2__abxProtocolResult*) serialize to a stream
class ns2__abxProtocolResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolList.
    ns2__abxProtocolList*                list                           1;	///< Required element.
};

/// "http://xml.netbeans.org/schema/abxProtocol":abxProtocolList is a complexType.
/// class ns2__abxProtocolList operations:
/// - soap_new_ns2__abxProtocolList(soap*) allocate
/// - soap_new_ns2__abxProtocolList(soap*, int num) allocate array
/// - soap_new_req_ns2__abxProtocolList(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__abxProtocolList(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__abxProtocolList(soap*, ns2__abxProtocolList*) deserialize from a stream
/// - int soap_write_ns2__abxProtocolList(soap, ns2__abxProtocolList*) serialize to a stream
class ns2__abxProtocolList : public xsd__anyType
{ public:
/// Size of array of ns2__abxProtocol* is 1..unbounded
   $int                                  __sizeprotocolList             1;
/// Pointer to array ns2__abxProtocol* of length 1..unbounded
    ns2__abxProtocol*                   *protocolList                   1;
};

/// "http://xml.netbeans.org/schema/abxProtocol":abxProtocol is a complexType.
/// class ns2__abxProtocol operations:
/// - soap_new_ns2__abxProtocol(soap*) allocate
/// - soap_new_ns2__abxProtocol(soap*, int num) allocate array
/// - soap_new_req_ns2__abxProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__abxProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__abxProtocol(soap*, ns2__abxProtocol*) deserialize from a stream
/// - int soap_write_ns2__abxProtocol(soap, ns2__abxProtocol*) serialize to a stream
class ns2__abxProtocol : public xsd__anyType
{ public:
/// Size of allDescription array is 1..unbounded
   $int                                  __sizeallDescription           1;
/// class _ns2__abxProtocol_allDescription operations:
/// - soap_new__ns2__abxProtocol_allDescription(soap*) allocate
/// - soap_new__ns2__abxProtocol_allDescription(soap*, int num) allocate array
/// - soap_new_req__ns2__abxProtocol_allDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns2__abxProtocol_allDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns2__abxProtocol_allDescription(soap*, _ns2__abxProtocol_allDescription*) deserialize from a stream
/// - int soap_write__ns2__abxProtocol_allDescription(soap, _ns2__abxProtocol_allDescription*) serialize to a stream
    class _ns2__abxProtocol_allDescription
    {
/// Element language of type xs:string.
    char*                                :language                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                :description                   1;	///< Required element.
    }                                   *allDescription                 1;
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element messageId of type xs:string.
    char*                                messageId                      1;	///< Required element.
/// Element protocolName of type xs:string.
    char*                                protocolName                   1;	///< Required element.
/// Element checkDate of type xs:boolean.
    bool                                 checkDate                      1;	///< Required element.
/// Element checkSequenceDate of type xs:boolean.
    bool                                 checkSequenceDate              1;	///< Required element.
/// Element annualReset of type xs:boolean.
    bool                                 annualReset                    1;	///< Required element.
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
/// Element note of type xs:string.
    char*                                note                           1;	///< Required element.
/// Element idProtocol of type xs:string.
    char*                                idProtocol                     1;	///< Required element.
/// Element protocolDesc of type xs:string.
    char*                                protocolDesc                   1;	///< Required element.
/// Element numberLength of type xs:int.
    int                                  numberLength                   1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xml.netbeans.org/schema/abxDynaminorg                             *
 *                                                                            *
\******************************************************************************/


/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList is a complexType.
/// class ns3__abxDynamicorgRuleList operations:
/// - soap_new_ns3__abxDynamicorgRuleList(soap*) allocate
/// - soap_new_ns3__abxDynamicorgRuleList(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynamicorgRuleList(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynamicorgRuleList(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynamicorgRuleList(soap*, ns3__abxDynamicorgRuleList*) deserialize from a stream
/// - int soap_write_ns3__abxDynamicorgRuleList(soap, ns3__abxDynamicorgRuleList*) serialize to a stream
class ns3__abxDynamicorgRuleList : public xsd__anyType
{ public:
/// Size of array of ns3__abxDynamicorgRule* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns3__abxDynamicorgRule* of length 1..unbounded
    ns3__abxDynamicorgRule*             *list                           1;
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRule is a complexType.
/// class ns3__abxDynamicorgRule operations:
/// - soap_new_ns3__abxDynamicorgRule(soap*) allocate
/// - soap_new_ns3__abxDynamicorgRule(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynamicorgRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynamicorgRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynamicorgRule(soap*, ns3__abxDynamicorgRule*) deserialize from a stream
/// - int soap_write_ns3__abxDynamicorgRule(soap, ns3__abxDynamicorgRule*) serialize to a stream
class ns3__abxDynamicorgRule : public xsd__anyType
{ public:
/// Element ruleName of type xs:string.
    char*                                ruleName                       1;	///< Required element.
/// Element user of type xs:string.
    char*                                user                           1;	///< Required element.
/// Element templateName of type xs:string.
    char*                                templateName                   1;	///< Required element.
/// Element rootInstanceName of type xs:string.
    char*                                rootInstanceName               1;	///< Required element.
/// Size of array of ns3__abxDynamicorgRuleElement* is 1..unbounded
   $int                                  __sizeelements                 1;
/// Pointer to array ns3__abxDynamicorgRuleElement* of length 1..unbounded
    ns3__abxDynamicorgRuleElement*      *elements                       1;
/// Element permission of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permission                     1;	///< Required element.
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleElement is a complexType.
/// class ns3__abxDynamicorgRuleElement operations:
/// - soap_new_ns3__abxDynamicorgRuleElement(soap*) allocate
/// - soap_new_ns3__abxDynamicorgRuleElement(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynamicorgRuleElement(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynamicorgRuleElement(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynamicorgRuleElement(soap*, ns3__abxDynamicorgRuleElement*) deserialize from a stream
/// - int soap_write_ns3__abxDynamicorgRuleElement(soap, ns3__abxDynamicorgRuleElement*) serialize to a stream
class ns3__abxDynamicorgRuleElement : public xsd__anyType
{ public:
/// Element ruleTypeName of type xs:string.
    char*                                ruleTypeName                   1;	///< Required element.
/// Element Description of type xs:string.
    char*                                Description                    1;	///< Required element.
/// Element orderId of type xs:int.
    int                                  orderId                        1;	///< Required element.
/// Element option of type xs:string.
    char*                                option                         1;	///< Required element.
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicRuleResult is a complexType.
/// class ns3__abxDynamicRuleResult operations:
/// - soap_new_ns3__abxDynamicRuleResult(soap*) allocate
/// - soap_new_ns3__abxDynamicRuleResult(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynamicRuleResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynamicRuleResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynamicRuleResult(soap*, ns3__abxDynamicRuleResult*) deserialize from a stream
/// - int soap_write_ns3__abxDynamicRuleResult(soap, ns3__abxDynamicRuleResult*) serialize to a stream
class ns3__abxDynamicRuleResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element rules of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          rules                          1;	///< Required element.
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynorgTypeResult is a complexType.
/// class ns3__abxDynorgTypeResult operations:
/// - soap_new_ns3__abxDynorgTypeResult(soap*) allocate
/// - soap_new_ns3__abxDynorgTypeResult(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynorgTypeResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynorgTypeResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynorgTypeResult(soap*, ns3__abxDynorgTypeResult*) deserialize from a stream
/// - int soap_write_ns3__abxDynorgTypeResult(soap, ns3__abxDynorgTypeResult*) serialize to a stream
class ns3__abxDynorgTypeResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element types of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgTypeList.
    ns3__abxDynamicorgTypeList*          types                          1;	///< Required element.
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgTypeList is a complexType.
/// class ns3__abxDynamicorgTypeList operations:
/// - soap_new_ns3__abxDynamicorgTypeList(soap*) allocate
/// - soap_new_ns3__abxDynamicorgTypeList(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynamicorgTypeList(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynamicorgTypeList(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynamicorgTypeList(soap*, ns3__abxDynamicorgTypeList*) deserialize from a stream
/// - int soap_write_ns3__abxDynamicorgTypeList(soap, ns3__abxDynamicorgTypeList*) serialize to a stream
class ns3__abxDynamicorgTypeList : public xsd__anyType
{ public:
/// Size of array of ns3__abxDynorgRuleType* is 1..unbounded
   $int                                  __sizetype                     1;
/// Pointer to array ns3__abxDynorgRuleType* of length 1..unbounded
    ns3__abxDynorgRuleType*             *type                           1;
};

/// "http://xml.netbeans.org/schema/abxDynaminorg":abxDynorgRuleType is a complexType.
/// class ns3__abxDynorgRuleType operations:
/// - soap_new_ns3__abxDynorgRuleType(soap*) allocate
/// - soap_new_ns3__abxDynorgRuleType(soap*, int num) allocate array
/// - soap_new_req_ns3__abxDynorgRuleType(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__abxDynorgRuleType(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__abxDynorgRuleType(soap*, ns3__abxDynorgRuleType*) deserialize from a stream
/// - int soap_write_ns3__abxDynorgRuleType(soap, ns3__abxDynorgRuleType*) serialize to a stream
class ns3__abxDynorgRuleType : public xsd__anyType
{ public:
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xml.netbeans.org/schema/abxCan                                    *
 *                                                                            *
\******************************************************************************/


/// "http://xml.netbeans.org/schema/abxCan":abxCan is a complexType.
/// class ns4__abxCan operations:
/// - soap_new_ns4__abxCan(soap*) allocate
/// - soap_new_ns4__abxCan(soap*, int num) allocate array
/// - soap_new_req_ns4__abxCan(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__abxCan(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__abxCan(soap*, ns4__abxCan*) deserialize from a stream
/// - int soap_write_ns4__abxCan(soap, ns4__abxCan*) serialize to a stream
class ns4__abxCan : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element can of type xs:boolean.
    bool                                 can                            1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://ws.abx/                                                           *
 *                                                                            *
\******************************************************************************/


/// "http://ws.abx/":DeleteSDKTaskFieldMapping is a complexType.
/// class ns1__DeleteSDKTaskFieldMapping operations:
/// - soap_new_ns1__DeleteSDKTaskFieldMapping(soap*) allocate
/// - soap_new_ns1__DeleteSDKTaskFieldMapping(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKTaskFieldMapping(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKTaskFieldMapping(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKTaskFieldMapping(soap*, ns1__DeleteSDKTaskFieldMapping*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKTaskFieldMapping(soap, ns1__DeleteSDKTaskFieldMapping*) serialize to a stream
class ns1__DeleteSDKTaskFieldMapping : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":IDtype is a complexType.
/// class ns1__IDtype operations:
/// - soap_new_ns1__IDtype(soap*) allocate
/// - soap_new_ns1__IDtype(soap*, int num) allocate array
/// - soap_new_req_ns1__IDtype(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__IDtype(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__IDtype(soap*, ns1__IDtype*) deserialize from a stream
/// - int soap_write_ns1__IDtype(soap, ns1__IDtype*) serialize to a stream
class ns1__IDtype : public xsd__anyType
{ public:
/// Element SessionID of type xs:string.
    char*                                SessionID                      1;	///< Required element.
/// Element CryptSessionHash of type xs:string.
    char*                                CryptSessionHash               1;	///< Required element.
/// Element privilegedUser of type xs:boolean.
    bool                                 privilegedUser                 1;	///< Required element.
};

/// "http://ws.abx/":DeleteSDKTaskFieldMappingResponse is a complexType.
/// class ns1__DeleteSDKTaskFieldMappingResponse operations:
/// - soap_new_ns1__DeleteSDKTaskFieldMappingResponse(soap*) allocate
/// - soap_new_ns1__DeleteSDKTaskFieldMappingResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKTaskFieldMappingResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKTaskFieldMappingResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKTaskFieldMappingResponse(soap*, ns1__DeleteSDKTaskFieldMappingResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKTaskFieldMappingResponse(soap, ns1__DeleteSDKTaskFieldMappingResponse*) serialize to a stream
class ns1__DeleteSDKTaskFieldMappingResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxSDKResult is a complexType.
/// class ns1__abxSDKResult operations:
/// - soap_new_ns1__abxSDKResult(soap*) allocate
/// - soap_new_ns1__abxSDKResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKResult(soap*, ns1__abxSDKResult*) deserialize from a stream
/// - int soap_write_ns1__abxSDKResult(soap, ns1__abxSDKResult*) serialize to a stream
class ns1__abxSDKResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element listTask of type "http://ws.abx/":abxSDKTaskList.
    ns1__abxSDKTaskList*                 listTask                       0;	///< Optional element.
/// Element listRule of type "http://ws.abx/":abxSDKRuleList.
    ns1__abxSDKRuleList*                 listRule                       0;	///< Optional element.
/// Element listVariable of type "http://ws.abx/":abxSDKVariableList.
    ns1__abxSDKVariableList*             listVariable                   0;	///< Optional element.
/// Element listWatchFolderDirectory of type "http://ws.abx/":abxSDKWatchFolderDirectoryList.
    ns1__abxSDKWatchFolderDirectoryList*  listWatchFolderDirectory       0;	///< Optional element.
};

/// "http://ws.abx/":abxSDKTaskList is a complexType.
/// class ns1__abxSDKTaskList operations:
/// - soap_new_ns1__abxSDKTaskList(soap*) allocate
/// - soap_new_ns1__abxSDKTaskList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskList(soap*, ns1__abxSDKTaskList*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskList(soap, ns1__abxSDKTaskList*) serialize to a stream
class ns1__abxSDKTaskList : public xsd__anyType
{ public:
/// Size of array of ns1__abxSDKTask* is 1..unbounded
   $int                                  __sizetasks                    1;
/// Pointer to array ns1__abxSDKTask* of length 1..unbounded
    ns1__abxSDKTask*                    *tasks                          1;
};

/// "http://ws.abx/":abxSDKTask is a complexType.
/// class ns1__abxSDKTask operations:
/// - soap_new_ns1__abxSDKTask(soap*) allocate
/// - soap_new_ns1__abxSDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTask(soap*, ns1__abxSDKTask*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTask(soap, ns1__abxSDKTask*) serialize to a stream
class ns1__abxSDKTask : public xsd__anyType
{ public:
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element description of type xs:string.
    char*                                description                    0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileType of type xs:string.
    char*                                fileType                       0;	///< Optional element.
/// Element status of type xs:string.
    char*                                status                         0;	///< Optional element.
/// Element templateFile of type xs:string.
    char*                                templateFile                   0;	///< Optional element.
/// Size of array of ns1__abxSDKWatchFolder* is 0..unbounded
   $int                                  __sizewatchFolder              0;
/// Pointer to array ns1__abxSDKWatchFolder* of length 0..unbounded
    ns1__abxSDKWatchFolder*             *watchFolder                    0;	///< Nillable pointer.
/// Size of array of ns1__abxSDKTaskFieldMapping* is 0..unbounded
   $int                                  __sizefieldMappings            0;
/// Pointer to array ns1__abxSDKTaskFieldMapping* of length 0..unbounded
    ns1__abxSDKTaskFieldMapping*        *fieldMappings                  0;	///< Nillable pointer.
/// Size of array of ns1__abxSDKTaskExcelPreviewSheet* is 0..unbounded
   $int                                  __sizeexcelPreviewSheets       0;
/// Pointer to array ns1__abxSDKTaskExcelPreviewSheet* of length 0..unbounded
    ns1__abxSDKTaskExcelPreviewSheet*   *excelPreviewSheets             0;	///< Nillable pointer.
/// Size of array of ns1__abxSDKTaskPDFPreview* is 0..unbounded
   $int                                  __sizePDFPreview               0;
/// Pointer to array ns1__abxSDKTaskPDFPreview* of length 0..unbounded
    ns1__abxSDKTaskPDFPreview*          *PDFPreview                     0;
/// Size of array of char* is 0..unbounded
   $int                                  __sizeTXTPreview               0;
/// Pointer to array char* of length 0..unbounded
    char*                               *TXTPreview                     0;
/// Size of array of ns1__abxSDKTaskValidateData* is 0..unbounded
   $int                                  __sizevalidateData             0;
/// Pointer to array ns1__abxSDKTaskValidateData* of length 0..unbounded
    ns1__abxSDKTaskValidateData*        *validateData                   0;	///< Nillable pointer.
/// Element templateFilePassword of type xs:string.
    char*                                templateFilePassword           0;	///< Optional element.
};

/// "http://ws.abx/":abxSDKWatchFolder is a complexType.
/// class ns1__abxSDKWatchFolder operations:
/// - soap_new_ns1__abxSDKWatchFolder(soap*) allocate
/// - soap_new_ns1__abxSDKWatchFolder(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKWatchFolder(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKWatchFolder(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKWatchFolder(soap*, ns1__abxSDKWatchFolder*) deserialize from a stream
/// - int soap_write_ns1__abxSDKWatchFolder(soap, ns1__abxSDKWatchFolder*) serialize to a stream
class ns1__abxSDKWatchFolder : public xsd__anyType
{ public:
/// Element watchFolderId of type xs:string.
    char*                                watchFolderId                  1;	///< Required element.
/// Element taskId of type xs:string.
    char*                                taskId                         1;	///< Required element.
/// Element serverType of type xs:string.
    char*                                serverType                     1;	///< Required element.
/// Element configXML of type xs:string.
    char*                                configXML                      1;	///< Required element.
};

/// "http://ws.abx/":abxSDKTaskFieldMapping is a complexType.
/// class ns1__abxSDKTaskFieldMapping operations:
/// - soap_new_ns1__abxSDKTaskFieldMapping(soap*) allocate
/// - soap_new_ns1__abxSDKTaskFieldMapping(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskFieldMapping(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskFieldMapping(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskFieldMapping(soap*, ns1__abxSDKTaskFieldMapping*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskFieldMapping(soap, ns1__abxSDKTaskFieldMapping*) serialize to a stream
class ns1__abxSDKTaskFieldMapping : public xsd__anyType
{ public:
/// Element fieldMappingId of type xs:string.
    char*                                fieldMappingId                 1;	///< Required element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element previewXML of type xs:string.
    char*                                previewXML                     1;	///< Required element.
/// Size of array of ns1__abxSDKTaskFieldMappingRule* is 0..unbounded
   $int                                  __sizefieldMappingRules        0;
/// Pointer to array ns1__abxSDKTaskFieldMappingRule* of length 0..unbounded
    ns1__abxSDKTaskFieldMappingRule*    *fieldMappingRules              0;	///< Nillable pointer.
};

/// "http://ws.abx/":abxSDKTaskFieldMappingRule is a complexType.
/// class ns1__abxSDKTaskFieldMappingRule operations:
/// - soap_new_ns1__abxSDKTaskFieldMappingRule(soap*) allocate
/// - soap_new_ns1__abxSDKTaskFieldMappingRule(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskFieldMappingRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskFieldMappingRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskFieldMappingRule(soap*, ns1__abxSDKTaskFieldMappingRule*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskFieldMappingRule(soap, ns1__abxSDKTaskFieldMappingRule*) serialize to a stream
class ns1__abxSDKTaskFieldMappingRule : public xsd__anyType
{ public:
/// Element fieldMappingRuleId of type xs:string.
    char*                                fieldMappingRuleId             1;	///< Required element.
/// Element ruleId of type xs:string.
    char*                                ruleId                         1;	///< Required element.
/// Element ruleName of type xs:string.
    char*                                ruleName                       1;	///< Required element.
/// Element parametersXML of type xs:string.
    char*                                parametersXML                  1;	///< Required element.
};

/// "http://ws.abx/":abxSDKTaskExcelPreviewSheet is a complexType.
/// class ns1__abxSDKTaskExcelPreviewSheet operations:
/// - soap_new_ns1__abxSDKTaskExcelPreviewSheet(soap*) allocate
/// - soap_new_ns1__abxSDKTaskExcelPreviewSheet(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskExcelPreviewSheet(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskExcelPreviewSheet(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskExcelPreviewSheet(soap*, ns1__abxSDKTaskExcelPreviewSheet*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskExcelPreviewSheet(soap, ns1__abxSDKTaskExcelPreviewSheet*) serialize to a stream
class ns1__abxSDKTaskExcelPreviewSheet : public xsd__anyType
{ public:
/// Element columnCount of type xs:int.
    int                                  columnCount                    1;	///< Required element.
/// Element rowCount of type xs:int.
    int                                  rowCount                       1;	///< Required element.
/// Size of array of ns1__abxSDKTaskExcelPreviewColumn* is 0..unbounded
   $int                                  __sizecolumns                  0;
/// Pointer to array ns1__abxSDKTaskExcelPreviewColumn* of length 0..unbounded
    ns1__abxSDKTaskExcelPreviewColumn*  *columns                        0;	///< Nillable pointer.
/// Size of array of ns1__abxSDKTaskExcelPreviewRow* is 0..unbounded
   $int                                  __sizerows                     0;
/// Pointer to array ns1__abxSDKTaskExcelPreviewRow* of length 0..unbounded
    ns1__abxSDKTaskExcelPreviewRow*     *rows                           0;	///< Nillable pointer.
};

/// "http://ws.abx/":abxSDKTaskExcelPreviewColumn is a complexType.
/// class ns1__abxSDKTaskExcelPreviewColumn operations:
/// - soap_new_ns1__abxSDKTaskExcelPreviewColumn(soap*) allocate
/// - soap_new_ns1__abxSDKTaskExcelPreviewColumn(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskExcelPreviewColumn(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskExcelPreviewColumn(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskExcelPreviewColumn(soap*, ns1__abxSDKTaskExcelPreviewColumn*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskExcelPreviewColumn(soap, ns1__abxSDKTaskExcelPreviewColumn*) serialize to a stream
class ns1__abxSDKTaskExcelPreviewColumn : public xsd__anyType
{ public:
/// Element columnId of type xs:int.
    int                                  columnId                       1;	///< Required element.
/// Element columnWidth of type xs:int.
    int                                  columnWidth                    1;	///< Required element.
};

/// "http://ws.abx/":abxSDKTaskExcelPreviewRow is a complexType.
/// class ns1__abxSDKTaskExcelPreviewRow operations:
/// - soap_new_ns1__abxSDKTaskExcelPreviewRow(soap*) allocate
/// - soap_new_ns1__abxSDKTaskExcelPreviewRow(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskExcelPreviewRow(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskExcelPreviewRow(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskExcelPreviewRow(soap*, ns1__abxSDKTaskExcelPreviewRow*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskExcelPreviewRow(soap, ns1__abxSDKTaskExcelPreviewRow*) serialize to a stream
class ns1__abxSDKTaskExcelPreviewRow : public xsd__anyType
{ public:
/// Element columnId of type xs:int.
    int                                  columnId                       1;	///< Required element.
/// Element rowId of type xs:int.
    int                                  rowId                          1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
};

/// "http://ws.abx/":abxSDKTaskPDFPreview is a complexType.
/// class ns1__abxSDKTaskPDFPreview operations:
/// - soap_new_ns1__abxSDKTaskPDFPreview(soap*) allocate
/// - soap_new_ns1__abxSDKTaskPDFPreview(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskPDFPreview(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskPDFPreview(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskPDFPreview(soap*, ns1__abxSDKTaskPDFPreview*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskPDFPreview(soap, ns1__abxSDKTaskPDFPreview*) serialize to a stream
class ns1__abxSDKTaskPDFPreview : public xsd__anyType
{ public:
/// Element width of type xs:int.
    int*                                 width                          0;	///< Optional element.
/// Element height of type xs:int.
    int*                                 height                         0;	///< Optional element.
/// Element text of type xs:string.
    char*                                text                           0;	///< Optional element.
/// Size of array of ns1__abxSDKTaskPDFImage* is 0..unbounded
   $int                                  __sizeimages                   0;
/// Pointer to array ns1__abxSDKTaskPDFImage* of length 0..unbounded
    ns1__abxSDKTaskPDFImage*            *images                         0;	///< Nillable pointer.
};

/// "http://ws.abx/":abxSDKTaskPDFImage is a complexType.
/// class ns1__abxSDKTaskPDFImage operations:
/// - soap_new_ns1__abxSDKTaskPDFImage(soap*) allocate
/// - soap_new_ns1__abxSDKTaskPDFImage(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskPDFImage(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskPDFImage(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskPDFImage(soap*, ns1__abxSDKTaskPDFImage*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskPDFImage(soap, ns1__abxSDKTaskPDFImage*) serialize to a stream
class ns1__abxSDKTaskPDFImage : public xsd__anyType
{ public:
/// Element bitArray of type xs:base64Binary.
    xsd__base64Binary                    bitArray                       1;	///< Required element.
};

/// "http://ws.abx/":abxSDKTaskValidateData is a complexType.
/// class ns1__abxSDKTaskValidateData operations:
/// - soap_new_ns1__abxSDKTaskValidateData(soap*) allocate
/// - soap_new_ns1__abxSDKTaskValidateData(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskValidateData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskValidateData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskValidateData(soap*, ns1__abxSDKTaskValidateData*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskValidateData(soap, ns1__abxSDKTaskValidateData*) serialize to a stream
class ns1__abxSDKTaskValidateData : public xsd__anyType
{ public:
/// Element detailedMessage of type xs:string.
    char*                                detailedMessage                0;	///< Optional element.
/// Size of array of ns1__abxSDKTaskValidateField* is 0..unbounded
   $int                                  __sizefields                   0;
/// Pointer to array ns1__abxSDKTaskValidateField* of length 0..unbounded
    ns1__abxSDKTaskValidateField*       *fields                         0;	///< Nillable pointer.
/// Size of array of char* is 0..unbounded
   $int                                  __sizefilesAttach              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *filesAttach                    0;	///< Nillable pointer.
};

/// "http://ws.abx/":abxSDKTaskValidateField is a complexType.
/// class ns1__abxSDKTaskValidateField operations:
/// - soap_new_ns1__abxSDKTaskValidateField(soap*) allocate
/// - soap_new_ns1__abxSDKTaskValidateField(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKTaskValidateField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKTaskValidateField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKTaskValidateField(soap*, ns1__abxSDKTaskValidateField*) deserialize from a stream
/// - int soap_write_ns1__abxSDKTaskValidateField(soap, ns1__abxSDKTaskValidateField*) serialize to a stream
class ns1__abxSDKTaskValidateField : public xsd__anyType
{ public:
/// Element field of type xs:string.
    char*                                field                          1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
};

/// "http://ws.abx/":abxSDKRuleList is a complexType.
/// class ns1__abxSDKRuleList operations:
/// - soap_new_ns1__abxSDKRuleList(soap*) allocate
/// - soap_new_ns1__abxSDKRuleList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKRuleList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKRuleList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKRuleList(soap*, ns1__abxSDKRuleList*) deserialize from a stream
/// - int soap_write_ns1__abxSDKRuleList(soap, ns1__abxSDKRuleList*) serialize to a stream
class ns1__abxSDKRuleList : public xsd__anyType
{ public:
/// Size of array of ns1__abxSDKRule* is 1..unbounded
   $int                                  __sizerules                    1;
/// Pointer to array ns1__abxSDKRule* of length 1..unbounded
    ns1__abxSDKRule*                    *rules                          1;
};

/// "http://ws.abx/":abxSDKRule is a complexType.
/// class ns1__abxSDKRule operations:
/// - soap_new_ns1__abxSDKRule(soap*) allocate
/// - soap_new_ns1__abxSDKRule(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKRule(soap*, ns1__abxSDKRule*) deserialize from a stream
/// - int soap_write_ns1__abxSDKRule(soap, ns1__abxSDKRule*) serialize to a stream
class ns1__abxSDKRule : public xsd__anyType
{ public:
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element name_description of type xs:string.
    char*                                name_USCOREdescription         1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element parametersXML of type xs:string.
    char*                                parametersXML                  1;	///< Required element.
};

/// "http://ws.abx/":abxSDKVariableList is a complexType.
/// class ns1__abxSDKVariableList operations:
/// - soap_new_ns1__abxSDKVariableList(soap*) allocate
/// - soap_new_ns1__abxSDKVariableList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKVariableList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKVariableList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKVariableList(soap*, ns1__abxSDKVariableList*) deserialize from a stream
/// - int soap_write_ns1__abxSDKVariableList(soap, ns1__abxSDKVariableList*) serialize to a stream
class ns1__abxSDKVariableList : public xsd__anyType
{ public:
/// Size of array of ns1__abxSDKVariable* is 1..unbounded
   $int                                  __sizevariables                1;
/// Pointer to array ns1__abxSDKVariable* of length 1..unbounded
    ns1__abxSDKVariable*                *variables                      1;
};

/// "http://ws.abx/":abxSDKVariable is a complexType.
/// class ns1__abxSDKVariable operations:
/// - soap_new_ns1__abxSDKVariable(soap*) allocate
/// - soap_new_ns1__abxSDKVariable(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKVariable(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKVariable(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKVariable(soap*, ns1__abxSDKVariable*) deserialize from a stream
/// - int soap_write_ns1__abxSDKVariable(soap, ns1__abxSDKVariable*) serialize to a stream
class ns1__abxSDKVariable : public xsd__anyType
{ public:
/// Element key of type xs:string.
    char*                                key                            1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
};

/// "http://ws.abx/":abxSDKWatchFolderDirectoryList is a complexType.
/// class ns1__abxSDKWatchFolderDirectoryList operations:
/// - soap_new_ns1__abxSDKWatchFolderDirectoryList(soap*) allocate
/// - soap_new_ns1__abxSDKWatchFolderDirectoryList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKWatchFolderDirectoryList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKWatchFolderDirectoryList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKWatchFolderDirectoryList(soap*, ns1__abxSDKWatchFolderDirectoryList*) deserialize from a stream
/// - int soap_write_ns1__abxSDKWatchFolderDirectoryList(soap, ns1__abxSDKWatchFolderDirectoryList*) serialize to a stream
class ns1__abxSDKWatchFolderDirectoryList : public xsd__anyType
{ public:
/// Size of array of ns1__abxSDKWatchFolderDirectory* is 1..unbounded
   $int                                  __sizedirectories              1;
/// Pointer to array ns1__abxSDKWatchFolderDirectory* of length 1..unbounded
    ns1__abxSDKWatchFolderDirectory*    *directories                    1;
};

/// "http://ws.abx/":abxSDKWatchFolderDirectory is a complexType.
/// class ns1__abxSDKWatchFolderDirectory operations:
/// - soap_new_ns1__abxSDKWatchFolderDirectory(soap*) allocate
/// - soap_new_ns1__abxSDKWatchFolderDirectory(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSDKWatchFolderDirectory(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSDKWatchFolderDirectory(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSDKWatchFolderDirectory(soap*, ns1__abxSDKWatchFolderDirectory*) deserialize from a stream
/// - int soap_write_ns1__abxSDKWatchFolderDirectory(soap, ns1__abxSDKWatchFolderDirectory*) serialize to a stream
class ns1__abxSDKWatchFolderDirectory : public xsd__anyType
{ public:
/// Element directoryName of type xs:string.
    char*                                directoryName                  1;	///< Required element.
};

/// "http://ws.abx/":RemoveUserByAllGroups is a complexType.
/// class ns1__RemoveUserByAllGroups operations:
/// - soap_new_ns1__RemoveUserByAllGroups(soap*) allocate
/// - soap_new_ns1__RemoveUserByAllGroups(soap*, int num) allocate array
/// - soap_new_req_ns1__RemoveUserByAllGroups(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RemoveUserByAllGroups(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RemoveUserByAllGroups(soap*, ns1__RemoveUserByAllGroups*) deserialize from a stream
/// - int soap_write_ns1__RemoveUserByAllGroups(soap, ns1__RemoveUserByAllGroups*) serialize to a stream
class ns1__RemoveUserByAllGroups : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":RemoveUserByAllGroupsResponse is a complexType.
/// class ns1__RemoveUserByAllGroupsResponse operations:
/// - soap_new_ns1__RemoveUserByAllGroupsResponse(soap*) allocate
/// - soap_new_ns1__RemoveUserByAllGroupsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__RemoveUserByAllGroupsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RemoveUserByAllGroupsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RemoveUserByAllGroupsResponse(soap*, ns1__RemoveUserByAllGroupsResponse*) deserialize from a stream
/// - int soap_write_ns1__RemoveUserByAllGroupsResponse(soap, ns1__RemoveUserByAllGroupsResponse*) serialize to a stream
class ns1__RemoveUserByAllGroupsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxUserListResult is a complexType.
/// class ns1__abxUserListResult operations:
/// - soap_new_ns1__abxUserListResult(soap*) allocate
/// - soap_new_ns1__abxUserListResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxUserListResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxUserListResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxUserListResult(soap*, ns1__abxUserListResult*) deserialize from a stream
/// - int soap_write_ns1__abxUserListResult(soap, ns1__abxUserListResult*) serialize to a stream
class ns1__abxUserListResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element users of type "http://ws.abx/":abxUserList.
    ns1__abxUserList*                    users                          1;	///< Required element.
};

/// "http://ws.abx/":abxUserList is a complexType.
/// class ns1__abxUserList operations:
/// - soap_new_ns1__abxUserList(soap*) allocate
/// - soap_new_ns1__abxUserList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxUserList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxUserList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxUserList(soap*, ns1__abxUserList*) deserialize from a stream
/// - int soap_write_ns1__abxUserList(soap, ns1__abxUserList*) serialize to a stream
class ns1__abxUserList : public xsd__anyType
{ public:
/// Size of array of ns1__abxUser* is 1..unbounded
   $int                                  __sizeuser                     1;
/// Pointer to array ns1__abxUser* of length 1..unbounded
    ns1__abxUser*                       *user                           1;
};

/// "http://ws.abx/":abxUser is a complexType.
/// class ns1__abxUser operations:
/// - soap_new_ns1__abxUser(soap*) allocate
/// - soap_new_ns1__abxUser(soap*, int num) allocate array
/// - soap_new_req_ns1__abxUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxUser(soap*, ns1__abxUser*) deserialize from a stream
/// - int soap_write_ns1__abxUser(soap, ns1__abxUser*) serialize to a stream
class ns1__abxUser : public xsd__anyType
{ public:
/// Element userName of type xs:string.
    char*                                userName                       1;	///< Required element.
/// Element userPassword of type xs:string.
    char*                                userPassword                   1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element userEmail of type xs:string.
    char*                                userEmail                      1;	///< Required element.
/// Element userId of type xs:string.
    char*                                userId                         1;	///< Required element.
/// Element userType of type xs:string.
    char*                                userType                       1;	///< Required element.
/// Element userMaxSessions of type xs:string.
    char*                                userMaxSessions                1;	///< Required element.
/// Element userAvailSessions of type xs:string.
    char*                                userAvailSessions              1;	///< Required element.
/// Element notificaEmail of type xs:boolean.
    bool                                 notificaEmail                  1;	///< Required element.
/// Element usaDefProcesso of type xs:boolean.
    bool                                 usaDefProcesso                 1;	///< Required element.
/// Element disAutoWorklist of type xs:boolean.
    bool                                 disAutoWorklist                1;	///< Required element.
/// Element disAutoRaccoglitori of type xs:boolean.
    bool                                 disAutoRaccoglitori            1;	///< Required element.
/// Element previewWorklist of type xs:boolean.
    bool                                 previewWorklist                1;	///< Required element.
/// Element protocolEnabled of type xs:boolean.
    bool                                 protocolEnabled                1;	///< Required element.
/// Element defaultProtocolId of type xs:string.
    char*                                defaultProtocolId              1;	///< Required element.
/// Size of array of ns1__abxUserConfig* is 1..unbounded
   $int                                  __sizeuserConfigList           1;
/// Pointer to array ns1__abxUserConfig* of length 1..unbounded
    ns1__abxUserConfig*                 *userConfigList                 1;
/// Element groupList of type "http://ws.abx/":abxGroupList.
    ns1__abxGroupList*                   groupList                      1;	///< Required element.
/// Element privilegedUser of type xs:boolean.
    bool                                 privilegedUser                 1;	///< Required element.
/// Element digitalSignAlias of type xs:string.
    char*                                digitalSignAlias               1;	///< Required element.
/// Element digitalSignPassword of type xs:string.
    char*                                digitalSignPassword            1;	///< Required element.
/// Element digitalSignPasswordType of type xs:int.
    int                                  digitalSignPasswordType        1;	///< Required element.
/// Element modifyUserPassword of type xs:boolean.
    bool                                 modifyUserPassword             1;	///< Required element.
/// Element modifyDigitalSignPassword of type xs:boolean.
    bool                                 modifyDigitalSignPassword      1;	///< Required element.
/// Element isSystemUser of type xs:boolean.
    bool                                 isSystemUser                   1;	///< Required element.
/// Element worklistAutoRefresh of type xs:boolean.
    bool                                 worklistAutoRefresh            1;	///< Required element.
/// Element isActiveDirectoryUser of type xs:boolean.
    bool                                 isActiveDirectoryUser          1;	///< Required element.
};

/// "http://ws.abx/":abxUserConfig is a complexType.
/// class ns1__abxUserConfig operations:
/// - soap_new_ns1__abxUserConfig(soap*) allocate
/// - soap_new_ns1__abxUserConfig(soap*, int num) allocate array
/// - soap_new_req_ns1__abxUserConfig(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxUserConfig(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxUserConfig(soap*, ns1__abxUserConfig*) deserialize from a stream
/// - int soap_write_ns1__abxUserConfig(soap, ns1__abxUserConfig*) serialize to a stream
class ns1__abxUserConfig : public xsd__anyType
{ public:
/// Element key of type xs:string.
    char*                                key                            1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
};

/// "http://ws.abx/":abxGroupList is a complexType.
/// class ns1__abxGroupList operations:
/// - soap_new_ns1__abxGroupList(soap*) allocate
/// - soap_new_ns1__abxGroupList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGroupList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGroupList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGroupList(soap*, ns1__abxGroupList*) deserialize from a stream
/// - int soap_write_ns1__abxGroupList(soap, ns1__abxGroupList*) serialize to a stream
class ns1__abxGroupList : public xsd__anyType
{ public:
/// Size of array of ns1__abxGroup* is 1..unbounded
   $int                                  __sizegroup                    1;
/// Pointer to array ns1__abxGroup* of length 1..unbounded
    ns1__abxGroup*                      *group                          1;
};

/// "http://ws.abx/":abxGroup is a complexType.
/// class ns1__abxGroup operations:
/// - soap_new_ns1__abxGroup(soap*) allocate
/// - soap_new_ns1__abxGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGroup(soap*, ns1__abxGroup*) deserialize from a stream
/// - int soap_write_ns1__abxGroup(soap, ns1__abxGroup*) serialize to a stream
class ns1__abxGroup : public xsd__anyType
{ public:
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element userList of type "http://ws.abx/":abxUserList.
    ns1__abxUserList*                    userList                       1;	///< Required element.
/// Element isSystemGroup of type xs:boolean.
    bool                                 isSystemGroup                  1;	///< Required element.
};

/// "http://ws.abx/":AddSign is a complexType.
/// class ns1__AddSign operations:
/// - soap_new_ns1__AddSign(soap*) allocate
/// - soap_new_ns1__AddSign(soap*, int num) allocate array
/// - soap_new_req_ns1__AddSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddSign(soap*, ns1__AddSign*) deserialize from a stream
/// - int soap_write_ns1__AddSign(soap, ns1__AddSign*) serialize to a stream
class ns1__AddSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":abxWorkflow is a complexType.
/// class ns1__abxWorkflow operations:
/// - soap_new_ns1__abxWorkflow(soap*) allocate
/// - soap_new_ns1__abxWorkflow(soap*, int num) allocate array
/// - soap_new_req_ns1__abxWorkflow(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxWorkflow(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxWorkflow(soap*, ns1__abxWorkflow*) deserialize from a stream
/// - int soap_write_ns1__abxWorkflow(soap, ns1__abxWorkflow*) serialize to a stream
class ns1__abxWorkflow : public xsd__anyType
{ public:
/// Size of processoDefUsers array is 1..unbounded
   $int                                  __sizeprocessoDefUsers         1;
/// class _ns1__abxWorkflow_processoDefUsers operations:
/// - soap_new__ns1__abxWorkflow_processoDefUsers(soap*) allocate
/// - soap_new__ns1__abxWorkflow_processoDefUsers(soap*, int num) allocate array
/// - soap_new_req__ns1__abxWorkflow_processoDefUsers(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxWorkflow_processoDefUsers(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxWorkflow_processoDefUsers(soap*, _ns1__abxWorkflow_processoDefUsers*) deserialize from a stream
/// - int soap_write__ns1__abxWorkflow_processoDefUsers(soap, _ns1__abxWorkflow_processoDefUsers*) serialize to a stream
    class _ns1__abxWorkflow_processoDefUsers
    {
/// Element idTable of type xs:string.
    char*                                idTable                        1;	///< Required element.
/// Element idPacchetto of type xs:string.
    char*                                idPacchetto                    1;	///< Required element.
/// Element idProcesso of type xs:string.
    char*                                idProcesso                     1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element nomePacchetto of type xs:string.
    char*                                nomePacchetto                  1;	///< Required element.
/// Element nomeProcesso of type xs:string.
    char*                                nomeProcesso                   1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
    }                                   *processoDefUsers               1;
/// Size of signList array is 1..unbounded
   $int                                  __sizesignList                 1;
/// class _ns1__abxWorkflow_signList operations:
/// - soap_new__ns1__abxWorkflow_signList(soap*) allocate
/// - soap_new__ns1__abxWorkflow_signList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxWorkflow_signList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxWorkflow_signList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxWorkflow_signList(soap*, _ns1__abxWorkflow_signList*) deserialize from a stream
/// - int soap_write__ns1__abxWorkflow_signList(soap, _ns1__abxWorkflow_signList*) serialize to a stream
    class _ns1__abxWorkflow_signList
    {
/// Element idTable of type xs:string.
    char*                                idTable                        1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element tipologia of type xs:string.
    char*                                tipologia                      1;	///< Required element.
/// Element allineamento of type xs:string.
    char*                                allineamento                   1;	///< Required element.
/// Element marker of type xs:string.
    char*                                marker                         1;	///< Required element.
/// Element posX of type xs:int.
    int                                  posX                           1;	///< Required element.
/// Element posY of type xs:int.
    int                                  posY                           1;	///< Required element.
    }                                   *signList                       1;
/// Size of userSettings array is 1..unbounded
   $int                                  __sizeuserSettings             1;
/// class _ns1__abxWorkflow_userSettings operations:
/// - soap_new__ns1__abxWorkflow_userSettings(soap*) allocate
/// - soap_new__ns1__abxWorkflow_userSettings(soap*, int num) allocate array
/// - soap_new_req__ns1__abxWorkflow_userSettings(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxWorkflow_userSettings(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxWorkflow_userSettings(soap*, _ns1__abxWorkflow_userSettings*) deserialize from a stream
/// - int soap_write__ns1__abxWorkflow_userSettings(soap, _ns1__abxWorkflow_userSettings*) serialize to a stream
    class _ns1__abxWorkflow_userSettings
    {
/// Element userName of type xs:string.
    char*                                userName                       1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Size of array of char* is 1..unbounded
   $int                                  __sizeworklistFields           1;
/// Pointer to array char* of length 1..unbounded
    char*                               *worklistFields                 1;
    }                                   *userSettings                   1;
/// Size of variables array is 1..unbounded
   $int                                  __sizevariables                1;
/// class _ns1__abxWorkflow_variables operations:
/// - soap_new__ns1__abxWorkflow_variables(soap*) allocate
/// - soap_new__ns1__abxWorkflow_variables(soap*, int num) allocate array
/// - soap_new_req__ns1__abxWorkflow_variables(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxWorkflow_variables(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxWorkflow_variables(soap*, _ns1__abxWorkflow_variables*) deserialize from a stream
/// - int soap_write__ns1__abxWorkflow_variables(soap, _ns1__abxWorkflow_variables*) serialize to a stream
    class _ns1__abxWorkflow_variables
    {
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
    }                                   *variables                      1;
};

/// "http://ws.abx/":AddSignResponse is a complexType.
/// class ns1__AddSignResponse operations:
/// - soap_new_ns1__AddSignResponse(soap*) allocate
/// - soap_new_ns1__AddSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddSignResponse(soap*, ns1__AddSignResponse*) deserialize from a stream
/// - int soap_write_ns1__AddSignResponse(soap, ns1__AddSignResponse*) serialize to a stream
class ns1__AddSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxWorkflowResult is a complexType.
/// class ns1__abxWorkflowResult operations:
/// - soap_new_ns1__abxWorkflowResult(soap*) allocate
/// - soap_new_ns1__abxWorkflowResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxWorkflowResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxWorkflowResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxWorkflowResult(soap*, ns1__abxWorkflowResult*) deserialize from a stream
/// - int soap_write_ns1__abxWorkflowResult(soap, ns1__abxWorkflowResult*) serialize to a stream
class ns1__abxWorkflowResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxWorkflowList.
    ns1__abxWorkflowList*                list                           1;	///< Required element.
};

/// "http://ws.abx/":abxWorkflowList is a complexType.
/// class ns1__abxWorkflowList operations:
/// - soap_new_ns1__abxWorkflowList(soap*) allocate
/// - soap_new_ns1__abxWorkflowList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxWorkflowList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxWorkflowList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxWorkflowList(soap*, ns1__abxWorkflowList*) deserialize from a stream
/// - int soap_write_ns1__abxWorkflowList(soap, ns1__abxWorkflowList*) serialize to a stream
class ns1__abxWorkflowList : public xsd__anyType
{ public:
/// Size of array of ns1__abxWorkflow* is 1..unbounded
   $int                                  __sizeworkflowList             1;
/// Pointer to array ns1__abxWorkflow* of length 1..unbounded
    ns1__abxWorkflow*                   *workflowList                   1;
};

/// "http://ws.abx/":GetUserDetailByUsername is a complexType.
/// class ns1__GetUserDetailByUsername operations:
/// - soap_new_ns1__GetUserDetailByUsername(soap*) allocate
/// - soap_new_ns1__GetUserDetailByUsername(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserDetailByUsername(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserDetailByUsername(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserDetailByUsername(soap*, ns1__GetUserDetailByUsername*) deserialize from a stream
/// - int soap_write_ns1__GetUserDetailByUsername(soap, ns1__GetUserDetailByUsername*) serialize to a stream
class ns1__GetUserDetailByUsername : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":GetUserDetailByUsernameResponse is a complexType.
/// class ns1__GetUserDetailByUsernameResponse operations:
/// - soap_new_ns1__GetUserDetailByUsernameResponse(soap*) allocate
/// - soap_new_ns1__GetUserDetailByUsernameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserDetailByUsernameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserDetailByUsernameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserDetailByUsernameResponse(soap*, ns1__GetUserDetailByUsernameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUserDetailByUsernameResponse(soap, ns1__GetUserDetailByUsernameResponse*) serialize to a stream
class ns1__GetUserDetailByUsernameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddExpression is a complexType.
/// class ns1__AddExpression operations:
/// - soap_new_ns1__AddExpression(soap*) allocate
/// - soap_new_ns1__AddExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__AddExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddExpression(soap*, ns1__AddExpression*) deserialize from a stream
/// - int soap_write_ns1__AddExpression(soap, ns1__AddExpression*) serialize to a stream
class ns1__AddExpression : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
};

/// "http://ws.abx/":abxExpression is a complexType.
/// class ns1__abxExpression operations:
/// - soap_new_ns1__abxExpression(soap*) allocate
/// - soap_new_ns1__abxExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__abxExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxExpression(soap*, ns1__abxExpression*) deserialize from a stream
/// - int soap_write_ns1__abxExpression(soap, ns1__abxExpression*) serialize to a stream
class ns1__abxExpression : public xsd__anyType
{ public:
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element translationList of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 translationList                1;	///< Required element.
/// Element expressionName of type xs:string.
    char*                                expressionName                 1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element defaultExpression of type xs:string.
    char*                                defaultExpression              1;	///< Required element.
/// class _ns1__abxExpression_returnWrongKeys operations:
/// - soap_new__ns1__abxExpression_returnWrongKeys(soap*) allocate
/// - soap_new__ns1__abxExpression_returnWrongKeys(soap*, int num) allocate array
/// - soap_new_req__ns1__abxExpression_returnWrongKeys(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxExpression_returnWrongKeys(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxExpression_returnWrongKeys(soap*, _ns1__abxExpression_returnWrongKeys*) deserialize from a stream
/// - int soap_write__ns1__abxExpression_returnWrongKeys(soap, _ns1__abxExpression_returnWrongKeys*) serialize to a stream
    class _ns1__abxExpression_returnWrongKeys
    {
/// Size of array of char* is 1..unbounded
   $int                                  __sizekey                      1;
/// Pointer to array char* of length 1..unbounded
    char*                               *key                            1;
    }                                    returnWrongKeys                1;	///< Required element.
};

/// "http://ws.abx/":abxTranslation is a complexType.
/// class ns1__abxTranslation operations:
/// - soap_new_ns1__abxTranslation(soap*) allocate
/// - soap_new_ns1__abxTranslation(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTranslation(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTranslation(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTranslation(soap*, ns1__abxTranslation*) deserialize from a stream
/// - int soap_write_ns1__abxTranslation(soap, ns1__abxTranslation*) serialize to a stream
class ns1__abxTranslation : public xsd__anyType
{ public:
/// Element languageType of type xs:string.
    char*                                languageType                   1;	///< Required element.
/// Element messageId of type xs:string.
    char*                                messageId                      1;	///< Required element.
/// Size of allDescription array is 1..unbounded
   $int                                  __sizeallDescription           1;
/// class _ns1__abxTranslation_allDescription operations:
/// - soap_new__ns1__abxTranslation_allDescription(soap*) allocate
/// - soap_new__ns1__abxTranslation_allDescription(soap*, int num) allocate array
/// - soap_new_req__ns1__abxTranslation_allDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxTranslation_allDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxTranslation_allDescription(soap*, _ns1__abxTranslation_allDescription*) deserialize from a stream
/// - int soap_write__ns1__abxTranslation_allDescription(soap, _ns1__abxTranslation_allDescription*) serialize to a stream
    class _ns1__abxTranslation_allDescription
    {
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *allDescription                 1;
/// Element messageCode of type xs:string.
    char*                                messageCode                    1;	///< Required element.
};

/// "http://ws.abx/":AddExpressionResponse is a complexType.
/// class ns1__AddExpressionResponse operations:
/// - soap_new_ns1__AddExpressionResponse(soap*) allocate
/// - soap_new_ns1__AddExpressionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddExpressionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddExpressionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddExpressionResponse(soap*, ns1__AddExpressionResponse*) deserialize from a stream
/// - int soap_write_ns1__AddExpressionResponse(soap, ns1__AddExpressionResponse*) serialize to a stream
class ns1__AddExpressionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxExpressionResult is a complexType.
/// class ns1__abxExpressionResult operations:
/// - soap_new_ns1__abxExpressionResult(soap*) allocate
/// - soap_new_ns1__abxExpressionResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxExpressionResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxExpressionResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxExpressionResult(soap*, ns1__abxExpressionResult*) deserialize from a stream
/// - int soap_write_ns1__abxExpressionResult(soap, ns1__abxExpressionResult*) serialize to a stream
class ns1__abxExpressionResult : public xsd__anyType
{ public:
/// Element list of type "http://ws.abx/":abxExpressionList.
    ns1__abxExpressionList*              list                           1;	///< Required element.
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
};

/// "http://ws.abx/":abxExpressionList is a complexType.
/// class ns1__abxExpressionList operations:
/// - soap_new_ns1__abxExpressionList(soap*) allocate
/// - soap_new_ns1__abxExpressionList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxExpressionList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxExpressionList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxExpressionList(soap*, ns1__abxExpressionList*) deserialize from a stream
/// - int soap_write_ns1__abxExpressionList(soap, ns1__abxExpressionList*) serialize to a stream
class ns1__abxExpressionList : public xsd__anyType
{ public:
/// Size of array of ns1__abxExpression* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxExpression* of length 1..unbounded
    ns1__abxExpression*                 *dataList                       1;
};

/// "http://ws.abx/":canModifyRaccoglitore is a complexType.
/// class ns1__canModifyRaccoglitore operations:
/// - soap_new_ns1__canModifyRaccoglitore(soap*) allocate
/// - soap_new_ns1__canModifyRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyRaccoglitore(soap*, ns1__canModifyRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__canModifyRaccoglitore(soap, ns1__canModifyRaccoglitore*) serialize to a stream
class ns1__canModifyRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":canModifyRaccoglitoreResponse is a complexType.
/// class ns1__canModifyRaccoglitoreResponse operations:
/// - soap_new_ns1__canModifyRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__canModifyRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyRaccoglitoreResponse(soap*, ns1__canModifyRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__canModifyRaccoglitoreResponse(soap, ns1__canModifyRaccoglitoreResponse*) serialize to a stream
class ns1__canModifyRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":QueryTotAttach is a complexType.
/// class ns1__QueryTotAttach operations:
/// - soap_new_ns1__QueryTotAttach(soap*) allocate
/// - soap_new_ns1__QueryTotAttach(soap*, int num) allocate array
/// - soap_new_req_ns1__QueryTotAttach(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__QueryTotAttach(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__QueryTotAttach(soap*, ns1__QueryTotAttach*) deserialize from a stream
/// - int soap_write_ns1__QueryTotAttach(soap, ns1__QueryTotAttach*) serialize to a stream
class ns1__QueryTotAttach : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element option4query of type "http://ws.abx/":abxQexpression.
    ns1__abxQexpression*                 option4query                   0;	///< Optional element.
/// Element protuse of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protuse                        0;	///< Optional element.
};

/// "http://ws.abx/":abxQexpression is a complexType.
/// class ns1__abxQexpression operations:
/// - soap_new_ns1__abxQexpression(soap*) allocate
/// - soap_new_ns1__abxQexpression(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQexpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQexpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQexpression(soap*, ns1__abxQexpression*) deserialize from a stream
/// - int soap_write_ns1__abxQexpression(soap, ns1__abxQexpression*) serialize to a stream
class ns1__abxQexpression : public xsd__anyType
{ public:
/// Element expression of type "http://ws.abx/":abxQnode.
    ns1__abxQnode*                       expression                     1;	///< Required element.
/// Element option4Query of type "http://ws.abx/":abxOption4Query.
    ns1__abxOption4Query*                option4Query                   1;	///< Required element.
/// Element queryType of type xs:string.
    char*                                queryType                      1;	///< Required element.
/// Element queryTypeDetail of type xs:string.
    char*                                queryTypeDetail                1;	///< Required element.
/// Element queryLimit of type xs:string.
    char*                                queryLimit                     1;	///< Required element.
/// Element queryOffset of type xs:string.
    char*                                queryOffset                    1;	///< Required element.
};

/// "http://ws.abx/":abxQnode is a complexType.
/// class ns1__abxQnode operations:
/// - soap_new_ns1__abxQnode(soap*) allocate
/// - soap_new_ns1__abxQnode(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQnode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQnode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQnode(soap*, ns1__abxQnode*) deserialize from a stream
/// - int soap_write_ns1__abxQnode(soap, ns1__abxQnode*) serialize to a stream
class ns1__abxQnode : public xsd__anyType
{ public:
/// Element qOperator of type xs:string.
    char*                                qOperator                      1;	///< Required element.
/// Element operandSX of type "http://ws.abx/":abxQnode.
    ns1__abxQnode*                       operandSX                      1;	///< Required element.
/// Element operandDX of type "http://ws.abx/":abxQnode.
    ns1__abxQnode*                       operandDX                      1;	///< Required element.
/// Element field of type "http://ws.abx/":abxQField.
    ns1__abxQField*                      field                          1;	///< Required element.
};

/// "http://ws.abx/":abxQField is a complexType.
/// class ns1__abxQField operations:
/// - soap_new_ns1__abxQField(soap*) allocate
/// - soap_new_ns1__abxQField(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQField(soap*, ns1__abxQField*) deserialize from a stream
/// - int soap_write_ns1__abxQField(soap, ns1__abxQField*) serialize to a stream
class ns1__abxQField : public xsd__anyType
{ public:
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element fieldProperties of type "http://ws.abx/":abxField.
    ns1__abxField*                       fieldProperties                1;	///< Required element.
/// Element fieldTypeName of type xs:string.
    char*                                fieldTypeName                  1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
/// Element range of type "http://ws.abx/":abxQFieldRange.
    ns1__abxQFieldRange*                 range                          1;	///< Required element.
/// Element fOperator of type xs:string.
    char*                                fOperator                      1;	///< Required element.
};

/// "http://ws.abx/":abxField is a complexType.
/// class ns1__abxField operations:
/// - soap_new_ns1__abxField(soap*) allocate
/// - soap_new_ns1__abxField(soap*, int num) allocate array
/// - soap_new_req_ns1__abxField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxField(soap*, ns1__abxField*) deserialize from a stream
/// - int soap_write_ns1__abxField(soap, ns1__abxField*) serialize to a stream
class ns1__abxField : public xsd__anyType
{ public:
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element Description of type xs:string.
    char*                                Description                    1;	///< Required element.
/// Size of allDescription array is 1..unbounded
   $int                                  __sizeallDescription           1;
/// class _ns1__abxField_allDescription operations:
/// - soap_new__ns1__abxField_allDescription(soap*) allocate
/// - soap_new__ns1__abxField_allDescription(soap*, int num) allocate array
/// - soap_new_req__ns1__abxField_allDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxField_allDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxField_allDescription(soap*, _ns1__abxField_allDescription*) deserialize from a stream
/// - int soap_write__ns1__abxField_allDescription(soap, _ns1__abxField_allDescription*) serialize to a stream
    class _ns1__abxField_allDescription
    {
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *allDescription                 1;
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element lenght of type xs:string.
    char*                                lenght                         1;	///< Required element.
/// Element precision of type xs:string.
    char*                                precision                      1;	///< Required element.
/// Element option of type xs:string.
    char*                                option                         1;	///< Required element.
/// Element OptionDescription of type xs:string.
    char*                                OptionDescription              1;	///< Required element.
/// Size of allOptionDescription array is 1..unbounded
   $int                                  __sizeallOptionDescription     1;
/// class _ns1__abxField_allOptionDescription operations:
/// - soap_new__ns1__abxField_allOptionDescription(soap*) allocate
/// - soap_new__ns1__abxField_allOptionDescription(soap*, int num) allocate array
/// - soap_new_req__ns1__abxField_allOptionDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxField_allOptionDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxField_allOptionDescription(soap*, _ns1__abxField_allOptionDescription*) deserialize from a stream
/// - int soap_write__ns1__abxField_allOptionDescription(soap, _ns1__abxField_allOptionDescription*) serialize to a stream
    class _ns1__abxField_allOptionDescription
    {
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *allOptionDescription           1;
/// Size of extended array is 1..unbounded
   $int                                  __sizeextended                 1;
/// class _ns1__abxField_extended operations:
/// - soap_new__ns1__abxField_extended(soap*) allocate
/// - soap_new__ns1__abxField_extended(soap*, int num) allocate array
/// - soap_new_req__ns1__abxField_extended(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxField_extended(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxField_extended(soap*, _ns1__abxField_extended*) deserialize from a stream
/// - int soap_write__ns1__abxField_extended(soap, _ns1__abxField_extended*) serialize to a stream
    class _ns1__abxField_extended
    {
/// Element property1 of type xs:string.
    char*                                property1                      1;	///< Required element.
/// Element property2 of type xs:string.
    char*                                property2                      1;	///< Required element.
/// Element property3 of type xs:string.
    char*                                property3                      1;	///< Required element.
/// Element property4 of type xs:string.
    char*                                property4                      1;	///< Required element.
    }                                   *extended                       1;
/// Element obbligatorio of type xs:boolean.
    bool                                 obbligatorio                   1;	///< Required element.
/// Element nascosto of type xs:boolean.
    bool                                 nascosto                       1;	///< Required element.
/// Element univoco of type xs:boolean.
    bool                                 univoco                        1;	///< Required element.
/// Element filter of type xs:boolean.
    bool                                 filter                         1;	///< Required element.
/// Element filterinterval of type xs:boolean.
    bool                                 filterinterval                 1;	///< Required element.
/// Element vistaview of type xs:boolean.
    bool                                 vistaview                      1;	///< Required element.
/// Element showInWorkList of type xs:boolean.
    bool                                 showInWorkList                 1;	///< Required element.
/// Element displayindex of type xs:unsignedInt.
    unsigned int                         displayindex                   1;	///< Required element.
/// Element permission of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permission                     1;	///< Required element.
};

/// "http://ws.abx/":abxPermission is a complexType.
/// class ns1__abxPermission operations:
/// - soap_new_ns1__abxPermission(soap*) allocate
/// - soap_new_ns1__abxPermission(soap*, int num) allocate array
/// - soap_new_req_ns1__abxPermission(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxPermission(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxPermission(soap*, ns1__abxPermission*) deserialize from a stream
/// - int soap_write_ns1__abxPermission(soap, ns1__abxPermission*) serialize to a stream
class ns1__abxPermission : public xsd__anyType
{ public:
/// Size of list array is 1..unbounded
   $int                                  __sizelist                     1;
/// class _ns1__abxPermission_list operations:
/// - soap_new__ns1__abxPermission_list(soap*) allocate
/// - soap_new__ns1__abxPermission_list(soap*, int num) allocate array
/// - soap_new_req__ns1__abxPermission_list(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxPermission_list(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxPermission_list(soap*, _ns1__abxPermission_list*) deserialize from a stream
/// - int soap_write__ns1__abxPermission_list(soap, _ns1__abxPermission_list*) serialize to a stream
    class _ns1__abxPermission_list
    {
/// Element actionName of type xs:string.
    char*                                actionName                     1;	///< Required element.
/// Element value of type xs:boolean.
    bool                                 value                          1;	///< Required element.
    }                                   *list                           1;
/// Element defaultObjActionList of type "http://ws.abx/":abxObjAction.
    ns1__abxObjAction*                   defaultObjActionList           1;	///< Required element.
/// class _ns1__abxPermission_editPermission operations:
/// - soap_new__ns1__abxPermission_editPermission(soap*) allocate
/// - soap_new__ns1__abxPermission_editPermission(soap*, int num) allocate array
/// - soap_new_req__ns1__abxPermission_editPermission(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxPermission_editPermission(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxPermission_editPermission(soap*, _ns1__abxPermission_editPermission*) deserialize from a stream
/// - int soap_write__ns1__abxPermission_editPermission(soap, _ns1__abxPermission_editPermission*) serialize to a stream
    class _ns1__abxPermission_editPermission
    {
/// Element editUserName of type xs:string.
    char*                                editUserName                   1;	///< Required element.
/// Element editCode of type xs:string.
    char*                                editCode                       1;	///< Required element.
/// Element editTimeStamp of type xs:dateTime.
    time_t                               editTimeStamp                  1;	///< Required element.
/// Element permissionSettings of type "http://ws.abx/":abxEditPermissionList.
    ns1__abxEditPermissionList*          permissionSettings             1;	///< Required element.
    }                                    editPermission                 1;	///< Required element.
};

/// "http://ws.abx/":abxObjAction is a complexType.
/// class ns1__abxObjAction operations:
/// - soap_new_ns1__abxObjAction(soap*) allocate
/// - soap_new_ns1__abxObjAction(soap*, int num) allocate array
/// - soap_new_req_ns1__abxObjAction(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxObjAction(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxObjAction(soap*, ns1__abxObjAction*) deserialize from a stream
/// - int soap_write_ns1__abxObjAction(soap, ns1__abxObjAction*) serialize to a stream
class ns1__abxObjAction : public xsd__anyType
{ public:
/// Size of list array is 1..unbounded
   $int                                  __sizelist                     1;
/// class _ns1__abxObjAction_list operations:
/// - soap_new__ns1__abxObjAction_list(soap*) allocate
/// - soap_new__ns1__abxObjAction_list(soap*, int num) allocate array
/// - soap_new_req__ns1__abxObjAction_list(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxObjAction_list(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxObjAction_list(soap*, _ns1__abxObjAction_list*) deserialize from a stream
/// - int soap_write__ns1__abxObjAction_list(soap, _ns1__abxObjAction_list*) serialize to a stream
    class _ns1__abxObjAction_list
    {
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element actionName of type xs:string.
    char*                                actionName                     1;	///< Required element.
/// Element positionId of type xs:string.
    char*                                positionId                     1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
/// Element action_in_tree of type xs:boolean.
    bool                                 action_USCOREin_USCOREtree     1;	///< Required element.
/// Element actionDescription of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 actionDescription              1;	///< Required element.
/// Element defaultDescription of type xs:string.
    char*                                defaultDescription             1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
    }                                   *list                           1;
/// Element xxx of type xs:anyType.
    xsd__anyType*                        xxx                            1;	///< Required element.
};

/// "http://ws.abx/":abxEditPermissionList is a complexType.
/// class ns1__abxEditPermissionList operations:
/// - soap_new_ns1__abxEditPermissionList(soap*) allocate
/// - soap_new_ns1__abxEditPermissionList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxEditPermissionList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxEditPermissionList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxEditPermissionList(soap*, ns1__abxEditPermissionList*) deserialize from a stream
/// - int soap_write_ns1__abxEditPermissionList(soap, ns1__abxEditPermissionList*) serialize to a stream
class ns1__abxEditPermissionList : public xsd__anyType
{ public:
/// Size of array of ns1__abxEditPermission* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns1__abxEditPermission* of length 1..unbounded
    ns1__abxEditPermission*             *list                           1;
};

/// "http://ws.abx/":abxEditPermission is a complexType.
/// class ns1__abxEditPermission operations:
/// - soap_new_ns1__abxEditPermission(soap*) allocate
/// - soap_new_ns1__abxEditPermission(soap*, int num) allocate array
/// - soap_new_req_ns1__abxEditPermission(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxEditPermission(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxEditPermission(soap*, ns1__abxEditPermission*) deserialize from a stream
/// - int soap_write_ns1__abxEditPermission(soap, ns1__abxEditPermission*) serialize to a stream
class ns1__abxEditPermission : public xsd__anyType
{ public:
/// Element sessionId of type xs:string.
    char*                                sessionId                      1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       1;	///< Required element.
/// Element groupName of type xs:string.
    char*                                groupName                      1;	///< Required element.
/// Element spread of type xs:string.
    char*                                spread                         1;	///< Required element.
/// Element permission of type xs:string.
    char*                                permission                     1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element dataAttachmentId of type xs:string.
    char*                                dataAttachmentId               1;	///< Required element.
/// Size of permissionSingleList array is 1..unbounded
   $int                                  __sizepermissionSingleList     1;
/// class _ns1__abxEditPermission_permissionSingleList operations:
/// - soap_new__ns1__abxEditPermission_permissionSingleList(soap*) allocate
/// - soap_new__ns1__abxEditPermission_permissionSingleList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxEditPermission_permissionSingleList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxEditPermission_permissionSingleList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxEditPermission_permissionSingleList(soap*, _ns1__abxEditPermission_permissionSingleList*) deserialize from a stream
/// - int soap_write__ns1__abxEditPermission_permissionSingleList(soap, _ns1__abxEditPermission_permissionSingleList*) serialize to a stream
    class _ns1__abxEditPermission_permissionSingleList
    {
/// Element positionId of type xs:string.
    char*                                positionId                     1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
    }                                   *permissionSingleList           1;
/// Element todelete of type xs:string.
    char*                                todelete                       1;	///< Required element.
};

/// "http://ws.abx/":abxQFieldRange is a complexType.
/// class ns1__abxQFieldRange operations:
/// - soap_new_ns1__abxQFieldRange(soap*) allocate
/// - soap_new_ns1__abxQFieldRange(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQFieldRange(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQFieldRange(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQFieldRange(soap*, ns1__abxQFieldRange*) deserialize from a stream
/// - int soap_write_ns1__abxQFieldRange(soap, ns1__abxQFieldRange*) serialize to a stream
class ns1__abxQFieldRange : public xsd__anyType
{ public:
/// Element fromValue of type xs:string.
    char*                                fromValue                      1;	///< Required element.
/// Element toValue of type xs:string.
    char*                                toValue                        1;	///< Required element.
};

/// "http://ws.abx/":abxOption4Query is a complexType.
/// class ns1__abxOption4Query operations:
/// - soap_new_ns1__abxOption4Query(soap*) allocate
/// - soap_new_ns1__abxOption4Query(soap*, int num) allocate array
/// - soap_new_req_ns1__abxOption4Query(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxOption4Query(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxOption4Query(soap*, ns1__abxOption4Query*) deserialize from a stream
/// - int soap_write_ns1__abxOption4Query(soap, ns1__abxOption4Query*) serialize to a stream
class ns1__abxOption4Query : public xsd__anyType
{ public:
/// Element rootContainerName of type xs:string.
    char*                                rootContainerName              1;	///< Required element.
/// Element deepLevel of type xs:unsignedInt.
    unsigned int                         deepLevel                      1;	///< Required element.
/// Size of fieldList array is 1..unbounded
   $int                                  __sizefieldList                1;
/// class _ns1__abxOption4Query_fieldList operations:
/// - soap_new__ns1__abxOption4Query_fieldList(soap*) allocate
/// - soap_new__ns1__abxOption4Query_fieldList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxOption4Query_fieldList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxOption4Query_fieldList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxOption4Query_fieldList(soap*, _ns1__abxOption4Query_fieldList*) deserialize from a stream
/// - int soap_write__ns1__abxOption4Query_fieldList(soap, _ns1__abxOption4Query_fieldList*) serialize to a stream
    class _ns1__abxOption4Query_fieldList
    {
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
    }                                   *fieldList                      1;
/// Element selectOption of type xs:string.
    char*                                selectOption                   1;	///< Required element.
/// Element masterID of type xs:string.
    char*                                masterID                       1;	///< Required element.
/// Size of sortFieldList array is 0..unbounded
   $int                                  __sizesortFieldList            0;
/// class _ns1__abxOption4Query_sortFieldList operations:
/// - soap_new__ns1__abxOption4Query_sortFieldList(soap*) allocate
/// - soap_new__ns1__abxOption4Query_sortFieldList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxOption4Query_sortFieldList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxOption4Query_sortFieldList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxOption4Query_sortFieldList(soap*, _ns1__abxOption4Query_sortFieldList*) deserialize from a stream
/// - int soap_write__ns1__abxOption4Query_sortFieldList(soap, _ns1__abxOption4Query_sortFieldList*) serialize to a stream
    class _ns1__abxOption4Query_sortFieldList
    {
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element isDataId of type xs:boolean.
    bool                                 isDataId                       1;	///< Required element.
/// Element sortOrder of type xs:string.
    char*                                sortOrder                      1;	///< Required element.
    }                                   *sortFieldList                  0;	///< Nillable pointer.
};

/// "http://ws.abx/":abxProtocolUse is a complexType.
/// class ns1__abxProtocolUse operations:
/// - soap_new_ns1__abxProtocolUse(soap*) allocate
/// - soap_new_ns1__abxProtocolUse(soap*, int num) allocate array
/// - soap_new_req_ns1__abxProtocolUse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxProtocolUse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxProtocolUse(soap*, ns1__abxProtocolUse*) deserialize from a stream
/// - int soap_write_ns1__abxProtocolUse(soap, ns1__abxProtocolUse*) serialize to a stream
class ns1__abxProtocolUse : public xsd__anyType
{ public:
/// Element serverId of type xs:string.
    char*                                serverId                       1;	///< Required element.
/// Element protocolId of type xs:string.
    char*                                protocolId                     1;	///< Required element.
/// Element protocolName of type xs:string.
    char*                                protocolName                   1;	///< Required element.
/// Element date of type xs:string.
    char*                                date                           1;	///< Required element.
/// Element number of type xs:string.
    char*                                number                         1;	///< Required element.
/// Element numberLength of type xs:int.
    int                                  numberLength                   1;	///< Required element.
/// Element resultFormatted of type xs:string.
    char*                                resultFormatted                1;	///< Required element.
/// Size of filters array is 1..unbounded
   $int                                  __sizefilters                  1;
/// class _ns1__abxProtocolUse_filters operations:
/// - soap_new__ns1__abxProtocolUse_filters(soap*) allocate
/// - soap_new__ns1__abxProtocolUse_filters(soap*, int num) allocate array
/// - soap_new_req__ns1__abxProtocolUse_filters(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxProtocolUse_filters(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxProtocolUse_filters(soap*, _ns1__abxProtocolUse_filters*) deserialize from a stream
/// - int soap_write__ns1__abxProtocolUse_filters(soap, _ns1__abxProtocolUse_filters*) serialize to a stream
    class _ns1__abxProtocolUse_filters
    {
/// Element serverId of type xs:string.
    char*                                serverId                       1;	///< Required element.
/// Element dateFrom of type xs:string.
    char*                                dateFrom                       1;	///< Required element.
/// Element dateTo of type xs:string.
    char*                                dateTo                         1;	///< Required element.
/// Element numberFrom of type xs:string.
    char*                                numberFrom                     1;	///< Required element.
/// Element numberTo of type xs:string.
    char*                                numberTo                       1;	///< Required element.
/// Element protocolId of type xs:string.
    char*                                protocolId                     1;	///< Required element.
    }                                   *filters                        1;
};

/// "http://ws.abx/":QueryTotAttachResponse is a complexType.
/// class ns1__QueryTotAttachResponse operations:
/// - soap_new_ns1__QueryTotAttachResponse(soap*) allocate
/// - soap_new_ns1__QueryTotAttachResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__QueryTotAttachResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__QueryTotAttachResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__QueryTotAttachResponse(soap*, ns1__QueryTotAttachResponse*) deserialize from a stream
/// - int soap_write_ns1__QueryTotAttachResponse(soap, ns1__QueryTotAttachResponse*) serialize to a stream
class ns1__QueryTotAttachResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRetQueryResult.
    ns1__abxRetQueryResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxRetQueryResult is a complexType.
/// class ns1__abxRetQueryResult operations:
/// - soap_new_ns1__abxRetQueryResult(soap*) allocate
/// - soap_new_ns1__abxRetQueryResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRetQueryResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRetQueryResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRetQueryResult(soap*, ns1__abxRetQueryResult*) deserialize from a stream
/// - int soap_write_ns1__abxRetQueryResult(soap, ns1__abxRetQueryResult*) serialize to a stream
class ns1__abxRetQueryResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element submittedQuery of type "http://ws.abx/":abxQexpression.
    ns1__abxQexpression*                 submittedQuery                 1;	///< Required element.
/// Element queryResults of type "http://ws.abx/":abxResultsList.
    ns1__abxResultsList*                 queryResults                   1;	///< Required element.
/// Element queryTotalFound of type xs:unsignedInt.
    unsigned int                         queryTotalFound                1;	///< Required element.
};

/// "http://ws.abx/":abxResultsList is a complexType.
/// class ns1__abxResultsList operations:
/// - soap_new_ns1__abxResultsList(soap*) allocate
/// - soap_new_ns1__abxResultsList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxResultsList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxResultsList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxResultsList(soap*, ns1__abxResultsList*) deserialize from a stream
/// - int soap_write_ns1__abxResultsList(soap, ns1__abxResultsList*) serialize to a stream
class ns1__abxResultsList : public xsd__anyType
{ public:
/// Size of array of ns1__abxResults* is 1..unbounded
   $int                                  __sizeresults                  1;
/// Pointer to array ns1__abxResults* of length 1..unbounded
    ns1__abxResults*                    *results                        1;
};

/// "http://ws.abx/":abxResults is a complexType.
/// class ns1__abxResults operations:
/// - soap_new_ns1__abxResults(soap*) allocate
/// - soap_new_ns1__abxResults(soap*, int num) allocate array
/// - soap_new_req_ns1__abxResults(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxResults(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxResults(soap*, ns1__abxResults*) deserialize from a stream
/// - int soap_write_ns1__abxResults(soap, ns1__abxResults*) serialize to a stream
class ns1__abxResults : public xsd__anyType
{ public:
/// Element headColumn of type "http://ws.abx/":abxQcHeadList.
    ns1__abxQcHeadList*                  headColumn                     1;	///< Required element.
/// Element matrix of type "http://ws.abx/":abxQrowList.
    ns1__abxQrowList*                    matrix                         1;	///< Required element.
/// Element containerName of type xs:string.
    char*                                containerName                  1;	///< Required element.
};

/// "http://ws.abx/":abxQcHeadList is a complexType.
/// class ns1__abxQcHeadList operations:
/// - soap_new_ns1__abxQcHeadList(soap*) allocate
/// - soap_new_ns1__abxQcHeadList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQcHeadList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQcHeadList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQcHeadList(soap*, ns1__abxQcHeadList*) deserialize from a stream
/// - int soap_write_ns1__abxQcHeadList(soap, ns1__abxQcHeadList*) serialize to a stream
class ns1__abxQcHeadList : public xsd__anyType
{ public:
/// Size of array of ns1__abxQcHead* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns1__abxQcHead* of length 1..unbounded
    ns1__abxQcHead*                     *list                           1;
};

/// "http://ws.abx/":abxQcHead is a complexType.
/// class ns1__abxQcHead operations:
/// - soap_new_ns1__abxQcHead(soap*) allocate
/// - soap_new_ns1__abxQcHead(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQcHead(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQcHead(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQcHead(soap*, ns1__abxQcHead*) deserialize from a stream
/// - int soap_write_ns1__abxQcHead(soap, ns1__abxQcHead*) serialize to a stream
class ns1__abxQcHead : public xsd__anyType
{ public:
/// Element field of type "http://ws.abx/":abxField.
    ns1__abxField*                       field                          1;	///< Required element.
};

/// "http://ws.abx/":abxQrowList is a complexType.
/// class ns1__abxQrowList operations:
/// - soap_new_ns1__abxQrowList(soap*) allocate
/// - soap_new_ns1__abxQrowList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQrowList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQrowList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQrowList(soap*, ns1__abxQrowList*) deserialize from a stream
/// - int soap_write_ns1__abxQrowList(soap, ns1__abxQrowList*) serialize to a stream
class ns1__abxQrowList : public xsd__anyType
{ public:
/// Size of array of ns1__abxQrow* is 1..unbounded
   $int                                  __sizel                        1;
/// Pointer to array ns1__abxQrow* of length 1..unbounded
    ns1__abxQrow*                       *l                              1;
};

/// "http://ws.abx/":abxQrow is a complexType.
/// class ns1__abxQrow operations:
/// - soap_new_ns1__abxQrow(soap*) allocate
/// - soap_new_ns1__abxQrow(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQrow(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQrow(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQrow(soap*, ns1__abxQrow*) deserialize from a stream
/// - int soap_write_ns1__abxQrow(soap, ns1__abxQrow*) serialize to a stream
class ns1__abxQrow : public xsd__anyType
{ public:
/// Element rP of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  rP                             1;	///< Required element.
/// Size of array of char* is 1..unbounded
   $int                                  __sizec                        1;
/// Pointer to array char* of length 1..unbounded
    char*                               *c                              1;
/// Element DataID of type xs:string.
    char*                                DataID                         1;	///< Required element.
/// Element totAttach of type xs:string.
    char*                                totAttach                      1;	///< Required element.
/// Element protocol of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocol                       1;	///< Required element.
};

/// "http://ws.abx/":GetFileListByCode is a complexType.
/// class ns1__GetFileListByCode operations:
/// - soap_new_ns1__GetFileListByCode(soap*) allocate
/// - soap_new_ns1__GetFileListByCode(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileListByCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileListByCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileListByCode(soap*, ns1__GetFileListByCode*) deserialize from a stream
/// - int soap_write_ns1__GetFileListByCode(soap, ns1__GetFileListByCode*) serialize to a stream
class ns1__GetFileListByCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":GetFileListByCodeResponse is a complexType.
/// class ns1__GetFileListByCodeResponse operations:
/// - soap_new_ns1__GetFileListByCodeResponse(soap*) allocate
/// - soap_new_ns1__GetFileListByCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileListByCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileListByCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileListByCodeResponse(soap*, ns1__GetFileListByCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFileListByCodeResponse(soap, ns1__GetFileListByCodeResponse*) serialize to a stream
class ns1__GetFileListByCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxFileResult is a complexType.
/// class ns1__abxFileResult operations:
/// - soap_new_ns1__abxFileResult(soap*) allocate
/// - soap_new_ns1__abxFileResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFileResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFileResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFileResult(soap*, ns1__abxFileResult*) deserialize from a stream
/// - int soap_write_ns1__abxFileResult(soap, ns1__abxFileResult*) serialize to a stream
class ns1__abxFileResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    list                           1;	///< Required element.
/// Element optionalMessage of type xs:string.
    char*                                optionalMessage                1;	///< Required element.
};

/// "http://ws.abx/":abxFileList is a complexType.
/// class ns1__abxFileList operations:
/// - soap_new_ns1__abxFileList(soap*) allocate
/// - soap_new_ns1__abxFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFileList(soap*, ns1__abxFileList*) deserialize from a stream
/// - int soap_write_ns1__abxFileList(soap, ns1__abxFileList*) serialize to a stream
class ns1__abxFileList : public xsd__anyType
{ public:
/// Size of array of ns1__abxFile* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxFile* of length 1..unbounded
    ns1__abxFile*                       *dataList                       1;
};

/// "http://ws.abx/":abxFile is a complexType.
/// class ns1__abxFile operations:
/// - soap_new_ns1__abxFile(soap*) allocate
/// - soap_new_ns1__abxFile(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFile(soap*, ns1__abxFile*) deserialize from a stream
/// - int soap_write_ns1__abxFile(soap, ns1__abxFile*) serialize to a stream
class ns1__abxFile : public xsd__anyType
{ public:
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element isLastRevision of type xs:boolean.
    bool                                 isLastRevision                 1;	///< Required element.
/// Element revisionId of type xs:string.
    char*                                revisionId                     1;	///< Required element.
/// Element filesize of type xs:string.
    char*                                filesize                       1;	///< Required element.
/// Element filename of type xs:string.
    char*                                filename                       1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
/// Element hash of type xs:string.
    char*                                hash                           1;	///< Required element.
/// Element hashType of type xs:string.
    char*                                hashType                       1;	///< Required element.
/// Element containerId of type xs:string.
    char*                                containerId                    1;	///< Required element.
/// Size of array of ns1__downloadData* is 1..unbounded
   $int                                  __sizedownloadData             1;
/// Pointer to array ns1__downloadData* of length 1..unbounded
    ns1__downloadData*                  *downloadData                   1;
/// Size of array of ns1__uploadData* is 1..unbounded
   $int                                  __sizeuploadData               1;
/// Pointer to array ns1__uploadData* of length 1..unbounded
    ns1__uploadData*                    *uploadData                     1;
/// Element translationList of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 translationList                1;	///< Required element.
/// Element fileUniqueCode of type xs:string.
    char*                                fileUniqueCode                 1;	///< Required element.
/// Element previousFileUniqueCode of type xs:string.
    char*                                previousFileUniqueCode         0;	///< Optional element.
/// Element filepath of type xs:string.
    char*                                filepath                       1;	///< Required element.
/// Element filenameSaved of type xs:string.
    char*                                filenameSaved                  1;	///< Required element.
/// Element numDownload of type xs:int.
    int                                  numDownload                    1;	///< Required element.
/// Element templateNameID of type xs:string.
    char*                                templateNameID                 1;	///< Required element.
/// Element allPermission of type "http://ws.abx/":abxAllPermission.
    ns1__abxAllPermission*               allPermission                  1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element codeGroupVersion of type xs:string.
    char*                                codeGroupVersion               1;	///< Required element.
/// Element enabled of type xs:base64Binary.
    xsd__base64Binary                    enabled                        1;	///< Required element.
/// Element signatureOwner of type xs:string.
    char*                                signatureOwner                 1;	///< Required element.
/// Element signatureTimestamp of type xs:dateTime.
    time_t                               signatureTimestamp             1;	///< Required element.
/// Size of array of ns1__abxFile* is 0..unbounded
   $int                                  __sizelinkedFiles              0;
/// Pointer to array ns1__abxFile* of length 0..unbounded
    ns1__abxFile*                       *linkedFiles                    0;	///< Nillable pointer.
};

/// "http://ws.abx/":downloadData is a complexType.
/// class ns1__downloadData operations:
/// - soap_new_ns1__downloadData(soap*) allocate
/// - soap_new_ns1__downloadData(soap*, int num) allocate array
/// - soap_new_req_ns1__downloadData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__downloadData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__downloadData(soap*, ns1__downloadData*) deserialize from a stream
/// - int soap_write_ns1__downloadData(soap, ns1__downloadData*) serialize to a stream
class ns1__downloadData : public xsd__anyType
{ public:
/// Element downloadDimTot of type xs:string.
    char*                                downloadDimTot                 1;	///< Required element.
/// Element byteSent of type xs:string.
    char*                                byteSent                       1;	///< Required element.
/// Element filenameSaved of type xs:string.
    char*                                filenameSaved                  1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element instanceId of type xs:string.
    char*                                instanceId                     1;	///< Required element.
/// Element dbName of type xs:string.
    char*                                dbName                         1;	///< Required element.
/// Element codeFile of type xs:string.
    char*                                codeFile                       1;	///< Required element.
/// Element byteReady of type xs:base64Binary.
    xsd__base64Binary                    byteReady                      1;	///< Required element.
/// Element codeDownload of type xs:string.
    char*                                codeDownload                   1;	///< Required element.
};

/// "http://ws.abx/":uploadData is a complexType.
/// class ns1__uploadData operations:
/// - soap_new_ns1__uploadData(soap*) allocate
/// - soap_new_ns1__uploadData(soap*, int num) allocate array
/// - soap_new_req_ns1__uploadData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__uploadData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__uploadData(soap*, ns1__uploadData*) deserialize from a stream
/// - int soap_write_ns1__uploadData(soap, ns1__uploadData*) serialize to a stream
class ns1__uploadData : public xsd__anyType
{ public:
/// Element hash of type xs:string.
    char*                                hash                           1;	///< Required element.
/// Element hashTypeId of type xs:string.
    char*                                hashTypeId                     1;	///< Required element.
/// Element securityLevel of type xs:string.
    char*                                securityLevel                  1;	///< Required element.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
/// Element uploadDimChunk of type xs:string.
    char*                                uploadDimChunk                 1;	///< Required element.
/// Element codeFile of type xs:string.
    char*                                codeFile                       1;	///< Required element.
/// Element filename of type xs:string.
    char*                                filename                       1;	///< Required element.
/// Element filepath of type xs:string.
    char*                                filepath                       1;	///< Required element.
/// Element dimFile of type xs:string.
    char*                                dimFile                        1;	///< Required element.
/// Element byteReceived of type xs:string.
    char*                                byteReceived                   1;	///< Required element.
/// Element filenameSaved of type xs:string.
    char*                                filenameSaved                  1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element instanceId of type xs:string.
    char*                                instanceId                     1;	///< Required element.
/// Element dbName of type xs:string.
    char*                                dbName                         1;	///< Required element.
};

/// "http://ws.abx/":abxAllPermission is a complexType.
/// class ns1__abxAllPermission operations:
/// - soap_new_ns1__abxAllPermission(soap*) allocate
/// - soap_new_ns1__abxAllPermission(soap*, int num) allocate array
/// - soap_new_req_ns1__abxAllPermission(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxAllPermission(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxAllPermission(soap*, ns1__abxAllPermission*) deserialize from a stream
/// - int soap_write_ns1__abxAllPermission(soap, ns1__abxAllPermission*) serialize to a stream
class ns1__abxAllPermission : public xsd__anyType
{ public:
/// Size of list array is 1..unbounded
   $int                                  __sizelist                     1;
/// class _ns1__abxAllPermission_list operations:
/// - soap_new__ns1__abxAllPermission_list(soap*) allocate
/// - soap_new__ns1__abxAllPermission_list(soap*, int num) allocate array
/// - soap_new_req__ns1__abxAllPermission_list(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxAllPermission_list(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxAllPermission_list(soap*, _ns1__abxAllPermission_list*) deserialize from a stream
/// - int soap_write__ns1__abxAllPermission_list(soap, _ns1__abxAllPermission_list*) serialize to a stream
    class _ns1__abxAllPermission_list
    {
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element inheritedInstanceName of type xs:string.
    char*                                inheritedInstanceName          1;	///< Required element.
/// Element groupName of type xs:string.
    char*                                groupName                      1;	///< Required element.
/// Element orderId of type xs:string.
    char*                                orderId                        1;	///< Required element.
/// Element inherited of type xs:string.
    char*                                inherited                      1;	///< Required element.
/// Element spread of type xs:string.
    char*                                spread                         1;	///< Required element.
/// Element permissionDef of type xs:string.
    char*                                permissionDef                  1;	///< Required element.
/// Element objActionList of type "http://ws.abx/":abxObjAction.
    ns1__abxObjAction*                   objActionList                  1;	///< Required element.
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
    }                                   *list                           1;
};

/// "http://ws.abx/":DestroyRaccoglitore is a complexType.
/// class ns1__DestroyRaccoglitore operations:
/// - soap_new_ns1__DestroyRaccoglitore(soap*) allocate
/// - soap_new_ns1__DestroyRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__DestroyRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DestroyRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DestroyRaccoglitore(soap*, ns1__DestroyRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__DestroyRaccoglitore(soap, ns1__DestroyRaccoglitore*) serialize to a stream
class ns1__DestroyRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":DestroyRaccoglitoreResponse is a complexType.
/// class ns1__DestroyRaccoglitoreResponse operations:
/// - soap_new_ns1__DestroyRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__DestroyRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DestroyRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DestroyRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DestroyRaccoglitoreResponse(soap*, ns1__DestroyRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__DestroyRaccoglitoreResponse(soap, ns1__DestroyRaccoglitoreResponse*) serialize to a stream
class ns1__DestroyRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRaccoglitoreResult.
    ns1__abxRaccoglitoreResult*          return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxRaccoglitoreResult is a complexType.
/// class ns1__abxRaccoglitoreResult operations:
/// - soap_new_ns1__abxRaccoglitoreResult(soap*) allocate
/// - soap_new_ns1__abxRaccoglitoreResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRaccoglitoreResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRaccoglitoreResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRaccoglitoreResult(soap*, ns1__abxRaccoglitoreResult*) deserialize from a stream
/// - int soap_write_ns1__abxRaccoglitoreResult(soap, ns1__abxRaccoglitoreResult*) serialize to a stream
class ns1__abxRaccoglitoreResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element template of type "http://ws.abx/":abxTemplateList.
    ns1__abxTemplateList*                template_                      1;	///< Required element.
/// Element container of type "http://ws.abx/":abxContainerList.
    ns1__abxContainerList*               container                      1;	///< Required element.
/// Element dynorg of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          dynorg                         1;	///< Required element.
};

/// "http://ws.abx/":abxTemplateList is a complexType.
/// class ns1__abxTemplateList operations:
/// - soap_new_ns1__abxTemplateList(soap*) allocate
/// - soap_new_ns1__abxTemplateList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTemplateList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTemplateList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTemplateList(soap*, ns1__abxTemplateList*) deserialize from a stream
/// - int soap_write_ns1__abxTemplateList(soap, ns1__abxTemplateList*) serialize to a stream
class ns1__abxTemplateList : public xsd__anyType
{ public:
/// Size of array of ns1__abxTemplate* is 1..unbounded
   $int                                  __sizetemplate_                1;
/// Pointer to array ns1__abxTemplate* of length 1..unbounded
    ns1__abxTemplate*                   *template_                      1;
};

/// "http://ws.abx/":abxTemplate is a complexType.
/// class ns1__abxTemplate operations:
/// - soap_new_ns1__abxTemplate(soap*) allocate
/// - soap_new_ns1__abxTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTemplate(soap*, ns1__abxTemplate*) deserialize from a stream
/// - int soap_write_ns1__abxTemplate(soap, ns1__abxTemplate*) serialize to a stream
class ns1__abxTemplate : public xsd__anyType
{ public:
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element Description of type xs:string.
    char*                                Description                    1;	///< Required element.
/// Size of allDescription array is 1..unbounded
   $int                                  __sizeallDescription           1;
/// class _ns1__abxTemplate_allDescription operations:
/// - soap_new__ns1__abxTemplate_allDescription(soap*) allocate
/// - soap_new__ns1__abxTemplate_allDescription(soap*, int num) allocate array
/// - soap_new_req__ns1__abxTemplate_allDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxTemplate_allDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxTemplate_allDescription(soap*, _ns1__abxTemplate_allDescription*) deserialize from a stream
/// - int soap_write__ns1__abxTemplate_allDescription(soap, _ns1__abxTemplate_allDescription*) serialize to a stream
    class _ns1__abxTemplate_allDescription
    {
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *allDescription                 1;
/// Element joinWithType of type xs:string.
    char*                                joinWithType                   1;	///< Required element.
/// Element fields of type "http://ws.abx/":abxFieldList.
    ns1__abxFieldList*                   fields                         1;	///< Required element.
/// Element joinWithName of type xs:string.
    char*                                joinWithName                   1;	///< Required element.
/// Element revisionEnabled of type xs:boolean.
    bool                                 revisionEnabled                1;	///< Required element.
/// Element collation of type xs:string.
    char*                                collation                      1;	///< Required element.
/// Element expression of type "http://ws.abx/":abxExpressionList.
    ns1__abxExpressionList*              expression                     1;	///< Required element.
/// Element barcodePrefix of type xs:string.
    char*                                barcodePrefix                  1;	///< Required element.
/// Element enableProtocol of type xs:boolean.
    bool                                 enableProtocol                 1;	///< Required element.
/// Element permission of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permission                     1;	///< Required element.
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element dynorgEnabled of type xs:boolean.
    bool                                 dynorgEnabled                  1;	///< Required element.
};

/// "http://ws.abx/":abxFieldList is a complexType.
/// class ns1__abxFieldList operations:
/// - soap_new_ns1__abxFieldList(soap*) allocate
/// - soap_new_ns1__abxFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFieldList(soap*, ns1__abxFieldList*) deserialize from a stream
/// - int soap_write_ns1__abxFieldList(soap, ns1__abxFieldList*) serialize to a stream
class ns1__abxFieldList : public xsd__anyType
{ public:
/// Size of array of ns1__abxField* is 1..unbounded
   $int                                  __sizefield                    1;
/// Pointer to array ns1__abxField* of length 1..unbounded
    ns1__abxField*                      *field                          1;
};

/// "http://ws.abx/":abxContainerList is a complexType.
/// class ns1__abxContainerList operations:
/// - soap_new_ns1__abxContainerList(soap*) allocate
/// - soap_new_ns1__abxContainerList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxContainerList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxContainerList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxContainerList(soap*, ns1__abxContainerList*) deserialize from a stream
/// - int soap_write_ns1__abxContainerList(soap, ns1__abxContainerList*) serialize to a stream
class ns1__abxContainerList : public xsd__anyType
{ public:
/// Size of array of ns1__abxContainer* is 1..unbounded
   $int                                  __sizecontainer                1;
/// Pointer to array ns1__abxContainer* of length 1..unbounded
    ns1__abxContainer*                  *container                      1;
};

/// "http://ws.abx/":abxContainer is a complexType.
/// class ns1__abxContainer operations:
/// - soap_new_ns1__abxContainer(soap*) allocate
/// - soap_new_ns1__abxContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__abxContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxContainer(soap*, ns1__abxContainer*) deserialize from a stream
/// - int soap_write_ns1__abxContainer(soap, ns1__abxContainer*) serialize to a stream
class ns1__abxContainer : public xsd__anyType
{ public:
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element Description of type xs:string.
    char*                                Description                    1;	///< Required element.
/// Size of allDescription array is 1..unbounded
   $int                                  __sizeallDescription           1;
/// class _ns1__abxContainer_allDescription operations:
/// - soap_new__ns1__abxContainer_allDescription(soap*) allocate
/// - soap_new__ns1__abxContainer_allDescription(soap*, int num) allocate array
/// - soap_new_req__ns1__abxContainer_allDescription(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxContainer_allDescription(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxContainer_allDescription(soap*, _ns1__abxContainer_allDescription*) deserialize from a stream
/// - int soap_write__ns1__abxContainer_allDescription(soap, _ns1__abxContainer_allDescription*) serialize to a stream
    class _ns1__abxContainer_allDescription
    {
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *allDescription                 1;
/// Element revisionEnabled of type xs:boolean.
    bool                                 revisionEnabled                1;	///< Required element.
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element parentContainerName of type xs:string.
    char*                                parentContainerName            1;	///< Required element.
/// Element templateName of type xs:string.
    char*                                templateName                   1;	///< Required element.
/// class _ns1__abxContainer_parentDataID operations:
/// - soap_new__ns1__abxContainer_parentDataID(soap*) allocate
/// - soap_new__ns1__abxContainer_parentDataID(soap*, int num) allocate array
/// - soap_new_req__ns1__abxContainer_parentDataID(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxContainer_parentDataID(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxContainer_parentDataID(soap*, _ns1__abxContainer_parentDataID*) deserialize from a stream
/// - int soap_write__ns1__abxContainer_parentDataID(soap, _ns1__abxContainer_parentDataID*) serialize to a stream
    class _ns1__abxContainer_parentDataID
    {
/// Element container_InstanceName of type xs:string.
    char*                                container_USCOREInstanceName   1;	///< Required element.
/// Element hexDataID of type xs:string.
    char*                                hexDataID                      1;	///< Required element.
    }                                    parentDataID                   1;	///< Required element.
/// Element hideContainer of type xs:boolean.
    bool                                 hideContainer                  1;	///< Required element.
/// Element colorDisplay of type xs:string.
    char*                                colorDisplay                   1;	///< Required element.
/// Element fileAutoOverwrite of type xs:boolean.
    bool                                 fileAutoOverwrite              1;	///< Required element.
/// Element permission of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permission                     1;	///< Required element.
/// Element masterDetail of type "http://ws.abx/":abxMasterDetail.
    ns1__abxMasterDetail*                masterDetail                   1;	///< Required element.
/// Element protocolEnabled of type xs:boolean.
    bool                                 protocolEnabled                1;	///< Required element.
/// Element previewEnabled of type xs:boolean.
    bool                                 previewEnabled                 1;	///< Required element.
/// Element downloadNumEnabled of type xs:boolean.
    bool                                 downloadNumEnabled             1;	///< Required element.
/// Element downloadNumber of type xs:string.
    char*                                downloadNumber                 1;	///< Required element.
/// Element defaultProtocolId of type xs:string.
    char*                                defaultProtocolId              1;	///< Required element.
/// Element WFProcDefEnabled of type xs:boolean.
    bool                                 WFProcDefEnabled               1;	///< Required element.
/// Element WFProcDefUserEnabled of type xs:boolean.
    bool                                 WFProcDefUserEnabled           1;	///< Required element.
};

/// "http://ws.abx/":abxMasterDetail is a complexType.
/// class ns1__abxMasterDetail operations:
/// - soap_new_ns1__abxMasterDetail(soap*) allocate
/// - soap_new_ns1__abxMasterDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__abxMasterDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxMasterDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxMasterDetail(soap*, ns1__abxMasterDetail*) deserialize from a stream
/// - int soap_write_ns1__abxMasterDetail(soap, ns1__abxMasterDetail*) serialize to a stream
class ns1__abxMasterDetail : public xsd__anyType
{ public:
/// Size of masterList array is 1..unbounded
   $int                                  __sizemasterList               1;
/// class _ns1__abxMasterDetail_masterList operations:
/// - soap_new__ns1__abxMasterDetail_masterList(soap*) allocate
/// - soap_new__ns1__abxMasterDetail_masterList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxMasterDetail_masterList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxMasterDetail_masterList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxMasterDetail_masterList(soap*, _ns1__abxMasterDetail_masterList*) deserialize from a stream
/// - int soap_write__ns1__abxMasterDetail_masterList(soap, _ns1__abxMasterDetail_masterList*) serialize to a stream
    class _ns1__abxMasterDetail_masterList
    {
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
    }                                   *masterList                     1;
/// Size of detailList array is 1..unbounded
   $int                                  __sizedetailList               1;
/// class _ns1__abxMasterDetail_detailList operations:
/// - soap_new__ns1__abxMasterDetail_detailList(soap*) allocate
/// - soap_new__ns1__abxMasterDetail_detailList(soap*, int num) allocate array
/// - soap_new_req__ns1__abxMasterDetail_detailList(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxMasterDetail_detailList(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxMasterDetail_detailList(soap*, _ns1__abxMasterDetail_detailList*) deserialize from a stream
/// - int soap_write__ns1__abxMasterDetail_detailList(soap, _ns1__abxMasterDetail_detailList*) serialize to a stream
    class _ns1__abxMasterDetail_detailList
    {
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
    }                                   *detailList                     1;
};

/// "http://ws.abx/":InsertUSFileWithUser is a complexType.
/// class ns1__InsertUSFileWithUser operations:
/// - soap_new_ns1__InsertUSFileWithUser(soap*) allocate
/// - soap_new_ns1__InsertUSFileWithUser(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUSFileWithUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUSFileWithUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUSFileWithUser(soap*, ns1__InsertUSFileWithUser*) deserialize from a stream
/// - int soap_write_ns1__InsertUSFileWithUser(soap, ns1__InsertUSFileWithUser*) serialize to a stream
class ns1__InsertUSFileWithUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":InsertUSFileWithUserResponse is a complexType.
/// class ns1__InsertUSFileWithUserResponse operations:
/// - soap_new_ns1__InsertUSFileWithUserResponse(soap*) allocate
/// - soap_new_ns1__InsertUSFileWithUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUSFileWithUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUSFileWithUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUSFileWithUserResponse(soap*, ns1__InsertUSFileWithUserResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertUSFileWithUserResponse(soap, ns1__InsertUSFileWithUserResponse*) serialize to a stream
class ns1__InsertUSFileWithUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKLogList is a complexType.
/// class ns1__GetSDKLogList operations:
/// - soap_new_ns1__GetSDKLogList(soap*) allocate
/// - soap_new_ns1__GetSDKLogList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKLogList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKLogList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKLogList(soap*, ns1__GetSDKLogList*) deserialize from a stream
/// - int soap_write_ns1__GetSDKLogList(soap, ns1__GetSDKLogList*) serialize to a stream
class ns1__GetSDKLogList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element al of type "http://ws.abx/":abxLog.
    ns1__abxLog*                         al                             0;	///< Optional element.
};

/// "http://ws.abx/":abxLog is a complexType.
/// class ns1__abxLog operations:
/// - soap_new_ns1__abxLog(soap*) allocate
/// - soap_new_ns1__abxLog(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLog(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLog(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLog(soap*, ns1__abxLog*) deserialize from a stream
/// - int soap_write_ns1__abxLog(soap, ns1__abxLog*) serialize to a stream
class ns1__abxLog : public xsd__anyType
{ public:
/// Element eventTypeCode of type xs:long.
    LONG64                               eventTypeCode                  1;	///< Required element.
/// Element levelCode of type xs:long.
    LONG64                               levelCode                      1;	///< Required element.
/// Element messageCode of type xs:long.
    LONG64                               messageCode                    1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
};

/// "http://ws.abx/":GetSDKLogListResponse is a complexType.
/// class ns1__GetSDKLogListResponse operations:
/// - soap_new_ns1__GetSDKLogListResponse(soap*) allocate
/// - soap_new_ns1__GetSDKLogListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKLogListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKLogListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKLogListResponse(soap*, ns1__GetSDKLogListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKLogListResponse(soap, ns1__GetSDKLogListResponse*) serialize to a stream
class ns1__GetSDKLogListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLogResult.
    ns1__abxLogResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxLogResult is a complexType.
/// class ns1__abxLogResult operations:
/// - soap_new_ns1__abxLogResult(soap*) allocate
/// - soap_new_ns1__abxLogResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLogResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLogResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLogResult(soap*, ns1__abxLogResult*) deserialize from a stream
/// - int soap_write_ns1__abxLogResult(soap, ns1__abxLogResult*) serialize to a stream
class ns1__abxLogResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxLogList.
    ns1__abxLogList*                     list                           1;	///< Required element.
};

/// "http://ws.abx/":abxLogList is a complexType.
/// class ns1__abxLogList operations:
/// - soap_new_ns1__abxLogList(soap*) allocate
/// - soap_new_ns1__abxLogList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLogList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLogList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLogList(soap*, ns1__abxLogList*) deserialize from a stream
/// - int soap_write_ns1__abxLogList(soap, ns1__abxLogList*) serialize to a stream
class ns1__abxLogList : public xsd__anyType
{ public:
/// Size of array of ns1__abxLog* is 1..unbounded
   $int                                  __sizelogList                  1;
/// Pointer to array ns1__abxLog* of length 1..unbounded
    ns1__abxLog*                        *logList                        1;
};

/// "http://ws.abx/":Fk_getRemoteFieldList is a complexType.
/// class ns1__Fk_USCOREgetRemoteFieldList operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteFieldList(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteFieldList(soap*, ns1__Fk_USCOREgetRemoteFieldList*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteFieldList(soap, ns1__Fk_USCOREgetRemoteFieldList*) serialize to a stream
class ns1__Fk_USCOREgetRemoteFieldList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element host of type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element dbType of type xs:string.
    char*                                dbType                         0;	///< Optional element.
/// Element databaseName of type xs:string.
    char*                                databaseName                   0;	///< Optional element.
/// Element tableName of type xs:string.
    char*                                tableName                      0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteFieldListResponse is a complexType.
/// class ns1__Fk_USCOREgetRemoteFieldListResponse operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteFieldListResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteFieldListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteFieldListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteFieldListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteFieldListResponse(soap*, ns1__Fk_USCOREgetRemoteFieldListResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteFieldListResponse(soap, ns1__Fk_USCOREgetRemoteFieldListResponse*) serialize to a stream
class ns1__Fk_USCOREgetRemoteFieldListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxFKResult is a complexType.
/// class ns1__abxFKResult operations:
/// - soap_new_ns1__abxFKResult(soap*) allocate
/// - soap_new_ns1__abxFKResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKResult(soap*, ns1__abxFKResult*) deserialize from a stream
/// - int soap_write_ns1__abxFKResult(soap, ns1__abxFKResult*) serialize to a stream
class ns1__abxFKResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxFKList.
    ns1__abxFKList*                      list                           1;	///< Required element.
};

/// "http://ws.abx/":abxFKList is a complexType.
/// class ns1__abxFKList operations:
/// - soap_new_ns1__abxFKList(soap*) allocate
/// - soap_new_ns1__abxFKList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKList(soap*, ns1__abxFKList*) deserialize from a stream
/// - int soap_write_ns1__abxFKList(soap, ns1__abxFKList*) serialize to a stream
class ns1__abxFKList : public xsd__anyType
{ public:
/// Size of array of ns1__abxFK* is 1..unbounded
   $int                                  __sizefk                       1;
/// Pointer to array ns1__abxFK* of length 1..unbounded
    ns1__abxFK*                         *fk                             1;
};

/// "http://ws.abx/":abxFK is a complexType.
/// class ns1__abxFK operations:
/// - soap_new_ns1__abxFK(soap*) allocate
/// - soap_new_ns1__abxFK(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFK(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFK(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFK(soap*, ns1__abxFK*) deserialize from a stream
/// - int soap_write_ns1__abxFK(soap, ns1__abxFK*) serialize to a stream
class ns1__abxFK : public xsd__anyType
{ public:
/// Element fkDb of type "http://ws.abx/":abxFkDb.
    ns1__abxFkDb*                        fkDb                           1;	///< Required element.
/// Element fkArchiboxRacc of type "http://ws.abx/":abxFkArchiboxRacc.
    ns1__abxFkArchiboxRacc*              fkArchiboxRacc                 1;	///< Required element.
/// Element fkArchiboxUtenti of type "http://ws.abx/":abxFkArchiboxUtenti.
    ns1__abxFkArchiboxUtenti*            fkArchiboxUtenti               1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
};

/// "http://ws.abx/":abxFkDb is a complexType.
/// class ns1__abxFkDb operations:
/// - soap_new_ns1__abxFkDb(soap*) allocate
/// - soap_new_ns1__abxFkDb(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFkDb(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFkDb(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFkDb(soap*, ns1__abxFkDb*) deserialize from a stream
/// - int soap_write_ns1__abxFkDb(soap, ns1__abxFkDb*) serialize to a stream
class ns1__abxFkDb : public xsd__anyType
{ public:
/// Element dbType of type xs:string.
    char*                                dbType                         1;	///< Required element.
/// Element dbName of type xs:string.
    char*                                dbName                         1;	///< Required element.
/// Element host of type xs:string.
    char*                                host                           1;	///< Required element.
/// Element user of type xs:string.
    char*                                user                           1;	///< Required element.
/// Element password of type xs:string.
    char*                                password                       1;	///< Required element.
/// Element tableName of type xs:string.
    char*                                tableName                      1;	///< Required element.
/// Element tableIndex of type xs:string.
    char*                                tableIndex                     1;	///< Required element.
/// Element tableDesc of type xs:string.
    char*                                tableDesc                      1;	///< Required element.
/// Element poolName of type xs:string.
    char*                                poolName                       1;	///< Required element.
/// Element resourceName of type xs:string.
    char*                                resourceName                   1;	///< Required element.
/// Size of array of ns1__abxFKDbRecord* is 1..unbounded
   $int                                  __sizerecordList               1;
/// Pointer to array ns1__abxFKDbRecord* of length 1..unbounded
    ns1__abxFKDbRecord*                 *recordList                     1;
/// Element tableIndexValue of type xs:string.
    char*                                tableIndexValue                1;	///< Required element.
/// Element tableDescValue of type xs:string.
    char*                                tableDescValue                 1;	///< Required element.
/// Element optionGetRecord of type xs:string.
    char*                                optionGetRecord                1;	///< Required element.
/// Element optionSetFkValue of type xs:string.
    char*                                optionSetFkValue               1;	///< Required element.
/// Size of array of ns1__abxFKFieldMap* is 1..unbounded
   $int                                  __sizefieldMapList             1;
/// Pointer to array ns1__abxFKFieldMap* of length 1..unbounded
    ns1__abxFKFieldMap*                 *fieldMapList                   1;
/// Size of array of ns1__abxFKTableFields* is 1..unbounded
   $int                                  __sizetableFieldList           1;
/// Pointer to array ns1__abxFKTableFields* of length 1..unbounded
    ns1__abxFKTableFields*              *tableFieldList                 1;
/// Element remoteDatabase of type "http://ws.abx/":abxRmDatabaseList.
    ns1__abxRmDatabaseList*              remoteDatabase                 1;	///< Required element.
/// Element remoteTable of type "http://ws.abx/":abxRmTableList.
    ns1__abxRmTableList*                 remoteTable                    1;	///< Required element.
/// Element remoteView of type "http://ws.abx/":abxRmViewList.
    ns1__abxRmViewList*                  remoteView                     1;	///< Required element.
/// Element remoteField of type "http://ws.abx/":abxRmFieldList.
    ns1__abxRmFieldList*                 remoteField                    1;	///< Required element.
/// Element multiFKList of type "http://ws.abx/":abxMultiFKList.
    ns1__abxMultiFKList*                 multiFKList                    1;	///< Required element.
};

/// "http://ws.abx/":abxFKDbRecord is a complexType.
/// class ns1__abxFKDbRecord operations:
/// - soap_new_ns1__abxFKDbRecord(soap*) allocate
/// - soap_new_ns1__abxFKDbRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKDbRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKDbRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKDbRecord(soap*, ns1__abxFKDbRecord*) deserialize from a stream
/// - int soap_write_ns1__abxFKDbRecord(soap, ns1__abxFKDbRecord*) serialize to a stream
class ns1__abxFKDbRecord : public xsd__anyType
{ public:
/// Size of array of ns1__abxFKDbField* is 1..unbounded
   $int                                  __sizefieldList                1;
/// Pointer to array ns1__abxFKDbField* of length 1..unbounded
    ns1__abxFKDbField*                  *fieldList                      1;
/// Element indexValue of type xs:string.
    char*                                indexValue                     1;	///< Required element.
/// Element descValue of type xs:string.
    char*                                descValue                      1;	///< Required element.
/// Element count of type xs:string.
    char*                                count                          1;	///< Required element.
};

/// "http://ws.abx/":abxFKDbField is a complexType.
/// class ns1__abxFKDbField operations:
/// - soap_new_ns1__abxFKDbField(soap*) allocate
/// - soap_new_ns1__abxFKDbField(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKDbField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKDbField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKDbField(soap*, ns1__abxFKDbField*) deserialize from a stream
/// - int soap_write_ns1__abxFKDbField(soap, ns1__abxFKDbField*) serialize to a stream
class ns1__abxFKDbField : public xsd__anyType
{ public:
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element fieldValue of type xs:string.
    char*                                fieldValue                     1;	///< Required element.
};

/// "http://ws.abx/":abxFKFieldMap is a complexType.
/// class ns1__abxFKFieldMap operations:
/// - soap_new_ns1__abxFKFieldMap(soap*) allocate
/// - soap_new_ns1__abxFKFieldMap(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKFieldMap(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKFieldMap(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKFieldMap(soap*, ns1__abxFKFieldMap*) deserialize from a stream
/// - int soap_write_ns1__abxFKFieldMap(soap, ns1__abxFKFieldMap*) serialize to a stream
class ns1__abxFKFieldMap : public xsd__anyType
{ public:
/// Element remoteField of type xs:string.
    char*                                remoteField                    1;	///< Required element.
/// Element localField of type xs:string.
    char*                                localField                     1;	///< Required element.
};

/// "http://ws.abx/":abxFKTableFields is a complexType.
/// class ns1__abxFKTableFields operations:
/// - soap_new_ns1__abxFKTableFields(soap*) allocate
/// - soap_new_ns1__abxFKTableFields(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKTableFields(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKTableFields(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKTableFields(soap*, ns1__abxFKTableFields*) deserialize from a stream
/// - int soap_write_ns1__abxFKTableFields(soap, ns1__abxFKTableFields*) serialize to a stream
class ns1__abxFKTableFields : public xsd__anyType
{ public:
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element fieldType of type xs:string.
    char*                                fieldType                      1;	///< Required element.
/// Element fieldPrecision of type xs:string.
    char*                                fieldPrecision                 1;	///< Required element.
};

/// "http://ws.abx/":abxRmDatabaseList is a complexType.
/// class ns1__abxRmDatabaseList operations:
/// - soap_new_ns1__abxRmDatabaseList(soap*) allocate
/// - soap_new_ns1__abxRmDatabaseList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRmDatabaseList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRmDatabaseList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRmDatabaseList(soap*, ns1__abxRmDatabaseList*) deserialize from a stream
/// - int soap_write_ns1__abxRmDatabaseList(soap, ns1__abxRmDatabaseList*) serialize to a stream
class ns1__abxRmDatabaseList : public xsd__anyType
{ public:
/// Size of array of char* is 1..unbounded
   $int                                  __sizedatabaseName             1;
/// Pointer to array char* of length 1..unbounded
    char*                               *databaseName                   1;
};

/// "http://ws.abx/":abxRmTableList is a complexType.
/// class ns1__abxRmTableList operations:
/// - soap_new_ns1__abxRmTableList(soap*) allocate
/// - soap_new_ns1__abxRmTableList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRmTableList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRmTableList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRmTableList(soap*, ns1__abxRmTableList*) deserialize from a stream
/// - int soap_write_ns1__abxRmTableList(soap, ns1__abxRmTableList*) serialize to a stream
class ns1__abxRmTableList : public xsd__anyType
{ public:
/// Size of array of char* is 1..unbounded
   $int                                  __sizetableName                1;
/// Pointer to array char* of length 1..unbounded
    char*                               *tableName                      1;
};

/// "http://ws.abx/":abxRmViewList is a complexType.
/// class ns1__abxRmViewList operations:
/// - soap_new_ns1__abxRmViewList(soap*) allocate
/// - soap_new_ns1__abxRmViewList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRmViewList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRmViewList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRmViewList(soap*, ns1__abxRmViewList*) deserialize from a stream
/// - int soap_write_ns1__abxRmViewList(soap, ns1__abxRmViewList*) serialize to a stream
class ns1__abxRmViewList : public xsd__anyType
{ public:
/// Size of array of char* is 1..unbounded
   $int                                  __sizeviewName                 1;
/// Pointer to array char* of length 1..unbounded
    char*                               *viewName                       1;
};

/// "http://ws.abx/":abxRmFieldList is a complexType.
/// class ns1__abxRmFieldList operations:
/// - soap_new_ns1__abxRmFieldList(soap*) allocate
/// - soap_new_ns1__abxRmFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRmFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRmFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRmFieldList(soap*, ns1__abxRmFieldList*) deserialize from a stream
/// - int soap_write_ns1__abxRmFieldList(soap, ns1__abxRmFieldList*) serialize to a stream
class ns1__abxRmFieldList : public xsd__anyType
{ public:
/// Size of array of char* is 1..unbounded
   $int                                  __sizefieldName                1;
/// Pointer to array char* of length 1..unbounded
    char*                               *fieldName                      1;
};

/// "http://ws.abx/":abxMultiFKList is a complexType.
/// class ns1__abxMultiFKList operations:
/// - soap_new_ns1__abxMultiFKList(soap*) allocate
/// - soap_new_ns1__abxMultiFKList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxMultiFKList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxMultiFKList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxMultiFKList(soap*, ns1__abxMultiFKList*) deserialize from a stream
/// - int soap_write_ns1__abxMultiFKList(soap, ns1__abxMultiFKList*) serialize to a stream
class ns1__abxMultiFKList : public xsd__anyType
{ public:
/// Size of array of ns1__abxMultiFK* is 1..unbounded
   $int                                  __sizemultiFK                  1;
/// Pointer to array ns1__abxMultiFK* of length 1..unbounded
    ns1__abxMultiFK*                    *multiFK                        1;
};

/// "http://ws.abx/":abxMultiFK is a complexType.
/// class ns1__abxMultiFK operations:
/// - soap_new_ns1__abxMultiFK(soap*) allocate
/// - soap_new_ns1__abxMultiFK(soap*, int num) allocate array
/// - soap_new_req_ns1__abxMultiFK(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxMultiFK(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxMultiFK(soap*, ns1__abxMultiFK*) deserialize from a stream
/// - int soap_write_ns1__abxMultiFK(soap, ns1__abxMultiFK*) serialize to a stream
class ns1__abxMultiFK : public xsd__anyType
{ public:
/// Element abxFieldName of type xs:string.
    char*                                abxFieldName                   1;	///< Required element.
/// Element abxFKFieldName of type xs:string.
    char*                                abxFKFieldName                 1;	///< Required element.
};

/// "http://ws.abx/":abxFkArchiboxRacc is a complexType.
/// class ns1__abxFkArchiboxRacc operations:
/// - soap_new_ns1__abxFkArchiboxRacc(soap*) allocate
/// - soap_new_ns1__abxFkArchiboxRacc(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFkArchiboxRacc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFkArchiboxRacc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFkArchiboxRacc(soap*, ns1__abxFkArchiboxRacc*) deserialize from a stream
/// - int soap_write_ns1__abxFkArchiboxRacc(soap, ns1__abxFkArchiboxRacc*) serialize to a stream
class ns1__abxFkArchiboxRacc : public xsd__anyType
{ public:
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element dbName of type xs:string.
    char*                                dbName                         1;	///< Required element.
/// Element tableName of type xs:string.
    char*                                tableName                      1;	///< Required element.
/// Element tableIndex of type xs:string.
    char*                                tableIndex                     1;	///< Required element.
/// Element isRealTableIndex of type xs:boolean.
    bool                                 isRealTableIndex               1;	///< Required element.
/// Element tableDesc of type xs:string.
    char*                                tableDesc                      1;	///< Required element.
/// Element tableIndexValue of type xs:string.
    char*                                tableIndexValue                1;	///< Required element.
/// Element tableDescValue of type xs:string.
    char*                                tableDescValue                 1;	///< Required element.
/// Size of array of ns1__abxFKRaccRecord* is 1..unbounded
   $int                                  __sizerecordList               1;
/// Pointer to array ns1__abxFKRaccRecord* of length 1..unbounded
    ns1__abxFKRaccRecord*               *recordList                     1;
/// Element count of type xs:string.
    char*                                count                          1;	///< Required element.
/// Element multiFKList of type "http://ws.abx/":abxMultiFKList.
    ns1__abxMultiFKList*                 multiFKList                    1;	///< Required element.
};

/// "http://ws.abx/":abxFKRaccRecord is a complexType.
/// class ns1__abxFKRaccRecord operations:
/// - soap_new_ns1__abxFKRaccRecord(soap*) allocate
/// - soap_new_ns1__abxFKRaccRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKRaccRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKRaccRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKRaccRecord(soap*, ns1__abxFKRaccRecord*) deserialize from a stream
/// - int soap_write_ns1__abxFKRaccRecord(soap, ns1__abxFKRaccRecord*) serialize to a stream
class ns1__abxFKRaccRecord : public xsd__anyType
{ public:
/// Element dataIdValue of type xs:string.
    char*                                dataIdValue                    1;	///< Required element.
/// Element indexValue of type xs:string.
    char*                                indexValue                     1;	///< Required element.
/// Element descValue of type xs:string.
    char*                                descValue                      1;	///< Required element.
};

/// "http://ws.abx/":abxFkArchiboxUtenti is a complexType.
/// class ns1__abxFkArchiboxUtenti operations:
/// - soap_new_ns1__abxFkArchiboxUtenti(soap*) allocate
/// - soap_new_ns1__abxFkArchiboxUtenti(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFkArchiboxUtenti(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFkArchiboxUtenti(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFkArchiboxUtenti(soap*, ns1__abxFkArchiboxUtenti*) deserialize from a stream
/// - int soap_write_ns1__abxFkArchiboxUtenti(soap, ns1__abxFkArchiboxUtenti*) serialize to a stream
class ns1__abxFkArchiboxUtenti : public xsd__anyType
{ public:
/// Element groupIndex of type xs:string.
    char*                                groupIndex                     1;	///< Required element.
/// Element groupDesc of type xs:string.
    char*                                groupDesc                      1;	///< Required element.
/// Element userIndex of type xs:string.
    char*                                userIndex                      1;	///< Required element.
/// Element userDesc of type xs:string.
    char*                                userDesc                       1;	///< Required element.
/// Element groupIndexValue of type xs:string.
    char*                                groupIndexValue                1;	///< Required element.
/// Element groupDescValue of type xs:string.
    char*                                groupDescValue                 1;	///< Required element.
/// Element userIndexValue of type xs:string.
    char*                                userIndexValue                 1;	///< Required element.
/// Element userDescValue of type xs:string.
    char*                                userDescValue                  1;	///< Required element.
/// Element localFields of type "http://ws.abx/":abxRmFieldList.
    ns1__abxRmFieldList*                 localFields                    1;	///< Required element.
/// Size of array of ns1__abxFKUtentiRecord* is 1..unbounded
   $int                                  __sizerecordList               1;
/// Pointer to array ns1__abxFKUtentiRecord* of length 1..unbounded
    ns1__abxFKUtentiRecord*             *recordList                     1;
/// Element count of type xs:string.
    char*                                count                          1;	///< Required element.
/// Element multiFKList of type "http://ws.abx/":abxMultiFKList.
    ns1__abxMultiFKList*                 multiFKList                    1;	///< Required element.
};

/// "http://ws.abx/":abxFKUtentiRecord is a complexType.
/// class ns1__abxFKUtentiRecord operations:
/// - soap_new_ns1__abxFKUtentiRecord(soap*) allocate
/// - soap_new_ns1__abxFKUtentiRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKUtentiRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKUtentiRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKUtentiRecord(soap*, ns1__abxFKUtentiRecord*) deserialize from a stream
/// - int soap_write_ns1__abxFKUtentiRecord(soap, ns1__abxFKUtentiRecord*) serialize to a stream
class ns1__abxFKUtentiRecord : public xsd__anyType
{ public:
/// Element userGroupIdValue of type xs:string.
    char*                                userGroupIdValue               1;	///< Required element.
/// Size of array of ns1__abxFKUtentiField* is 1..unbounded
   $int                                  __sizefieldList                1;
/// Pointer to array ns1__abxFKUtentiField* of length 1..unbounded
    ns1__abxFKUtentiField*              *fieldList                      1;
/// Element indexValue of type xs:string.
    char*                                indexValue                     1;	///< Required element.
/// Element descValue of type xs:string.
    char*                                descValue                      1;	///< Required element.
};

/// "http://ws.abx/":abxFKUtentiField is a complexType.
/// class ns1__abxFKUtentiField operations:
/// - soap_new_ns1__abxFKUtentiField(soap*) allocate
/// - soap_new_ns1__abxFKUtentiField(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFKUtentiField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFKUtentiField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFKUtentiField(soap*, ns1__abxFKUtentiField*) deserialize from a stream
/// - int soap_write_ns1__abxFKUtentiField(soap, ns1__abxFKUtentiField*) serialize to a stream
class ns1__abxFKUtentiField : public xsd__anyType
{ public:
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element fieldValue of type xs:string.
    char*                                fieldValue                     1;	///< Required element.
};

/// "http://ws.abx/":GetAllContainerExpressions is a complexType.
/// class ns1__GetAllContainerExpressions operations:
/// - soap_new_ns1__GetAllContainerExpressions(soap*) allocate
/// - soap_new_ns1__GetAllContainerExpressions(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllContainerExpressions(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllContainerExpressions(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllContainerExpressions(soap*, ns1__GetAllContainerExpressions*) deserialize from a stream
/// - int soap_write_ns1__GetAllContainerExpressions(soap, ns1__GetAllContainerExpressions*) serialize to a stream
class ns1__GetAllContainerExpressions : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetAllContainerExpressionsResponse is a complexType.
/// class ns1__GetAllContainerExpressionsResponse operations:
/// - soap_new_ns1__GetAllContainerExpressionsResponse(soap*) allocate
/// - soap_new_ns1__GetAllContainerExpressionsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllContainerExpressionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllContainerExpressionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllContainerExpressionsResponse(soap*, ns1__GetAllContainerExpressionsResponse*) deserialize from a stream
/// - int soap_write_ns1__GetAllContainerExpressionsResponse(soap, ns1__GetAllContainerExpressionsResponse*) serialize to a stream
class ns1__GetAllContainerExpressionsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteDynorg is a complexType.
/// class ns1__canDeleteDynorg operations:
/// - soap_new_ns1__canDeleteDynorg(soap*) allocate
/// - soap_new_ns1__canDeleteDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteDynorg(soap*, ns1__canDeleteDynorg*) deserialize from a stream
/// - int soap_write_ns1__canDeleteDynorg(soap, ns1__canDeleteDynorg*) serialize to a stream
class ns1__canDeleteDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element RuleName of type xs:string.
    char*                                RuleName                       0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteDynorgResponse is a complexType.
/// class ns1__canDeleteDynorgResponse operations:
/// - soap_new_ns1__canDeleteDynorgResponse(soap*) allocate
/// - soap_new_ns1__canDeleteDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteDynorgResponse(soap*, ns1__canDeleteDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__canDeleteDynorgResponse(soap, ns1__canDeleteDynorgResponse*) serialize to a stream
class ns1__canDeleteDynorgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByContainer is a complexType.
/// class ns1__GetDataTPFileListByContainer operations:
/// - soap_new_ns1__GetDataTPFileListByContainer(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByContainer(soap*, ns1__GetDataTPFileListByContainer*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByContainer(soap, ns1__GetDataTPFileListByContainer*) serialize to a stream
class ns1__GetDataTPFileListByContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByContainerResponse is a complexType.
/// class ns1__GetDataTPFileListByContainerResponse operations:
/// - soap_new_ns1__GetDataTPFileListByContainerResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByContainerResponse(soap*, ns1__GetDataTPFileListByContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByContainerResponse(soap, ns1__GetDataTPFileListByContainerResponse*) serialize to a stream
class ns1__GetDataTPFileListByContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxFileTpResult is a complexType.
/// class ns1__abxFileTpResult operations:
/// - soap_new_ns1__abxFileTpResult(soap*) allocate
/// - soap_new_ns1__abxFileTpResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFileTpResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFileTpResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFileTpResult(soap*, ns1__abxFileTpResult*) deserialize from a stream
/// - int soap_write_ns1__abxFileTpResult(soap, ns1__abxFileTpResult*) serialize to a stream
class ns1__abxFileTpResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxFileTpList.
    ns1__abxFileTpList*                  list                           1;	///< Required element.
};

/// "http://ws.abx/":abxFileTpList is a complexType.
/// class ns1__abxFileTpList operations:
/// - soap_new_ns1__abxFileTpList(soap*) allocate
/// - soap_new_ns1__abxFileTpList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFileTpList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFileTpList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFileTpList(soap*, ns1__abxFileTpList*) deserialize from a stream
/// - int soap_write_ns1__abxFileTpList(soap, ns1__abxFileTpList*) serialize to a stream
class ns1__abxFileTpList : public xsd__anyType
{ public:
/// Size of array of ns1__abxFileTp* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxFileTp* of length 1..unbounded
    ns1__abxFileTp*                     *dataList                       1;
};

/// "http://ws.abx/":abxFileTp is a complexType.
/// class ns1__abxFileTp operations:
/// - soap_new_ns1__abxFileTp(soap*) allocate
/// - soap_new_ns1__abxFileTp(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFileTp(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFileTp(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFileTp(soap*, ns1__abxFileTp*) deserialize from a stream
/// - int soap_write_ns1__abxFileTp(soap, ns1__abxFileTp*) serialize to a stream
class ns1__abxFileTp : public xsd__anyType
{ public:
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   1;	///< Required element.
/// Element isLastRevision of type xs:boolean.
    bool                                 isLastRevision                 1;	///< Required element.
/// Element revisionId of type xs:string.
    char*                                revisionId                     1;	///< Required element.
/// Element filesize of type xs:string.
    char*                                filesize                       1;	///< Required element.
/// Element filename of type xs:string.
    char*                                filename                       1;	///< Required element.
/// Element defaultLanguage of type xs:string.
    char*                                defaultLanguage                1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element hash of type xs:string.
    char*                                hash                           1;	///< Required element.
/// Element hashType of type xs:string.
    char*                                hashType                       1;	///< Required element.
/// Element translationList of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 translationList                1;	///< Required element.
/// Element fileUniqueCode of type xs:string.
    char*                                fileUniqueCode                 1;	///< Required element.
/// Element filepath of type xs:string.
    char*                                filepath                       1;	///< Required element.
/// Element filenameSaved of type xs:string.
    char*                                filenameSaved                  1;	///< Required element.
/// Element numDownload of type xs:int.
    int                                  numDownload                    1;	///< Required element.
/// Element idContainer of type xs:string.
    char*                                idContainer                    1;	///< Required element.
/// Element templateNameID of type xs:string.
    char*                                templateNameID                 1;	///< Required element.
/// Element templateOption of type xs:string.
    char*                                templateOption                 1;	///< Required element.
/// Element workflowProcessName of type xs:string.
    char*                                workflowProcessName            1;	///< Required element.
/// Element workflowPackageName of type xs:string.
    char*                                workflowPackageName            1;	///< Required element.
/// Element dateCreated of type xs:dateTime.
    time_t                               dateCreated                    1;	///< Required element.
/// Element userIdCreated of type xs:string.
    char*                                userIdCreated                  1;	///< Required element.
/// Element dateLastModify of type xs:dateTime.
    time_t                               dateLastModify                 1;	///< Required element.
/// Element userIdLastModify of type xs:string.
    char*                                userIdLastModify               1;	///< Required element.
/// Element timestamp of type xs:dateTime.
    time_t                               timestamp                      1;	///< Required element.
/// Size of array of ns1__downloadData* is 1..unbounded
   $int                                  __sizedownloadData             1;
/// Pointer to array ns1__downloadData* of length 1..unbounded
    ns1__downloadData*                  *downloadData                   1;
/// Size of array of ns1__uploadData* is 1..unbounded
   $int                                  __sizeuploadData               1;
/// Pointer to array ns1__uploadData* of length 1..unbounded
    ns1__uploadData*                    *uploadData                     1;
/// Size of array of ns1__bindingExcel* is 1..unbounded
   $int                                  __sizebindExcel                1;
/// Pointer to array ns1__bindingExcel* of length 1..unbounded
    ns1__bindingExcel*                  *bindExcel                      1;
/// Size of array of ns1__bindingWord* is 1..unbounded
   $int                                  __sizebindWord                 1;
/// Pointer to array ns1__bindingWord* of length 1..unbounded
    ns1__bindingWord*                   *bindWord                       1;
};

/// "http://ws.abx/":bindingExcel is a complexType.
/// class ns1__bindingExcel operations:
/// - soap_new_ns1__bindingExcel(soap*) allocate
/// - soap_new_ns1__bindingExcel(soap*, int num) allocate array
/// - soap_new_req_ns1__bindingExcel(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__bindingExcel(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__bindingExcel(soap*, ns1__bindingExcel*) deserialize from a stream
/// - int soap_write_ns1__bindingExcel(soap, ns1__bindingExcel*) serialize to a stream
class ns1__bindingExcel : public xsd__anyType
{ public:
/// Element ContainerField of type xs:string.
    char*                                ContainerField                 1;	///< Required element.
/// Element UserField of type xs:boolean.
    bool                                 UserField                      1;	///< Required element.
/// Element DescriptionField of type xs:string.
    char*                                DescriptionField               1;	///< Required element.
/// Element Column of type xs:int.
    int                                  Column                         1;	///< Required element.
/// Element Row of type xs:int.
    int                                  Row                            1;	///< Required element.
/// Element Sheet of type xs:int.
    int                                  Sheet                          1;	///< Required element.
};

/// "http://ws.abx/":bindingWord is a complexType.
/// class ns1__bindingWord operations:
/// - soap_new_ns1__bindingWord(soap*) allocate
/// - soap_new_ns1__bindingWord(soap*, int num) allocate array
/// - soap_new_req_ns1__bindingWord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__bindingWord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__bindingWord(soap*, ns1__bindingWord*) deserialize from a stream
/// - int soap_write_ns1__bindingWord(soap, ns1__bindingWord*) serialize to a stream
class ns1__bindingWord : public xsd__anyType
{ public:
/// Element ContainerField of type xs:string.
    char*                                ContainerField                 1;	///< Required element.
/// Element DocumentField of type xs:string.
    char*                                DocumentField                  1;	///< Required element.
/// Element DocumentFieldType of type xs:string.
    char*                                DocumentFieldType              1;	///< Required element.
/// Element UserField of type xs:boolean.
    bool                                 UserField                      1;	///< Required element.
};

/// "http://ws.abx/":Fk_DB_testConnection is a complexType.
/// class ns1__Fk_USCOREDB_USCOREtestConnection operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREtestConnection(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREtestConnection(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREtestConnection(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREtestConnection(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREtestConnection(soap*, ns1__Fk_USCOREDB_USCOREtestConnection*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREtestConnection(soap, ns1__Fk_USCOREDB_USCOREtestConnection*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREtestConnection : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element host of type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element dbType of type xs:string.
    char*                                dbType                         0;	///< Optional element.
};

/// "http://ws.abx/":Fk_DB_testConnectionResponse is a complexType.
/// class ns1__Fk_USCOREDB_USCOREtestConnectionResponse operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap*, ns1__Fk_USCOREDB_USCOREtestConnectionResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREtestConnectionResponse(soap, ns1__Fk_USCOREDB_USCOREtestConnectionResponse*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREtestConnectionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyContainer is a complexType.
/// class ns1__ModifyContainer operations:
/// - soap_new_ns1__ModifyContainer(soap*) allocate
/// - soap_new_ns1__ModifyContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyContainer(soap*, ns1__ModifyContainer*) deserialize from a stream
/// - int soap_write_ns1__ModifyContainer(soap, ns1__ModifyContainer*) serialize to a stream
class ns1__ModifyContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Container2Update of type "http://ws.abx/":abxContainer.
    ns1__abxContainer*                   Container2Update               0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element avl of type "http://ws.abx/":abxVersioningList.
    ns1__abxVersioningList*              avl                            0;	///< Optional element.
};

/// "http://ws.abx/":abxVersioningList is a complexType.
/// class ns1__abxVersioningList operations:
/// - soap_new_ns1__abxVersioningList(soap*) allocate
/// - soap_new_ns1__abxVersioningList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxVersioningList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxVersioningList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxVersioningList(soap*, ns1__abxVersioningList*) deserialize from a stream
/// - int soap_write_ns1__abxVersioningList(soap, ns1__abxVersioningList*) serialize to a stream
class ns1__abxVersioningList : public xsd__anyType
{ public:
/// Size of array of ns1__abxVersioning* is 1..unbounded
   $int                                  __sizeversionList              1;
/// Pointer to array ns1__abxVersioning* of length 1..unbounded
    ns1__abxVersioning*                 *versionList                    1;
};

/// "http://ws.abx/":abxVersioning is a complexType.
/// class ns1__abxVersioning operations:
/// - soap_new_ns1__abxVersioning(soap*) allocate
/// - soap_new_ns1__abxVersioning(soap*, int num) allocate array
/// - soap_new_req_ns1__abxVersioning(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxVersioning(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxVersioning(soap*, ns1__abxVersioning*) deserialize from a stream
/// - int soap_write_ns1__abxVersioning(soap, ns1__abxVersioning*) serialize to a stream
class ns1__abxVersioning : public xsd__anyType
{ public:
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element value of type xs:boolean.
    bool                                 value                          1;	///< Required element.
};

/// "http://ws.abx/":ModifyContainerResponse is a complexType.
/// class ns1__ModifyContainerResponse operations:
/// - soap_new_ns1__ModifyContainerResponse(soap*) allocate
/// - soap_new_ns1__ModifyContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyContainerResponse(soap*, ns1__ModifyContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyContainerResponse(soap, ns1__ModifyContainerResponse*) serialize to a stream
class ns1__ModifyContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxContainerResult.
    ns1__abxContainerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxContainerResult is a complexType.
/// class ns1__abxContainerResult operations:
/// - soap_new_ns1__abxContainerResult(soap*) allocate
/// - soap_new_ns1__abxContainerResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxContainerResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxContainerResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxContainerResult(soap*, ns1__abxContainerResult*) deserialize from a stream
/// - int soap_write_ns1__abxContainerResult(soap, ns1__abxContainerResult*) serialize to a stream
class ns1__abxContainerResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxContainerList.
    ns1__abxContainerList*               list                           1;	///< Required element.
};

/// "http://ws.abx/":GetSDKImagesFromPDFTemplate is a complexType.
/// class ns1__GetSDKImagesFromPDFTemplate operations:
/// - soap_new_ns1__GetSDKImagesFromPDFTemplate(soap*) allocate
/// - soap_new_ns1__GetSDKImagesFromPDFTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKImagesFromPDFTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKImagesFromPDFTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKImagesFromPDFTemplate(soap*, ns1__GetSDKImagesFromPDFTemplate*) deserialize from a stream
/// - int soap_write_ns1__GetSDKImagesFromPDFTemplate(soap, ns1__GetSDKImagesFromPDFTemplate*) serialize to a stream
class ns1__GetSDKImagesFromPDFTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKImagesFromPDFTemplateResponse is a complexType.
/// class ns1__GetSDKImagesFromPDFTemplateResponse operations:
/// - soap_new_ns1__GetSDKImagesFromPDFTemplateResponse(soap*) allocate
/// - soap_new_ns1__GetSDKImagesFromPDFTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKImagesFromPDFTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKImagesFromPDFTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKImagesFromPDFTemplateResponse(soap*, ns1__GetSDKImagesFromPDFTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKImagesFromPDFTemplateResponse(soap, ns1__GetSDKImagesFromPDFTemplateResponse*) serialize to a stream
class ns1__GetSDKImagesFromPDFTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetListMarker is a complexType.
/// class ns1__GetListMarker operations:
/// - soap_new_ns1__GetListMarker(soap*) allocate
/// - soap_new_ns1__GetListMarker(soap*, int num) allocate array
/// - soap_new_req_ns1__GetListMarker(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetListMarker(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetListMarker(soap*, ns1__GetListMarker*) deserialize from a stream
/// - int soap_write_ns1__GetListMarker(soap, ns1__GetListMarker*) serialize to a stream
class ns1__GetListMarker : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetListMarkerResponse is a complexType.
/// class ns1__GetListMarkerResponse operations:
/// - soap_new_ns1__GetListMarkerResponse(soap*) allocate
/// - soap_new_ns1__GetListMarkerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetListMarkerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetListMarkerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetListMarkerResponse(soap*, ns1__GetListMarkerResponse*) deserialize from a stream
/// - int soap_write_ns1__GetListMarkerResponse(soap, ns1__GetListMarkerResponse*) serialize to a stream
class ns1__GetListMarkerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileContainerDetail is a complexType.
/// class ns1__GetDataFileContainerDetail operations:
/// - soap_new_ns1__GetDataFileContainerDetail(soap*) allocate
/// - soap_new_ns1__GetDataFileContainerDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileContainerDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileContainerDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileContainerDetail(soap*, ns1__GetDataFileContainerDetail*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileContainerDetail(soap, ns1__GetDataFileContainerDetail*) serialize to a stream
class ns1__GetDataFileContainerDetail : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element contAttachmentId of type xs:string.
    char*                                contAttachmentId               0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileContainerDetailResponse is a complexType.
/// class ns1__GetDataFileContainerDetailResponse operations:
/// - soap_new_ns1__GetDataFileContainerDetailResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileContainerDetailResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileContainerDetailResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileContainerDetailResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileContainerDetailResponse(soap*, ns1__GetDataFileContainerDetailResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileContainerDetailResponse(soap, ns1__GetDataFileContainerDetailResponse*) serialize to a stream
class ns1__GetDataFileContainerDetailResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTextFromTemplate is a complexType.
/// class ns1__GetSDKTextFromTemplate operations:
/// - soap_new_ns1__GetSDKTextFromTemplate(soap*) allocate
/// - soap_new_ns1__GetSDKTextFromTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTextFromTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTextFromTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTextFromTemplate(soap*, ns1__GetSDKTextFromTemplate*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTextFromTemplate(soap, ns1__GetSDKTextFromTemplate*) serialize to a stream
class ns1__GetSDKTextFromTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTextFromTemplateResponse is a complexType.
/// class ns1__GetSDKTextFromTemplateResponse operations:
/// - soap_new_ns1__GetSDKTextFromTemplateResponse(soap*) allocate
/// - soap_new_ns1__GetSDKTextFromTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTextFromTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTextFromTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTextFromTemplateResponse(soap*, ns1__GetSDKTextFromTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTextFromTemplateResponse(soap, ns1__GetSDKTextFromTemplateResponse*) serialize to a stream
class ns1__GetSDKTextFromTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListWA is a complexType.
/// class ns1__GetDataFileListWA operations:
/// - soap_new_ns1__GetDataFileListWA(soap*) allocate
/// - soap_new_ns1__GetDataFileListWA(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListWA(soap*, ns1__GetDataFileListWA*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListWA(soap, ns1__GetDataFileListWA*) serialize to a stream
class ns1__GetDataFileListWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListWAResponse is a complexType.
/// class ns1__GetDataFileListWAResponse operations:
/// - soap_new_ns1__GetDataFileListWAResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileListWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListWAResponse(soap*, ns1__GetDataFileListWAResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListWAResponse(soap, ns1__GetDataFileListWAResponse*) serialize to a stream
class ns1__GetDataFileListWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyTemplate is a complexType.
/// class ns1__ModifyTemplate operations:
/// - soap_new_ns1__ModifyTemplate(soap*) allocate
/// - soap_new_ns1__ModifyTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyTemplate(soap*, ns1__ModifyTemplate*) deserialize from a stream
/// - int soap_write_ns1__ModifyTemplate(soap, ns1__ModifyTemplate*) serialize to a stream
class ns1__ModifyTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Template2Update of type "http://ws.abx/":abxTemplate.
    ns1__abxTemplate*                    Template2Update                0;	///< Optional element.
};

/// "http://ws.abx/":ModifyTemplateResponse is a complexType.
/// class ns1__ModifyTemplateResponse operations:
/// - soap_new_ns1__ModifyTemplateResponse(soap*) allocate
/// - soap_new_ns1__ModifyTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyTemplateResponse(soap*, ns1__ModifyTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyTemplateResponse(soap, ns1__ModifyTemplateResponse*) serialize to a stream
class ns1__ModifyTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTemplateResult.
    ns1__abxTemplateResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxTemplateResult is a complexType.
/// class ns1__abxTemplateResult operations:
/// - soap_new_ns1__abxTemplateResult(soap*) allocate
/// - soap_new_ns1__abxTemplateResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTemplateResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTemplateResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTemplateResult(soap*, ns1__abxTemplateResult*) deserialize from a stream
/// - int soap_write_ns1__abxTemplateResult(soap, ns1__abxTemplateResult*) serialize to a stream
class ns1__abxTemplateResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxTemplateList.
    ns1__abxTemplateList*                list                           1;	///< Required element.
};

/// "http://ws.abx/":CanInsertFileContainer is a complexType.
/// class ns1__CanInsertFileContainer operations:
/// - soap_new_ns1__CanInsertFileContainer(soap*) allocate
/// - soap_new_ns1__CanInsertFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertFileContainer(soap*, ns1__CanInsertFileContainer*) deserialize from a stream
/// - int soap_write_ns1__CanInsertFileContainer(soap, ns1__CanInsertFileContainer*) serialize to a stream
class ns1__CanInsertFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertFileContainerResponse is a complexType.
/// class ns1__CanInsertFileContainerResponse operations:
/// - soap_new_ns1__CanInsertFileContainerResponse(soap*) allocate
/// - soap_new_ns1__CanInsertFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertFileContainerResponse(soap*, ns1__CanInsertFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertFileContainerResponse(soap, ns1__CanInsertFileContainerResponse*) serialize to a stream
class ns1__CanInsertFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyLinkContainerToContainer is a complexType.
/// class ns1__ModifyLinkContainerToContainer operations:
/// - soap_new_ns1__ModifyLinkContainerToContainer(soap*) allocate
/// - soap_new_ns1__ModifyLinkContainerToContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyLinkContainerToContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyLinkContainerToContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyLinkContainerToContainer(soap*, ns1__ModifyLinkContainerToContainer*) deserialize from a stream
/// - int soap_write_ns1__ModifyLinkContainerToContainer(soap, ns1__ModifyLinkContainerToContainer*) serialize to a stream
class ns1__ModifyLinkContainerToContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":ModifyLinkContainerToContainerResponse is a complexType.
/// class ns1__ModifyLinkContainerToContainerResponse operations:
/// - soap_new_ns1__ModifyLinkContainerToContainerResponse(soap*) allocate
/// - soap_new_ns1__ModifyLinkContainerToContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyLinkContainerToContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyLinkContainerToContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyLinkContainerToContainerResponse(soap*, ns1__ModifyLinkContainerToContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyLinkContainerToContainerResponse(soap, ns1__ModifyLinkContainerToContainerResponse*) serialize to a stream
class ns1__ModifyLinkContainerToContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxLinkResult is a complexType.
/// class ns1__abxLinkResult operations:
/// - soap_new_ns1__abxLinkResult(soap*) allocate
/// - soap_new_ns1__abxLinkResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLinkResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLinkResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLinkResult(soap*, ns1__abxLinkResult*) deserialize from a stream
/// - int soap_write_ns1__abxLinkResult(soap, ns1__abxLinkResult*) serialize to a stream
class ns1__abxLinkResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxLinkList.
    ns1__abxLinkList*                    list                           1;	///< Required element.
};

/// "http://ws.abx/":abxLinkList is a complexType.
/// class ns1__abxLinkList operations:
/// - soap_new_ns1__abxLinkList(soap*) allocate
/// - soap_new_ns1__abxLinkList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLinkList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLinkList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLinkList(soap*, ns1__abxLinkList*) deserialize from a stream
/// - int soap_write_ns1__abxLinkList(soap, ns1__abxLinkList*) serialize to a stream
class ns1__abxLinkList : public xsd__anyType
{ public:
/// Size of array of ns1__abxLink* is 1..unbounded
   $int                                  __sizelinkList                 1;
/// Pointer to array ns1__abxLink* of length 1..unbounded
    ns1__abxLink*                       *linkList                       1;
};

/// "http://ws.abx/":abxLink is a complexType.
/// class ns1__abxLink operations:
/// - soap_new_ns1__abxLink(soap*) allocate
/// - soap_new_ns1__abxLink(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLink(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLink(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLink(soap*, ns1__abxLink*) deserialize from a stream
/// - int soap_write_ns1__abxLink(soap, ns1__abxLink*) serialize to a stream
class ns1__abxLink : public xsd__anyType
{ public:
/// Element fromTable of type xs:string.
    char*                                fromTable                      1;	///< Required element.
/// Element toTable of type xs:string.
    char*                                toTable                        1;	///< Required element.
/// Element fromTableId of type xs:string.
    char*                                fromTableId                    1;	///< Required element.
/// Element toTableId of type xs:string.
    char*                                toTableId                      1;	///< Required element.
/// Element countLinks of type xs:int.
    int                                  countLinks                     1;	///< Required element.
/// Element fromInstanceName of type xs:string.
    char*                                fromInstanceName               1;	///< Required element.
/// Element toInstanceName of type xs:string.
    char*                                toInstanceName                 1;	///< Required element.
/// Element note of type xs:string.
    char*                                note                           1;	///< Required element.
/// Element linkId of type xs:string.
    char*                                linkId                         1;	///< Required element.
};

/// "http://ws.abx/":CreateDynorg is a complexType.
/// class ns1__CreateDynorg operations:
/// - soap_new_ns1__CreateDynorg(soap*) allocate
/// - soap_new_ns1__CreateDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateDynorg(soap*, ns1__CreateDynorg*) deserialize from a stream
/// - int soap_write_ns1__CreateDynorg(soap, ns1__CreateDynorg*) serialize to a stream
class ns1__CreateDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element DynorgParam of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          DynorgParam                    0;	///< Optional element.
};

/// "http://ws.abx/":CreateDynorgResponse is a complexType.
/// class ns1__CreateDynorgResponse operations:
/// - soap_new_ns1__CreateDynorgResponse(soap*) allocate
/// - soap_new_ns1__CreateDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateDynorgResponse(soap*, ns1__CreateDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateDynorgResponse(soap, ns1__CreateDynorgResponse*) serialize to a stream
class ns1__CreateDynorgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicRuleResult.
    ns3__abxDynamicRuleResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetInstancePathname is a complexType.
/// class ns1__GetInstancePathname operations:
/// - soap_new_ns1__GetInstancePathname(soap*) allocate
/// - soap_new_ns1__GetInstancePathname(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstancePathname(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstancePathname(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstancePathname(soap*, ns1__GetInstancePathname*) deserialize from a stream
/// - int soap_write_ns1__GetInstancePathname(soap, ns1__GetInstancePathname*) serialize to a stream
class ns1__GetInstancePathname : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element HexInstanceId of type xs:string.
    char*                                HexInstanceId                  0;	///< Optional element.
};

/// "http://ws.abx/":GetInstancePathnameResponse is a complexType.
/// class ns1__GetInstancePathnameResponse operations:
/// - soap_new_ns1__GetInstancePathnameResponse(soap*) allocate
/// - soap_new_ns1__GetInstancePathnameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstancePathnameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstancePathnameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstancePathnameResponse(soap*, ns1__GetInstancePathnameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetInstancePathnameResponse(soap, ns1__GetInstancePathnameResponse*) serialize to a stream
class ns1__GetInstancePathnameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGipResult.
    ns1__abxGipResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxGipResult is a complexType.
/// class ns1__abxGipResult operations:
/// - soap_new_ns1__abxGipResult(soap*) allocate
/// - soap_new_ns1__abxGipResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGipResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGipResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGipResult(soap*, ns1__abxGipResult*) deserialize from a stream
/// - int soap_write_ns1__abxGipResult(soap, ns1__abxGipResult*) serialize to a stream
class ns1__abxGipResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element pathname of type xs:string.
    char*                                pathname                       1;	///< Required element.
};

/// "http://ws.abx/":ValidateSDKTask is a complexType.
/// class ns1__ValidateSDKTask operations:
/// - soap_new_ns1__ValidateSDKTask(soap*) allocate
/// - soap_new_ns1__ValidateSDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__ValidateSDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ValidateSDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ValidateSDKTask(soap*, ns1__ValidateSDKTask*) deserialize from a stream
/// - int soap_write_ns1__ValidateSDKTask(soap, ns1__ValidateSDKTask*) serialize to a stream
class ns1__ValidateSDKTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":ValidateSDKTaskResponse is a complexType.
/// class ns1__ValidateSDKTaskResponse operations:
/// - soap_new_ns1__ValidateSDKTaskResponse(soap*) allocate
/// - soap_new_ns1__ValidateSDKTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ValidateSDKTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ValidateSDKTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ValidateSDKTaskResponse(soap*, ns1__ValidateSDKTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__ValidateSDKTaskResponse(soap, ns1__ValidateSDKTaskResponse*) serialize to a stream
class ns1__ValidateSDKTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Login is a complexType.
/// class ns1__Login operations:
/// - soap_new_ns1__Login(soap*) allocate
/// - soap_new_ns1__Login(soap*, int num) allocate array
/// - soap_new_req_ns1__Login(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Login(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Login(soap*, ns1__Login*) deserialize from a stream
/// - int soap_write_ns1__Login(soap, ns1__Login*) serialize to a stream
class ns1__Login : public xsd__anyType
{ public:
/// Element LoginParam of type "http://ws.abx/":abxLoginIdentity.
    ns1__abxLoginIdentity*               LoginParam                     0;	///< Optional element.
};

/// "http://ws.abx/":abxLoginIdentity is a complexType.
/// class ns1__abxLoginIdentity operations:
/// - soap_new_ns1__abxLoginIdentity(soap*) allocate
/// - soap_new_ns1__abxLoginIdentity(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLoginIdentity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLoginIdentity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLoginIdentity(soap*, ns1__abxLoginIdentity*) deserialize from a stream
/// - int soap_write_ns1__abxLoginIdentity(soap, ns1__abxLoginIdentity*) serialize to a stream
class ns1__abxLoginIdentity : public xsd__anyType
{ public:
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element password of type xs:string.
    char*                                password                       1;	///< Required element.
/// Element passphrase of type xs:string.
    char*                                passphrase                     1;	///< Required element.
/// Element domain of type xs:string.
    char*                                domain                         1;	///< Required element.
/// Element archiboxIP of type xs:string.
    char*                                archiboxIP                     1;	///< Required element.
/// Element languageID of type xs:string.
    char*                                languageID                     1;	///< Required element.
/// Element sourceID of type xs:unsignedInt.
    unsigned int                         sourceID                       1;	///< Required element.
/// Element usernameLogin of type xs:boolean.
    bool                                 usernameLogin                  1;	///< Required element.
};

/// "http://ws.abx/":LoginResponse is a complexType.
/// class ns1__LoginResponse operations:
/// - soap_new_ns1__LoginResponse(soap*) allocate
/// - soap_new_ns1__LoginResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__LoginResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__LoginResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__LoginResponse(soap*, ns1__LoginResponse*) deserialize from a stream
/// - int soap_write_ns1__LoginResponse(soap, ns1__LoginResponse*) serialize to a stream
class ns1__LoginResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLoginResult.
    ns1__abxLoginResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxLoginResult is a complexType.
/// class ns1__abxLoginResult operations:
/// - soap_new_ns1__abxLoginResult(soap*) allocate
/// - soap_new_ns1__abxLoginResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLoginResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLoginResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLoginResult(soap*, ns1__abxLoginResult*) deserialize from a stream
/// - int soap_write_ns1__abxLoginResult(soap, ns1__abxLoginResult*) serialize to a stream
class ns1__abxLoginResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element sessionIDF of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         sessionIDF                     1;	///< Required element.
/// Element loginInfo of type "http://ws.abx/":abxLoginInfo.
    ns1__abxLoginInfo*                   loginInfo                      1;	///< Required element.
};

/// "http://ws.abx/":abxLoginInfo is a complexType.
/// class ns1__abxLoginInfo operations:
/// - soap_new_ns1__abxLoginInfo(soap*) allocate
/// - soap_new_ns1__abxLoginInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLoginInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLoginInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLoginInfo(soap*, ns1__abxLoginInfo*) deserialize from a stream
/// - int soap_write_ns1__abxLoginInfo(soap, ns1__abxLoginInfo*) serialize to a stream
class ns1__abxLoginInfo : public xsd__anyType
{ public:
/// Element matricola of type xs:string.
    char*                                matricola                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element ipaddress of type xs:string.
    char*                                ipaddress                      1;	///< Required element.
/// Element location of type xs:string.
    char*                                location                       1;	///< Required element.
/// Element release of type xs:string.
    char*                                release                        1;	///< Required element.
/// Element serverid of type xs:int.
    int                                  serverid                       1;	///< Required element.
/// Element activeDirectoryEnabled of type xs:boolean.
    bool                                 activeDirectoryEnabled         1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
};

/// "http://ws.abx/":GetFieldList is a complexType.
/// class ns1__GetFieldList operations:
/// - soap_new_ns1__GetFieldList(soap*) allocate
/// - soap_new_ns1__GetFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldList(soap*, ns1__GetFieldList*) deserialize from a stream
/// - int soap_write_ns1__GetFieldList(soap, ns1__GetFieldList*) serialize to a stream
class ns1__GetFieldList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetFieldListResponse is a complexType.
/// class ns1__GetFieldListResponse operations:
/// - soap_new_ns1__GetFieldListResponse(soap*) allocate
/// - soap_new_ns1__GetFieldListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldListResponse(soap*, ns1__GetFieldListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFieldListResponse(soap, ns1__GetFieldListResponse*) serialize to a stream
class ns1__GetFieldListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFieldResult.
    ns1__abxFieldResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxFieldResult is a complexType.
/// class ns1__abxFieldResult operations:
/// - soap_new_ns1__abxFieldResult(soap*) allocate
/// - soap_new_ns1__abxFieldResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxFieldResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxFieldResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxFieldResult(soap*, ns1__abxFieldResult*) deserialize from a stream
/// - int soap_write_ns1__abxFieldResult(soap, ns1__abxFieldResult*) serialize to a stream
class ns1__abxFieldResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxFieldList.
    ns1__abxFieldList*                   list                           1;	///< Required element.
/// Element optionalMessage of type xs:string.
    char*                                optionalMessage                1;	///< Required element.
};

/// "http://ws.abx/":DownloadUSGetNext is a complexType.
/// class ns1__DownloadUSGetNext operations:
/// - soap_new_ns1__DownloadUSGetNext(soap*) allocate
/// - soap_new_ns1__DownloadUSGetNext(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSGetNext(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSGetNext(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSGetNext(soap*, ns1__DownloadUSGetNext*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSGetNext(soap, ns1__DownloadUSGetNext*) serialize to a stream
class ns1__DownloadUSGetNext : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadUSGetNextResponse is a complexType.
/// class ns1__DownloadUSGetNextResponse operations:
/// - soap_new_ns1__DownloadUSGetNextResponse(soap*) allocate
/// - soap_new_ns1__DownloadUSGetNextResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSGetNextResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSGetNextResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSGetNextResponse(soap*, ns1__DownloadUSGetNextResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSGetNextResponse(soap, ns1__DownloadUSGetNextResponse*) serialize to a stream
class ns1__DownloadUSGetNextResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyFileDescription is a complexType.
/// class ns1__ModifyFileDescription operations:
/// - soap_new_ns1__ModifyFileDescription(soap*) allocate
/// - soap_new_ns1__ModifyFileDescription(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyFileDescription(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyFileDescription(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyFileDescription(soap*, ns1__ModifyFileDescription*) deserialize from a stream
/// - int soap_write_ns1__ModifyFileDescription(soap, ns1__ModifyFileDescription*) serialize to a stream
class ns1__ModifyFileDescription : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element file of type "http://ws.abx/":abxFile.
    ns1__abxFile*                        file                           0;	///< Optional element.
};

/// "http://ws.abx/":ModifyFileDescriptionResponse is a complexType.
/// class ns1__ModifyFileDescriptionResponse operations:
/// - soap_new_ns1__ModifyFileDescriptionResponse(soap*) allocate
/// - soap_new_ns1__ModifyFileDescriptionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyFileDescriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyFileDescriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyFileDescriptionResponse(soap*, ns1__ModifyFileDescriptionResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyFileDescriptionResponse(soap, ns1__ModifyFileDescriptionResponse*) serialize to a stream
class ns1__ModifyFileDescriptionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canCreateField is a complexType.
/// class ns1__canCreateField operations:
/// - soap_new_ns1__canCreateField(soap*) allocate
/// - soap_new_ns1__canCreateField(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateField(soap*, ns1__canCreateField*) deserialize from a stream
/// - int soap_write_ns1__canCreateField(soap, ns1__canCreateField*) serialize to a stream
class ns1__canCreateField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":canCreateFieldResponse is a complexType.
/// class ns1__canCreateFieldResponse operations:
/// - soap_new_ns1__canCreateFieldResponse(soap*) allocate
/// - soap_new_ns1__canCreateFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateFieldResponse(soap*, ns1__canCreateFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__canCreateFieldResponse(soap, ns1__canCreateFieldResponse*) serialize to a stream
class ns1__canCreateFieldResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertData is a complexType.
/// class ns1__InsertData operations:
/// - soap_new_ns1__InsertData(soap*) allocate
/// - soap_new_ns1__InsertData(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertData(soap*, ns1__InsertData*) deserialize from a stream
/// - int soap_write_ns1__InsertData(soap, ns1__InsertData*) serialize to a stream
class ns1__InsertData : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element parentRevId of type xs:long.
    LONG64                               parentRevId                    1;	///< Required element.
/// Element inputData of type "http://ws.abx/":abxDataList.
    ns1__abxDataList*                    inputData                      0;	///< Optional element.
/// Element masterId of type xs:string.
    char*                                masterId                       0;	///< Optional element.
/// Element protocolUseData of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocolUseData                0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
/// Element avl of type "http://ws.abx/":abxVersioningList.
    ns1__abxVersioningList*              avl                            0;	///< Optional element.
};

/// "http://ws.abx/":abxDataList is a complexType.
/// class ns1__abxDataList operations:
/// - soap_new_ns1__abxDataList(soap*) allocate
/// - soap_new_ns1__abxDataList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxDataList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxDataList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxDataList(soap*, ns1__abxDataList*) deserialize from a stream
/// - int soap_write_ns1__abxDataList(soap, ns1__abxDataList*) serialize to a stream
class ns1__abxDataList : public xsd__anyType
{ public:
/// Size of array of ns1__abxData* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxData* of length 1..unbounded
    ns1__abxData*                       *dataList                       1;
};

/// "http://ws.abx/":abxData is a complexType.
/// class ns1__abxData operations:
/// - soap_new_ns1__abxData(soap*) allocate
/// - soap_new_ns1__abxData(soap*, int num) allocate array
/// - soap_new_req_ns1__abxData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxData(soap*, ns1__abxData*) deserialize from a stream
/// - int soap_write_ns1__abxData(soap, ns1__abxData*) serialize to a stream
class ns1__abxData : public xsd__anyType
{ public:
/// Size of data array is 1..unbounded
   $int                                  __sizedata                     1;
/// class _ns1__abxData_data operations:
/// - soap_new__ns1__abxData_data(soap*) allocate
/// - soap_new__ns1__abxData_data(soap*, int num) allocate array
/// - soap_new_req__ns1__abxData_data(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxData_data(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxData_data(soap*, _ns1__abxData_data*) deserialize from a stream
/// - int soap_write__ns1__abxData_data(soap, _ns1__abxData_data*) serialize to a stream
    class _ns1__abxData_data
    {
/// Element field of type xs:string.
    char*                                field                          1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
    }                                   *data                           1;
/// Element protocol of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocol                       1;	///< Required element.
/// Element totRecordFound of type xs:string.
    char*                                totRecordFound                 1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element securityId of type xs:string.
    char*                                securityId                     1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element masterDataId of type xs:string.
    char*                                masterDataId                   1;	///< Required element.
/// Size of detailData array is 1..unbounded
   $int                                  __sizedetailData               1;
/// class _ns1__abxData_detailData operations:
/// - soap_new__ns1__abxData_detailData(soap*) allocate
/// - soap_new__ns1__abxData_detailData(soap*, int num) allocate array
/// - soap_new_req__ns1__abxData_detailData(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxData_detailData(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxData_detailData(soap*, _ns1__abxData_detailData*) deserialize from a stream
/// - int soap_write__ns1__abxData_detailData(soap, _ns1__abxData_detailData*) serialize to a stream
    class _ns1__abxData_detailData
    {
/// Element detailInstanceName of type xs:string.
    char*                                detailInstanceName             1;	///< Required element.
/// Element detailDataId of type xs:string.
    char*                                detailDataId                   1;	///< Required element.
    }                                   *detailData                     1;
/// Element note of type xs:string.
    char*                                note                           1;	///< Required element.
/// Element allPermission of type "http://ws.abx/":abxAllPermission.
    ns1__abxAllPermission*               allPermission                  1;	///< Required element.
/// Element creationTimeStamp of type xs:dateTime.
    time_t                               creationTimeStamp              1;	///< Required element.
/// Element modifyTimeStamp of type xs:dateTime.
    time_t                               modifyTimeStamp                1;	///< Required element.
};

/// "http://ws.abx/":InsertDataResponse is a complexType.
/// class ns1__InsertDataResponse operations:
/// - soap_new_ns1__InsertDataResponse(soap*) allocate
/// - soap_new_ns1__InsertDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertDataResponse(soap*, ns1__InsertDataResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertDataResponse(soap, ns1__InsertDataResponse*) serialize to a stream
class ns1__InsertDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxDataResult is a complexType.
/// class ns1__abxDataResult operations:
/// - soap_new_ns1__abxDataResult(soap*) allocate
/// - soap_new_ns1__abxDataResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxDataResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxDataResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxDataResult(soap*, ns1__abxDataResult*) deserialize from a stream
/// - int soap_write_ns1__abxDataResult(soap, ns1__abxDataResult*) serialize to a stream
class ns1__abxDataResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxDataList.
    ns1__abxDataList*                    list                           1;	///< Required element.
/// Element optionalMessage of type xs:string.
    char*                                optionalMessage                1;	///< Required element.
};

/// "http://ws.abx/":UploadWFSendChunk is a complexType.
/// class ns1__UploadWFSendChunk operations:
/// - soap_new_ns1__UploadWFSendChunk(soap*) allocate
/// - soap_new_ns1__UploadWFSendChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadWFSendChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadWFSendChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadWFSendChunk(soap*, ns1__UploadWFSendChunk*) deserialize from a stream
/// - int soap_write_ns1__UploadWFSendChunk(soap, ns1__UploadWFSendChunk*) serialize to a stream
class ns1__UploadWFSendChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element objName of type xs:base64Binary.
    xsd__base64Binary*                   objName                        0;	///< Nillable pointer.
};

/// "http://ws.abx/":UploadWFSendChunkResponse is a complexType.
/// class ns1__UploadWFSendChunkResponse operations:
/// - soap_new_ns1__UploadWFSendChunkResponse(soap*) allocate
/// - soap_new_ns1__UploadWFSendChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadWFSendChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadWFSendChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadWFSendChunkResponse(soap*, ns1__UploadWFSendChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadWFSendChunkResponse(soap, ns1__UploadWFSendChunkResponse*) serialize to a stream
class ns1__UploadWFSendChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataLimit is a complexType.
/// class ns1__GetDataLimit operations:
/// - soap_new_ns1__GetDataLimit(soap*) allocate
/// - soap_new_ns1__GetDataLimit(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataLimit(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataLimit(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataLimit(soap*, ns1__GetDataLimit*) deserialize from a stream
/// - int soap_write_ns1__GetDataLimit(soap, ns1__GetDataLimit*) serialize to a stream
class ns1__GetDataLimit : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element numTotRecord of type xs:int.
    int                                  numTotRecord                   1;	///< Required element.
};

/// "http://ws.abx/":GetDataLimitResponse is a complexType.
/// class ns1__GetDataLimitResponse operations:
/// - soap_new_ns1__GetDataLimitResponse(soap*) allocate
/// - soap_new_ns1__GetDataLimitResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataLimitResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataLimitResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataLimitResponse(soap*, ns1__GetDataLimitResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataLimitResponse(soap, ns1__GetDataLimitResponse*) serialize to a stream
class ns1__GetDataLimitResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetNextWA is a complexType.
/// class ns1__DownloadGetNextWA operations:
/// - soap_new_ns1__DownloadGetNextWA(soap*) allocate
/// - soap_new_ns1__DownloadGetNextWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetNextWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetNextWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetNextWA(soap*, ns1__DownloadGetNextWA*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetNextWA(soap, ns1__DownloadGetNextWA*) serialize to a stream
class ns1__DownloadGetNextWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetNextWAResponse is a complexType.
/// class ns1__DownloadGetNextWAResponse operations:
/// - soap_new_ns1__DownloadGetNextWAResponse(soap*) allocate
/// - soap_new_ns1__DownloadGetNextWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetNextWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetNextWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetNextWAResponse(soap*, ns1__DownloadGetNextWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetNextWAResponse(soap, ns1__DownloadGetNextWAResponse*) serialize to a stream
class ns1__DownloadGetNextWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByName is a complexType.
/// class ns1__GetDataTPFileListByName operations:
/// - soap_new_ns1__GetDataTPFileListByName(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByName(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByName(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByName(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByName(soap*, ns1__GetDataTPFileListByName*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByName(soap, ns1__GetDataTPFileListByName*) serialize to a stream
class ns1__GetDataTPFileListByName : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element templateName of type xs:string.
    char*                                templateName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByNameResponse is a complexType.
/// class ns1__GetDataTPFileListByNameResponse operations:
/// - soap_new_ns1__GetDataTPFileListByNameResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByNameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByNameResponse(soap*, ns1__GetDataTPFileListByNameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByNameResponse(soap, ns1__GetDataTPFileListByNameResponse*) serialize to a stream
class ns1__GetDataTPFileListByNameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadUSFile is a complexType.
/// class ns1__DownloadUSFile operations:
/// - soap_new_ns1__DownloadUSFile(soap*) allocate
/// - soap_new_ns1__DownloadUSFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSFile(soap*, ns1__DownloadUSFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSFile(soap, ns1__DownloadUSFile*) serialize to a stream
class ns1__DownloadUSFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadUSFileResponse is a complexType.
/// class ns1__DownloadUSFileResponse operations:
/// - soap_new_ns1__DownloadUSFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadUSFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSFileResponse(soap*, ns1__DownloadUSFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSFileResponse(soap, ns1__DownloadUSFileResponse*) serialize to a stream
class ns1__DownloadUSFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpTPUploadPath is a complexType.
/// class ns1__SetTmpTPUploadPath operations:
/// - soap_new_ns1__SetTmpTPUploadPath(soap*) allocate
/// - soap_new_ns1__SetTmpTPUploadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpTPUploadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpTPUploadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpTPUploadPath(soap*, ns1__SetTmpTPUploadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpTPUploadPath(soap, ns1__SetTmpTPUploadPath*) serialize to a stream
class ns1__SetTmpTPUploadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpTPUploadPathResponse is a complexType.
/// class ns1__SetTmpTPUploadPathResponse operations:
/// - soap_new_ns1__SetTmpTPUploadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpTPUploadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpTPUploadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpTPUploadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpTPUploadPathResponse(soap*, ns1__SetTmpTPUploadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpTPUploadPathResponse(soap, ns1__SetTmpTPUploadPathResponse*) serialize to a stream
class ns1__SetTmpTPUploadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetGroupsListByUser is a complexType.
/// class ns1__GetGroupsListByUser operations:
/// - soap_new_ns1__GetGroupsListByUser(soap*) allocate
/// - soap_new_ns1__GetGroupsListByUser(soap*, int num) allocate array
/// - soap_new_req_ns1__GetGroupsListByUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetGroupsListByUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetGroupsListByUser(soap*, ns1__GetGroupsListByUser*) deserialize from a stream
/// - int soap_write_ns1__GetGroupsListByUser(soap, ns1__GetGroupsListByUser*) serialize to a stream
class ns1__GetGroupsListByUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":GetGroupsListByUserResponse is a complexType.
/// class ns1__GetGroupsListByUserResponse operations:
/// - soap_new_ns1__GetGroupsListByUserResponse(soap*) allocate
/// - soap_new_ns1__GetGroupsListByUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetGroupsListByUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetGroupsListByUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetGroupsListByUserResponse(soap*, ns1__GetGroupsListByUserResponse*) deserialize from a stream
/// - int soap_write_ns1__GetGroupsListByUserResponse(soap, ns1__GetGroupsListByUserResponse*) serialize to a stream
class ns1__GetGroupsListByUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadWFEndFile is a complexType.
/// class ns1__DownloadWFEndFile operations:
/// - soap_new_ns1__DownloadWFEndFile(soap*) allocate
/// - soap_new_ns1__DownloadWFEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadWFEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadWFEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadWFEndFile(soap*, ns1__DownloadWFEndFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadWFEndFile(soap, ns1__DownloadWFEndFile*) serialize to a stream
class ns1__DownloadWFEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadWFEndFileResponse is a complexType.
/// class ns1__DownloadWFEndFileResponse operations:
/// - soap_new_ns1__DownloadWFEndFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadWFEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadWFEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadWFEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadWFEndFileResponse(soap*, ns1__DownloadWFEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadWFEndFileResponse(soap, ns1__DownloadWFEndFileResponse*) serialize to a stream
class ns1__DownloadWFEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteTemplate is a complexType.
/// class ns1__canDeleteTemplate operations:
/// - soap_new_ns1__canDeleteTemplate(soap*) allocate
/// - soap_new_ns1__canDeleteTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteTemplate(soap*, ns1__canDeleteTemplate*) deserialize from a stream
/// - int soap_write_ns1__canDeleteTemplate(soap, ns1__canDeleteTemplate*) serialize to a stream
class ns1__canDeleteTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteTemplateResponse is a complexType.
/// class ns1__canDeleteTemplateResponse operations:
/// - soap_new_ns1__canDeleteTemplateResponse(soap*) allocate
/// - soap_new_ns1__canDeleteTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteTemplateResponse(soap*, ns1__canDeleteTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__canDeleteTemplateResponse(soap, ns1__canDeleteTemplateResponse*) serialize to a stream
class ns1__canDeleteTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSDKLog is a complexType.
/// class ns1__DeleteSDKLog operations:
/// - soap_new_ns1__DeleteSDKLog(soap*) allocate
/// - soap_new_ns1__DeleteSDKLog(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKLog(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKLog(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKLog(soap*, ns1__DeleteSDKLog*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKLog(soap, ns1__DeleteSDKLog*) serialize to a stream
class ns1__DeleteSDKLog : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element al of type "http://ws.abx/":abxLog.
    ns1__abxLog*                         al                             0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSDKLogResponse is a complexType.
/// class ns1__DeleteSDKLogResponse operations:
/// - soap_new_ns1__DeleteSDKLogResponse(soap*) allocate
/// - soap_new_ns1__DeleteSDKLogResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKLogResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKLogResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKLogResponse(soap*, ns1__DeleteSDKLogResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKLogResponse(soap, ns1__DeleteSDKLogResponse*) serialize to a stream
class ns1__DeleteSDKLogResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLogResult.
    ns1__abxLogResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CopyData is a complexType.
/// class ns1__CopyData operations:
/// - soap_new_ns1__CopyData(soap*) allocate
/// - soap_new_ns1__CopyData(soap*, int num) allocate array
/// - soap_new_req_ns1__CopyData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CopyData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CopyData(soap*, ns1__CopyData*) deserialize from a stream
/// - int soap_write_ns1__CopyData(soap, ns1__CopyData*) serialize to a stream
class ns1__CopyData : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element instanceNameDest of type xs:string.
    char*                                instanceNameDest               0;	///< Optional element.
/// Element document of type "http://ws.abx/":abxData.
    ns1__abxData*                        document                       0;	///< Optional element.
};

/// "http://ws.abx/":CopyDataResponse is a complexType.
/// class ns1__CopyDataResponse operations:
/// - soap_new_ns1__CopyDataResponse(soap*) allocate
/// - soap_new_ns1__CopyDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CopyDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CopyDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CopyDataResponse(soap*, ns1__CopyDataResponse*) deserialize from a stream
/// - int soap_write_ns1__CopyDataResponse(soap, ns1__CopyDataResponse*) serialize to a stream
class ns1__CopyDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTaskWatchFolder is a complexType.
/// class ns1__CreateSDKTaskWatchFolder operations:
/// - soap_new_ns1__CreateSDKTaskWatchFolder(soap*) allocate
/// - soap_new_ns1__CreateSDKTaskWatchFolder(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTaskWatchFolder(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTaskWatchFolder(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTaskWatchFolder(soap*, ns1__CreateSDKTaskWatchFolder*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTaskWatchFolder(soap, ns1__CreateSDKTaskWatchFolder*) serialize to a stream
class ns1__CreateSDKTaskWatchFolder : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element sdkTask of type "http://ws.abx/":abxSDKTask.
    ns1__abxSDKTask*                     sdkTask                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTaskWatchFolderResponse is a complexType.
/// class ns1__CreateSDKTaskWatchFolderResponse operations:
/// - soap_new_ns1__CreateSDKTaskWatchFolderResponse(soap*) allocate
/// - soap_new_ns1__CreateSDKTaskWatchFolderResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTaskWatchFolderResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTaskWatchFolderResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTaskWatchFolderResponse(soap*, ns1__CreateSDKTaskWatchFolderResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTaskWatchFolderResponse(soap, ns1__CreateSDKTaskWatchFolderResponse*) serialize to a stream
class ns1__CreateSDKTaskWatchFolderResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInfo is a complexType.
/// class ns1__GetArchiBoxInfo operations:
/// - soap_new_ns1__GetArchiBoxInfo(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInfo(soap*, ns1__GetArchiBoxInfo*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInfo(soap, ns1__GetArchiBoxInfo*) serialize to a stream
class ns1__GetArchiBoxInfo : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInfoResponse is a complexType.
/// class ns1__GetArchiBoxInfoResponse operations:
/// - soap_new_ns1__GetArchiBoxInfoResponse(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInfoResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInfoResponse(soap*, ns1__GetArchiBoxInfoResponse*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInfoResponse(soap, ns1__GetArchiBoxInfoResponse*) serialize to a stream
class ns1__GetArchiBoxInfoResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchiBoxDomainResult.
    ns1__abxArchiBoxDomainResult*        return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxArchiBoxDomainResult is a complexType.
/// class ns1__abxArchiBoxDomainResult operations:
/// - soap_new_ns1__abxArchiBoxDomainResult(soap*) allocate
/// - soap_new_ns1__abxArchiBoxDomainResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchiBoxDomainResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchiBoxDomainResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchiBoxDomainResult(soap*, ns1__abxArchiBoxDomainResult*) deserialize from a stream
/// - int soap_write_ns1__abxArchiBoxDomainResult(soap, ns1__abxArchiBoxDomainResult*) serialize to a stream
class ns1__abxArchiBoxDomainResult : public xsd__anyType
{ public:
/// Element list of type "http://ws.abx/":abxArchiBoxDomainList.
    ns1__abxArchiBoxDomainList*          list                           1;	///< Required element.
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
};

/// "http://ws.abx/":abxArchiBoxDomainList is a complexType.
/// class ns1__abxArchiBoxDomainList operations:
/// - soap_new_ns1__abxArchiBoxDomainList(soap*) allocate
/// - soap_new_ns1__abxArchiBoxDomainList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchiBoxDomainList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchiBoxDomainList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchiBoxDomainList(soap*, ns1__abxArchiBoxDomainList*) deserialize from a stream
/// - int soap_write_ns1__abxArchiBoxDomainList(soap, ns1__abxArchiBoxDomainList*) serialize to a stream
class ns1__abxArchiBoxDomainList : public xsd__anyType
{ public:
/// Size of array of ns1__abxArchiBoxDomain* is 1..unbounded
   $int                                  __sizearchiboxDomainList       1;
/// Pointer to array ns1__abxArchiBoxDomain* of length 1..unbounded
    ns1__abxArchiBoxDomain*             *archiboxDomainList             1;
};

/// "http://ws.abx/":abxArchiBoxDomain is a complexType.
/// class ns1__abxArchiBoxDomain operations:
/// - soap_new_ns1__abxArchiBoxDomain(soap*) allocate
/// - soap_new_ns1__abxArchiBoxDomain(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchiBoxDomain(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchiBoxDomain(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchiBoxDomain(soap*, ns1__abxArchiBoxDomain*) deserialize from a stream
/// - int soap_write_ns1__abxArchiBoxDomain(soap, ns1__abxArchiBoxDomain*) serialize to a stream
class ns1__abxArchiBoxDomain : public xsd__anyType
{ public:
/// Element matricola of type xs:string.
    char*                                matricola                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element ipaddress of type xs:string.
    char*                                ipaddress                      1;	///< Required element.
/// Element location of type xs:string.
    char*                                location                       1;	///< Required element.
/// Element release of type xs:string.
    char*                                release                        1;	///< Required element.
/// Element serverid of type xs:int.
    int                                  serverid                       1;	///< Required element.
};

/// "http://ws.abx/":Fk_getCountAllRecordByIndexDesc is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecordByIndexDesc operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap*, ns1__Fk_USCOREgetCountAllRecordByIndexDesc*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecordByIndexDesc(soap, ns1__Fk_USCOREgetCountAllRecordByIndexDesc*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecordByIndexDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fkp of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fkp                            0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getCountAllRecordByIndexDescResponse is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap*, ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse(soap, ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskFieldMapping is a complexType.
/// class ns1__GetSDKTaskFieldMapping operations:
/// - soap_new_ns1__GetSDKTaskFieldMapping(soap*) allocate
/// - soap_new_ns1__GetSDKTaskFieldMapping(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskFieldMapping(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskFieldMapping(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskFieldMapping(soap*, ns1__GetSDKTaskFieldMapping*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskFieldMapping(soap, ns1__GetSDKTaskFieldMapping*) serialize to a stream
class ns1__GetSDKTaskFieldMapping : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskFieldMappingResponse is a complexType.
/// class ns1__GetSDKTaskFieldMappingResponse operations:
/// - soap_new_ns1__GetSDKTaskFieldMappingResponse(soap*) allocate
/// - soap_new_ns1__GetSDKTaskFieldMappingResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskFieldMappingResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskFieldMappingResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskFieldMappingResponse(soap*, ns1__GetSDKTaskFieldMappingResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskFieldMappingResponse(soap, ns1__GetSDKTaskFieldMappingResponse*) serialize to a stream
class ns1__GetSDKTaskFieldMappingResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTPFileByCode is a complexType.
/// class ns1__DeleteTPFileByCode operations:
/// - soap_new_ns1__DeleteTPFileByCode(soap*) allocate
/// - soap_new_ns1__DeleteTPFileByCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTPFileByCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTPFileByCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTPFileByCode(soap*, ns1__DeleteTPFileByCode*) deserialize from a stream
/// - int soap_write_ns1__DeleteTPFileByCode(soap, ns1__DeleteTPFileByCode*) serialize to a stream
class ns1__DeleteTPFileByCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTPFileByCodeResponse is a complexType.
/// class ns1__DeleteTPFileByCodeResponse operations:
/// - soap_new_ns1__DeleteTPFileByCodeResponse(soap*) allocate
/// - soap_new_ns1__DeleteTPFileByCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTPFileByCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTPFileByCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTPFileByCodeResponse(soap*, ns1__DeleteTPFileByCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteTPFileByCodeResponse(soap, ns1__DeleteTPFileByCodeResponse*) serialize to a stream
class ns1__DeleteTPFileByCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":MoveData is a complexType.
/// class ns1__MoveData operations:
/// - soap_new_ns1__MoveData(soap*) allocate
/// - soap_new_ns1__MoveData(soap*, int num) allocate array
/// - soap_new_req_ns1__MoveData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__MoveData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__MoveData(soap*, ns1__MoveData*) deserialize from a stream
/// - int soap_write_ns1__MoveData(soap, ns1__MoveData*) serialize to a stream
class ns1__MoveData : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element instanceNameDest of type xs:string.
    char*                                instanceNameDest               0;	///< Optional element.
/// Element document of type "http://ws.abx/":abxData.
    ns1__abxData*                        document                       0;	///< Optional element.
};

/// "http://ws.abx/":MoveDataResponse is a complexType.
/// class ns1__MoveDataResponse operations:
/// - soap_new_ns1__MoveDataResponse(soap*) allocate
/// - soap_new_ns1__MoveDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__MoveDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__MoveDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__MoveDataResponse(soap*, ns1__MoveDataResponse*) deserialize from a stream
/// - int soap_write_ns1__MoveDataResponse(soap, ns1__MoveDataResponse*) serialize to a stream
class ns1__MoveDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUser is a complexType.
/// class ns1__ModifyUser operations:
/// - soap_new_ns1__ModifyUser(soap*) allocate
/// - soap_new_ns1__ModifyUser(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUser(soap*, ns1__ModifyUser*) deserialize from a stream
/// - int soap_write_ns1__ModifyUser(soap, ns1__ModifyUser*) serialize to a stream
class ns1__ModifyUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element user of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        user                           0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUserResponse is a complexType.
/// class ns1__ModifyUserResponse operations:
/// - soap_new_ns1__ModifyUserResponse(soap*) allocate
/// - soap_new_ns1__ModifyUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUserResponse(soap*, ns1__ModifyUserResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyUserResponse(soap, ns1__ModifyUserResponse*) serialize to a stream
class ns1__ModifyUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTasks is a complexType.
/// class ns1__GetSchedulerTasks operations:
/// - soap_new_ns1__GetSchedulerTasks(soap*) allocate
/// - soap_new_ns1__GetSchedulerTasks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTasks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTasks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTasks(soap*, ns1__GetSchedulerTasks*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTasks(soap, ns1__GetSchedulerTasks*) serialize to a stream
class ns1__GetSchedulerTasks : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskType of type xs:string.
    char*                                taskType                       0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTasksResponse is a complexType.
/// class ns1__GetSchedulerTasksResponse operations:
/// - soap_new_ns1__GetSchedulerTasksResponse(soap*) allocate
/// - soap_new_ns1__GetSchedulerTasksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTasksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTasksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTasksResponse(soap*, ns1__GetSchedulerTasksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTasksResponse(soap, ns1__GetSchedulerTasksResponse*) serialize to a stream
class ns1__GetSchedulerTasksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxSchedulerResult is a complexType.
/// class ns1__abxSchedulerResult operations:
/// - soap_new_ns1__abxSchedulerResult(soap*) allocate
/// - soap_new_ns1__abxSchedulerResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSchedulerResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSchedulerResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSchedulerResult(soap*, ns1__abxSchedulerResult*) deserialize from a stream
/// - int soap_write_ns1__abxSchedulerResult(soap, ns1__abxSchedulerResult*) serialize to a stream
class ns1__abxSchedulerResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxSchedulerTaskList.
    ns1__abxSchedulerTaskList*           list                           1;	///< Required element.
};

/// "http://ws.abx/":abxSchedulerTaskList is a complexType.
/// class ns1__abxSchedulerTaskList operations:
/// - soap_new_ns1__abxSchedulerTaskList(soap*) allocate
/// - soap_new_ns1__abxSchedulerTaskList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSchedulerTaskList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSchedulerTaskList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSchedulerTaskList(soap*, ns1__abxSchedulerTaskList*) deserialize from a stream
/// - int soap_write_ns1__abxSchedulerTaskList(soap, ns1__abxSchedulerTaskList*) serialize to a stream
class ns1__abxSchedulerTaskList : public xsd__anyType
{ public:
/// Size of array of ns1__abxSchedulerTask* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxSchedulerTask* of length 1..unbounded
    ns1__abxSchedulerTask*              *dataList                       1;
};

/// "http://ws.abx/":abxSchedulerTask is a complexType.
/// class ns1__abxSchedulerTask operations:
/// - soap_new_ns1__abxSchedulerTask(soap*) allocate
/// - soap_new_ns1__abxSchedulerTask(soap*, int num) allocate array
/// - soap_new_req_ns1__abxSchedulerTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxSchedulerTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxSchedulerTask(soap*, ns1__abxSchedulerTask*) deserialize from a stream
/// - int soap_write_ns1__abxSchedulerTask(soap, ns1__abxSchedulerTask*) serialize to a stream
class ns1__abxSchedulerTask : public xsd__anyType
{ public:
/// Size of abxSchedule array is 1..unbounded
   $int                                  __sizeabxSchedule              1;
/// class _ns1__abxSchedulerTask_abxSchedule operations:
/// - soap_new__ns1__abxSchedulerTask_abxSchedule(soap*) allocate
/// - soap_new__ns1__abxSchedulerTask_abxSchedule(soap*, int num) allocate array
/// - soap_new_req__ns1__abxSchedulerTask_abxSchedule(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxSchedulerTask_abxSchedule(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxSchedulerTask_abxSchedule(soap*, _ns1__abxSchedulerTask_abxSchedule*) deserialize from a stream
/// - int soap_write__ns1__abxSchedulerTask_abxSchedule(soap, _ns1__abxSchedulerTask_abxSchedule*) serialize to a stream
    class _ns1__abxSchedulerTask_abxSchedule
    {
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element startDate of type xs:string.
    char*                                startDate                      1;	///< Required element.
/// Element recurence of type xs:int.
    int                                  recurence                      1;	///< Required element.
/// Element isOneTime of type xs:boolean.
    bool                                 isOneTime                      1;	///< Required element.
/// Element daysOfTheWeek of type xs:string.
    char*                                daysOfTheWeek                  1;	///< Required element.
/// Element months of type xs:string.
    char*                                months                         1;	///< Required element.
/// Element daysOfTheMonth of type xs:string.
    char*                                daysOfTheMonth                 1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element lastRun of type xs:string.
    char*                                lastRun                        1;	///< Required element.
/// Element option of type xs:string.
    char*                                option                         1;	///< Required element.
/// Element audit_message_code_id of type xs:string.
    char*                                audit_USCOREmessage_USCOREcode_USCOREid 0;	///< Optional element.
/// Element optional_message of type xs:string.
    char*                                optional_USCOREmessage         0;	///< Optional element.
    }                                   *abxSchedule                    1;
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element configXML of type xs:string.
    char*                                configXML                      1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element appTaskId of type xs:string.
    char*                                appTaskId                      0;	///< Optional element.
};

/// "http://ws.abx/":ModifyField is a complexType.
/// class ns1__ModifyField operations:
/// - soap_new_ns1__ModifyField(soap*) allocate
/// - soap_new_ns1__ModifyField(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyField(soap*, ns1__ModifyField*) deserialize from a stream
/// - int soap_write_ns1__ModifyField(soap, ns1__ModifyField*) serialize to a stream
class ns1__ModifyField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Field2Update of type "http://ws.abx/":abxField.
    ns1__abxField*                       Field2Update                   0;	///< Optional element.
/// Element recordsArray of type "http://ws.abx/":abxCombo.
    ns1__abxCombo*                       recordsArray                   0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element optionGetCache of type xs:boolean.
    bool                                 optionGetCache                 1;	///< Required element.
/// Element optionSetDesc of type xs:boolean.
    bool                                 optionSetDesc                  1;	///< Required element.
};

/// "http://ws.abx/":abxCombo is a complexType.
/// class ns1__abxCombo operations:
/// - soap_new_ns1__abxCombo(soap*) allocate
/// - soap_new_ns1__abxCombo(soap*, int num) allocate array
/// - soap_new_req_ns1__abxCombo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxCombo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxCombo(soap*, ns1__abxCombo*) deserialize from a stream
/// - int soap_write_ns1__abxCombo(soap, ns1__abxCombo*) serialize to a stream
class ns1__abxCombo : public xsd__anyType
{ public:
/// Size of array of ns1__abxComboRecord* is 1..unbounded
   $int                                  __sizelistRecords              1;
/// Pointer to array ns1__abxComboRecord* of length 1..unbounded
    ns1__abxComboRecord*                *listRecords                    1;
};

/// "http://ws.abx/":abxComboRecord is a complexType.
/// class ns1__abxComboRecord operations:
/// - soap_new_ns1__abxComboRecord(soap*) allocate
/// - soap_new_ns1__abxComboRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__abxComboRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxComboRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxComboRecord(soap*, ns1__abxComboRecord*) deserialize from a stream
/// - int soap_write_ns1__abxComboRecord(soap, ns1__abxComboRecord*) serialize to a stream
class ns1__abxComboRecord : public xsd__anyType
{ public:
/// Element idRecord of type xs:string.
    char*                                idRecord                       1;	///< Required element.
/// Element fieldTypeId of type xs:string.
    char*                                fieldTypeId                    1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element default of type xs:boolean.
    bool                                 default_                       1;	///< Required element.
};

/// "http://ws.abx/":ModifyFieldResponse is a complexType.
/// class ns1__ModifyFieldResponse operations:
/// - soap_new_ns1__ModifyFieldResponse(soap*) allocate
/// - soap_new_ns1__ModifyFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyFieldResponse(soap*, ns1__ModifyFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyFieldResponse(soap, ns1__ModifyFieldResponse*) serialize to a stream
class ns1__ModifyFieldResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFieldResult.
    ns1__abxFieldResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ExistUserByUsername is a complexType.
/// class ns1__ExistUserByUsername operations:
/// - soap_new_ns1__ExistUserByUsername(soap*) allocate
/// - soap_new_ns1__ExistUserByUsername(soap*, int num) allocate array
/// - soap_new_req_ns1__ExistUserByUsername(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ExistUserByUsername(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ExistUserByUsername(soap*, ns1__ExistUserByUsername*) deserialize from a stream
/// - int soap_write_ns1__ExistUserByUsername(soap, ns1__ExistUserByUsername*) serialize to a stream
class ns1__ExistUserByUsername : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":ExistUserByUsernameResponse is a complexType.
/// class ns1__ExistUserByUsernameResponse operations:
/// - soap_new_ns1__ExistUserByUsernameResponse(soap*) allocate
/// - soap_new_ns1__ExistUserByUsernameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ExistUserByUsernameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ExistUserByUsernameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ExistUserByUsernameResponse(soap*, ns1__ExistUserByUsernameResponse*) deserialize from a stream
/// - int soap_write_ns1__ExistUserByUsernameResponse(soap, ns1__ExistUserByUsernameResponse*) serialize to a stream
class ns1__ExistUserByUsernameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByContId is a complexType.
/// class ns1__GetDownloadDetailByContId operations:
/// - soap_new_ns1__GetDownloadDetailByContId(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByContId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByContId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByContId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByContId(soap*, ns1__GetDownloadDetailByContId*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByContId(soap, ns1__GetDownloadDetailByContId*) serialize to a stream
class ns1__GetDownloadDetailByContId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByContIdResponse is a complexType.
/// class ns1__GetDownloadDetailByContIdResponse operations:
/// - soap_new_ns1__GetDownloadDetailByContIdResponse(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByContIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByContIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByContIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByContIdResponse(soap*, ns1__GetDownloadDetailByContIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByContIdResponse(soap, ns1__GetDownloadDetailByContIdResponse*) serialize to a stream
class ns1__GetDownloadDetailByContIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUserListActiveDirectory is a complexType.
/// class ns1__GetUserListActiveDirectory operations:
/// - soap_new_ns1__GetUserListActiveDirectory(soap*) allocate
/// - soap_new_ns1__GetUserListActiveDirectory(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserListActiveDirectory(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserListActiveDirectory(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserListActiveDirectory(soap*, ns1__GetUserListActiveDirectory*) deserialize from a stream
/// - int soap_write_ns1__GetUserListActiveDirectory(soap, ns1__GetUserListActiveDirectory*) serialize to a stream
class ns1__GetUserListActiveDirectory : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element userField of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        userField                      0;	///< Optional element.
};

/// "http://ws.abx/":GetUserListActiveDirectoryResponse is a complexType.
/// class ns1__GetUserListActiveDirectoryResponse operations:
/// - soap_new_ns1__GetUserListActiveDirectoryResponse(soap*) allocate
/// - soap_new_ns1__GetUserListActiveDirectoryResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserListActiveDirectoryResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserListActiveDirectoryResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserListActiveDirectoryResponse(soap*, ns1__GetUserListActiveDirectoryResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUserListActiveDirectoryResponse(soap, ns1__GetUserListActiveDirectoryResponse*) serialize to a stream
class ns1__GetUserListActiveDirectoryResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTaskFieldMapping is a complexType.
/// class ns1__CreateSDKTaskFieldMapping operations:
/// - soap_new_ns1__CreateSDKTaskFieldMapping(soap*) allocate
/// - soap_new_ns1__CreateSDKTaskFieldMapping(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTaskFieldMapping(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTaskFieldMapping(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTaskFieldMapping(soap*, ns1__CreateSDKTaskFieldMapping*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTaskFieldMapping(soap, ns1__CreateSDKTaskFieldMapping*) serialize to a stream
class ns1__CreateSDKTaskFieldMapping : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element sdkTask of type "http://ws.abx/":abxSDKTask.
    ns1__abxSDKTask*                     sdkTask                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTaskFieldMappingResponse is a complexType.
/// class ns1__CreateSDKTaskFieldMappingResponse operations:
/// - soap_new_ns1__CreateSDKTaskFieldMappingResponse(soap*) allocate
/// - soap_new_ns1__CreateSDKTaskFieldMappingResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTaskFieldMappingResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTaskFieldMappingResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTaskFieldMappingResponse(soap*, ns1__CreateSDKTaskFieldMappingResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTaskFieldMappingResponse(soap, ns1__CreateSDKTaskFieldMappingResponse*) serialize to a stream
class ns1__CreateSDKTaskFieldMappingResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":RegenerateDynOrg is a complexType.
/// class ns1__RegenerateDynOrg operations:
/// - soap_new_ns1__RegenerateDynOrg(soap*) allocate
/// - soap_new_ns1__RegenerateDynOrg(soap*, int num) allocate array
/// - soap_new_req_ns1__RegenerateDynOrg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RegenerateDynOrg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RegenerateDynOrg(soap*, ns1__RegenerateDynOrg*) deserialize from a stream
/// - int soap_write_ns1__RegenerateDynOrg(soap, ns1__RegenerateDynOrg*) serialize to a stream
class ns1__RegenerateDynOrg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element DynorgParam of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          DynorgParam                    0;	///< Optional element.
};

/// "http://ws.abx/":RegenerateDynOrgResponse is a complexType.
/// class ns1__RegenerateDynOrgResponse operations:
/// - soap_new_ns1__RegenerateDynOrgResponse(soap*) allocate
/// - soap_new_ns1__RegenerateDynOrgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__RegenerateDynOrgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RegenerateDynOrgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RegenerateDynOrgResponse(soap*, ns1__RegenerateDynOrgResponse*) deserialize from a stream
/// - int soap_write_ns1__RegenerateDynOrgResponse(soap, ns1__RegenerateDynOrgResponse*) serialize to a stream
class ns1__RegenerateDynOrgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicRuleResult.
    ns3__abxDynamicRuleResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadUSGetChunk is a complexType.
/// class ns1__DownloadUSGetChunk operations:
/// - soap_new_ns1__DownloadUSGetChunk(soap*) allocate
/// - soap_new_ns1__DownloadUSGetChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSGetChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSGetChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSGetChunk(soap*, ns1__DownloadUSGetChunk*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSGetChunk(soap, ns1__DownloadUSGetChunk*) serialize to a stream
class ns1__DownloadUSGetChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
/// Element oset of type xs:string.
    char*                                oset                           0;	///< Optional element.
};

/// "http://ws.abx/":DownloadUSGetChunkResponse is a complexType.
/// class ns1__DownloadUSGetChunkResponse operations:
/// - soap_new_ns1__DownloadUSGetChunkResponse(soap*) allocate
/// - soap_new_ns1__DownloadUSGetChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadUSGetChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadUSGetChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadUSGetChunkResponse(soap*, ns1__DownloadUSGetChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadUSGetChunkResponse(soap, ns1__DownloadUSGetChunkResponse*) serialize to a stream
class ns1__DownloadUSGetChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTaskByTaskTypeId is a complexType.
/// class ns1__GetSchedulerTaskByTaskTypeId operations:
/// - soap_new_ns1__GetSchedulerTaskByTaskTypeId(soap*) allocate
/// - soap_new_ns1__GetSchedulerTaskByTaskTypeId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTaskByTaskTypeId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTaskByTaskTypeId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTaskByTaskTypeId(soap*, ns1__GetSchedulerTaskByTaskTypeId*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTaskByTaskTypeId(soap, ns1__GetSchedulerTaskByTaskTypeId*) serialize to a stream
class ns1__GetSchedulerTaskByTaskTypeId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskType of type xs:string.
    char*                                taskType                       0;	///< Optional element.
/// Element taskTypeId of type xs:string.
    char*                                taskTypeId                     0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTaskByTaskTypeIdResponse is a complexType.
/// class ns1__GetSchedulerTaskByTaskTypeIdResponse operations:
/// - soap_new_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap*) allocate
/// - soap_new_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap*, ns1__GetSchedulerTaskByTaskTypeIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTaskByTaskTypeIdResponse(soap, ns1__GetSchedulerTaskByTaskTypeIdResponse*) serialize to a stream
class ns1__GetSchedulerTaskByTaskTypeIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByNameDesc is a complexType.
/// class ns1__GetProtocolByNameDesc operations:
/// - soap_new_ns1__GetProtocolByNameDesc(soap*) allocate
/// - soap_new_ns1__GetProtocolByNameDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByNameDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByNameDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByNameDesc(soap*, ns1__GetProtocolByNameDesc*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByNameDesc(soap, ns1__GetProtocolByNameDesc*) serialize to a stream
class ns1__GetProtocolByNameDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolDesc of type xs:string.
    char*                                protocolDesc                   0;	///< Optional element.
/// Element protocolName of type xs:string.
    char*                                protocolName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByNameDescResponse is a complexType.
/// class ns1__GetProtocolByNameDescResponse operations:
/// - soap_new_ns1__GetProtocolByNameDescResponse(soap*) allocate
/// - soap_new_ns1__GetProtocolByNameDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByNameDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByNameDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByNameDescResponse(soap*, ns1__GetProtocolByNameDescResponse*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByNameDescResponse(soap, ns1__GetProtocolByNameDescResponse*) serialize to a stream
class ns1__GetProtocolByNameDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteRaccoglitore is a complexType.
/// class ns1__canDeleteRaccoglitore operations:
/// - soap_new_ns1__canDeleteRaccoglitore(soap*) allocate
/// - soap_new_ns1__canDeleteRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteRaccoglitore(soap*, ns1__canDeleteRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__canDeleteRaccoglitore(soap, ns1__canDeleteRaccoglitore*) serialize to a stream
class ns1__canDeleteRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteRaccoglitoreResponse is a complexType.
/// class ns1__canDeleteRaccoglitoreResponse operations:
/// - soap_new_ns1__canDeleteRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__canDeleteRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteRaccoglitoreResponse(soap*, ns1__canDeleteRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__canDeleteRaccoglitoreResponse(soap, ns1__canDeleteRaccoglitoreResponse*) serialize to a stream
class ns1__canDeleteRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDynorgTypeList is a complexType.
/// class ns1__GetDynorgTypeList operations:
/// - soap_new_ns1__GetDynorgTypeList(soap*) allocate
/// - soap_new_ns1__GetDynorgTypeList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDynorgTypeList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDynorgTypeList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDynorgTypeList(soap*, ns1__GetDynorgTypeList*) deserialize from a stream
/// - int soap_write_ns1__GetDynorgTypeList(soap, ns1__GetDynorgTypeList*) serialize to a stream
class ns1__GetDynorgTypeList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDynorgTypeListResponse is a complexType.
/// class ns1__GetDynorgTypeListResponse operations:
/// - soap_new_ns1__GetDynorgTypeListResponse(soap*) allocate
/// - soap_new_ns1__GetDynorgTypeListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDynorgTypeListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDynorgTypeListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDynorgTypeListResponse(soap*, ns1__GetDynorgTypeListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDynorgTypeListResponse(soap, ns1__GetDynorgTypeListResponse*) serialize to a stream
class ns1__GetDynorgTypeListResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynorgTypeResult.
    ns3__abxDynorgTypeResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTemplateList is a complexType.
/// class ns1__GetTemplateList operations:
/// - soap_new_ns1__GetTemplateList(soap*) allocate
/// - soap_new_ns1__GetTemplateList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTemplateList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTemplateList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTemplateList(soap*, ns1__GetTemplateList*) deserialize from a stream
/// - int soap_write_ns1__GetTemplateList(soap, ns1__GetTemplateList*) serialize to a stream
class ns1__GetTemplateList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetTemplateListResponse is a complexType.
/// class ns1__GetTemplateListResponse operations:
/// - soap_new_ns1__GetTemplateListResponse(soap*) allocate
/// - soap_new_ns1__GetTemplateListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTemplateListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTemplateListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTemplateListResponse(soap*, ns1__GetTemplateListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTemplateListResponse(soap, ns1__GetTemplateListResponse*) serialize to a stream
class ns1__GetTemplateListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTemplateResult.
    ns1__abxTemplateResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadUSSendChunk is a complexType.
/// class ns1__UploadUSSendChunk operations:
/// - soap_new_ns1__UploadUSSendChunk(soap*) allocate
/// - soap_new_ns1__UploadUSSendChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSSendChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSSendChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSSendChunk(soap*, ns1__UploadUSSendChunk*) deserialize from a stream
/// - int soap_write_ns1__UploadUSSendChunk(soap, ns1__UploadUSSendChunk*) serialize to a stream
class ns1__UploadUSSendChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element objName of type xs:base64Binary.
    xsd__base64Binary*                   objName                        0;	///< Nillable pointer.
};

/// "http://ws.abx/":UploadUSSendChunkResponse is a complexType.
/// class ns1__UploadUSSendChunkResponse operations:
/// - soap_new_ns1__UploadUSSendChunkResponse(soap*) allocate
/// - soap_new_ns1__UploadUSSendChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSSendChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSSendChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSSendChunkResponse(soap*, ns1__UploadUSSendChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadUSSendChunkResponse(soap, ns1__UploadUSSendChunkResponse*) serialize to a stream
class ns1__UploadUSSendChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceNameFromLinks is a complexType.
/// class ns1__GetInstanceNameFromLinks operations:
/// - soap_new_ns1__GetInstanceNameFromLinks(soap*) allocate
/// - soap_new_ns1__GetInstanceNameFromLinks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceNameFromLinks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceNameFromLinks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceNameFromLinks(soap*, ns1__GetInstanceNameFromLinks*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceNameFromLinks(soap, ns1__GetInstanceNameFromLinks*) serialize to a stream
class ns1__GetInstanceNameFromLinks : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceNameFromLinksResponse is a complexType.
/// class ns1__GetInstanceNameFromLinksResponse operations:
/// - soap_new_ns1__GetInstanceNameFromLinksResponse(soap*) allocate
/// - soap_new_ns1__GetInstanceNameFromLinksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceNameFromLinksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceNameFromLinksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceNameFromLinksResponse(soap*, ns1__GetInstanceNameFromLinksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceNameFromLinksResponse(soap, ns1__GetInstanceNameFromLinksResponse*) serialize to a stream
class ns1__GetInstanceNameFromLinksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTreeForSecurity is a complexType.
/// class ns1__GetTreeForSecurity operations:
/// - soap_new_ns1__GetTreeForSecurity(soap*) allocate
/// - soap_new_ns1__GetTreeForSecurity(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTreeForSecurity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTreeForSecurity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTreeForSecurity(soap*, ns1__GetTreeForSecurity*) deserialize from a stream
/// - int soap_write_ns1__GetTreeForSecurity(soap, ns1__GetTreeForSecurity*) serialize to a stream
class ns1__GetTreeForSecurity : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element param of type "http://ws.abx/":abxTreeParam.
    ns1__abxTreeParam*                   param                          0;	///< Optional element.
};

/// "http://ws.abx/":abxTreeParam is a complexType.
/// class ns1__abxTreeParam operations:
/// - soap_new_ns1__abxTreeParam(soap*) allocate
/// - soap_new_ns1__abxTreeParam(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTreeParam(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTreeParam(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTreeParam(soap*, ns1__abxTreeParam*) deserialize from a stream
/// - int soap_write_ns1__abxTreeParam(soap, ns1__abxTreeParam*) serialize to a stream
class ns1__abxTreeParam : public xsd__anyType
{ public:
/// Element revisionID of type xs:int.
    int                                  revisionID                     1;	///< Required element.
/// Element treeStartHexInstanceID of type xs:string.
    char*                                treeStartHexInstanceID         1;	///< Required element.
/// Element treeStartInstancePathname of type xs:string.
    char*                                treeStartInstancePathname      1;	///< Required element.
/// Element treeDeepLevelNumberDown of type xs:int.
    int                                  treeDeepLevelNumberDown        1;	///< Required element.
/// Element treeNumberElementsDown of type xs:int.
    int                                  treeNumberElementsDown         1;	///< Required element.
/// Size of objvect array is 1..unbounded
   $int                                  __sizeobjvect                  1;
/// class _ns1__abxTreeParam_objvect operations:
/// - soap_new__ns1__abxTreeParam_objvect(soap*) allocate
/// - soap_new__ns1__abxTreeParam_objvect(soap*, int num) allocate array
/// - soap_new_req__ns1__abxTreeParam_objvect(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxTreeParam_objvect(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxTreeParam_objvect(soap*, _ns1__abxTreeParam_objvect*) deserialize from a stream
/// - int soap_write__ns1__abxTreeParam_objvect(soap, _ns1__abxTreeParam_objvect*) serialize to a stream
    class _ns1__abxTreeParam_objvect
    {
/// Element objname of type xs:string.
    char*                                objname                        1;	///< Required element.
    }                                   *objvect                        1;
};

/// "http://ws.abx/":GetTreeForSecurityResponse is a complexType.
/// class ns1__GetTreeForSecurityResponse operations:
/// - soap_new_ns1__GetTreeForSecurityResponse(soap*) allocate
/// - soap_new_ns1__GetTreeForSecurityResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTreeForSecurityResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTreeForSecurityResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTreeForSecurityResponse(soap*, ns1__GetTreeForSecurityResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTreeForSecurityResponse(soap, ns1__GetTreeForSecurityResponse*) serialize to a stream
class ns1__GetTreeForSecurityResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTreeResult.
    ns1__abxTreeResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxTreeResult is a complexType.
/// class ns1__abxTreeResult operations:
/// - soap_new_ns1__abxTreeResult(soap*) allocate
/// - soap_new_ns1__abxTreeResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTreeResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTreeResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTreeResult(soap*, ns1__abxTreeResult*) deserialize from a stream
/// - int soap_write_ns1__abxTreeResult(soap, ns1__abxTreeResult*) serialize to a stream
class ns1__abxTreeResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element tree of type "http://ws.abx/":abxTree.
    ns1__abxTree*                        tree                           1;	///< Required element.
};

/// "http://ws.abx/":abxTree is a complexType.
/// class ns1__abxTree operations:
/// - soap_new_ns1__abxTree(soap*) allocate
/// - soap_new_ns1__abxTree(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTree(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTree(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTree(soap*, ns1__abxTree*) deserialize from a stream
/// - int soap_write_ns1__abxTree(soap, ns1__abxTree*) serialize to a stream
class ns1__abxTree : public xsd__anyType
{ public:
/// Element queryParam of type "http://ws.abx/":abxTreeParam.
    ns1__abxTreeParam*                   queryParam                     1;	///< Required element.
/// Element tree of type "http://ws.abx/":abxTreeElement.
    ns1__abxTreeElement*                 tree                           1;	///< Required element.
};

/// "http://ws.abx/":abxTreeElement is a complexType.
/// class ns1__abxTreeElement operations:
/// - soap_new_ns1__abxTreeElement(soap*) allocate
/// - soap_new_ns1__abxTreeElement(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTreeElement(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTreeElement(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTreeElement(soap*, ns1__abxTreeElement*) deserialize from a stream
/// - int soap_write_ns1__abxTreeElement(soap, ns1__abxTreeElement*) serialize to a stream
class ns1__abxTreeElement : public xsd__anyType
{ public:
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element HexInstanceID of type xs:string.
    char*                                HexInstanceID                  1;	///< Required element.
/// Element InstanceDescription of type xs:string.
    char*                                InstanceDescription            1;	///< Required element.
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element creationTimestamp of type xs:dateTime.
    time_t                               creationTimestamp              1;	///< Required element.
/// Element revisionID of type xs:int.
    int                                  revisionID                     1;	///< Required element.
/// Element isLastRevision of type xs:boolean.
    bool                                 isLastRevision                 1;	///< Required element.
/// Element disableRevision of type xs:boolean.
    bool                                 disableRevision                1;	///< Required element.
/// Size of array of ns1__abxTreeElement* is 1..unbounded
   $int                                  __sizesubelements              1;
/// Pointer to array ns1__abxTreeElement* of length 1..unbounded
    ns1__abxTreeElement*                *subelements                    1;
/// Element dataAvailable of type xs:boolean.
    bool                                 dataAvailable                  1;	///< Required element.
/// Element templateName of type xs:string.
    char*                                templateName                   1;	///< Required element.
/// Element hideContainer of type xs:boolean.
    bool                                 hideContainer                  1;	///< Required element.
/// Element colorDisplay of type xs:string.
    char*                                colorDisplay                   1;	///< Required element.
/// Element containerDetails of type "http://ws.abx/":abxContainer.
    ns1__abxContainer*                   containerDetails               1;	///< Required element.
/// Element templateDetails of type "http://ws.abx/":abxTemplate.
    ns1__abxTemplate*                    templateDetails                1;	///< Required element.
/// Element permission of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permission                     1;	///< Required element.
/// Element allPermission of type "http://ws.abx/":abxAllPermission.
    ns1__abxAllPermission*               allPermission                  1;	///< Required element.
/// Element countDocument of type xs:string.
    char*                                countDocument                  1;	///< Required element.
};

/// "http://ws.abx/":Logout is a complexType.
/// class ns1__Logout operations:
/// - soap_new_ns1__Logout(soap*) allocate
/// - soap_new_ns1__Logout(soap*, int num) allocate array
/// - soap_new_req_ns1__Logout(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Logout(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Logout(soap*, ns1__Logout*) deserialize from a stream
/// - int soap_write_ns1__Logout(soap, ns1__Logout*) serialize to a stream
class ns1__Logout : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":LogoutResponse is a complexType.
/// class ns1__LogoutResponse operations:
/// - soap_new_ns1__LogoutResponse(soap*) allocate
/// - soap_new_ns1__LogoutResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__LogoutResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__LogoutResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__LogoutResponse(soap*, ns1__LogoutResponse*) deserialize from a stream
/// - int soap_write_ns1__LogoutResponse(soap, ns1__LogoutResponse*) serialize to a stream
class ns1__LogoutResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLoginResult.
    ns1__abxLoginResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteGroup is a complexType.
/// class ns1__DeleteGroup operations:
/// - soap_new_ns1__DeleteGroup(soap*) allocate
/// - soap_new_ns1__DeleteGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteGroup(soap*, ns1__DeleteGroup*) deserialize from a stream
/// - int soap_write_ns1__DeleteGroup(soap, ns1__DeleteGroup*) serialize to a stream
class ns1__DeleteGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
};

/// "http://ws.abx/":DeleteGroupResponse is a complexType.
/// class ns1__DeleteGroupResponse operations:
/// - soap_new_ns1__DeleteGroupResponse(soap*) allocate
/// - soap_new_ns1__DeleteGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteGroupResponse(soap*, ns1__DeleteGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteGroupResponse(soap, ns1__DeleteGroupResponse*) serialize to a stream
class ns1__DeleteGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGroupResult.
    ns1__abxGroupResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxGroupResult is a complexType.
/// class ns1__abxGroupResult operations:
/// - soap_new_ns1__abxGroupResult(soap*) allocate
/// - soap_new_ns1__abxGroupResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGroupResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGroupResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGroupResult(soap*, ns1__abxGroupResult*) deserialize from a stream
/// - int soap_write_ns1__abxGroupResult(soap, ns1__abxGroupResult*) serialize to a stream
class ns1__abxGroupResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxGroupList.
    ns1__abxGroupList*                   list                           1;	///< Required element.
};

/// "http://ws.abx/":GetFileListByCodeForSecurity is a complexType.
/// class ns1__GetFileListByCodeForSecurity operations:
/// - soap_new_ns1__GetFileListByCodeForSecurity(soap*) allocate
/// - soap_new_ns1__GetFileListByCodeForSecurity(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileListByCodeForSecurity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileListByCodeForSecurity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileListByCodeForSecurity(soap*, ns1__GetFileListByCodeForSecurity*) deserialize from a stream
/// - int soap_write_ns1__GetFileListByCodeForSecurity(soap, ns1__GetFileListByCodeForSecurity*) serialize to a stream
class ns1__GetFileListByCodeForSecurity : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":GetFileListByCodeForSecurityResponse is a complexType.
/// class ns1__GetFileListByCodeForSecurityResponse operations:
/// - soap_new_ns1__GetFileListByCodeForSecurityResponse(soap*) allocate
/// - soap_new_ns1__GetFileListByCodeForSecurityResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileListByCodeForSecurityResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileListByCodeForSecurityResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileListByCodeForSecurityResponse(soap*, ns1__GetFileListByCodeForSecurityResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFileListByCodeForSecurityResponse(soap, ns1__GetFileListByCodeForSecurityResponse*) serialize to a stream
class ns1__GetFileListByCodeForSecurityResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetFileAvailable is a complexType.
/// class ns1__SetFileAvailable operations:
/// - soap_new_ns1__SetFileAvailable(soap*) allocate
/// - soap_new_ns1__SetFileAvailable(soap*, int num) allocate array
/// - soap_new_req_ns1__SetFileAvailable(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetFileAvailable(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetFileAvailable(soap*, ns1__SetFileAvailable*) deserialize from a stream
/// - int soap_write_ns1__SetFileAvailable(soap, ns1__SetFileAvailable*) serialize to a stream
class ns1__SetFileAvailable : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":SetFileAvailableResponse is a complexType.
/// class ns1__SetFileAvailableResponse operations:
/// - soap_new_ns1__SetFileAvailableResponse(soap*) allocate
/// - soap_new_ns1__SetFileAvailableResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetFileAvailableResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetFileAvailableResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetFileAvailableResponse(soap*, ns1__SetFileAvailableResponse*) deserialize from a stream
/// - int soap_write_ns1__SetFileAvailableResponse(soap, ns1__SetFileAvailableResponse*) serialize to a stream
class ns1__SetFileAvailableResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getCountAllRecord is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecord operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecord(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecord(soap*, ns1__Fk_USCOREgetCountAllRecord*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecord(soap, ns1__Fk_USCOREgetCountAllRecord*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecord : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getCountAllRecordResponse is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecordResponse operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecordResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecordResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecordResponse(soap*, ns1__Fk_USCOREgetCountAllRecordResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecordResponse(soap, ns1__Fk_USCOREgetCountAllRecordResponse*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecordResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetExpression is a complexType.
/// class ns1__GetExpression operations:
/// - soap_new_ns1__GetExpression(soap*) allocate
/// - soap_new_ns1__GetExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__GetExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetExpression(soap*, ns1__GetExpression*) deserialize from a stream
/// - int soap_write_ns1__GetExpression(soap, ns1__GetExpression*) serialize to a stream
class ns1__GetExpression : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element expressionName of type xs:string.
    char*                                expressionName                 0;	///< Optional element.
};

/// "http://ws.abx/":GetExpressionResponse is a complexType.
/// class ns1__GetExpressionResponse operations:
/// - soap_new_ns1__GetExpressionResponse(soap*) allocate
/// - soap_new_ns1__GetExpressionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetExpressionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetExpressionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetExpressionResponse(soap*, ns1__GetExpressionResponse*) deserialize from a stream
/// - int soap_write_ns1__GetExpressionResponse(soap, ns1__GetExpressionResponse*) serialize to a stream
class ns1__GetExpressionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteField is a complexType.
/// class ns1__DeleteField operations:
/// - soap_new_ns1__DeleteField(soap*) allocate
/// - soap_new_ns1__DeleteField(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteField(soap*, ns1__DeleteField*) deserialize from a stream
/// - int soap_write_ns1__DeleteField(soap, ns1__DeleteField*) serialize to a stream
class ns1__DeleteField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element FieldName of type xs:string.
    char*                                FieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFieldResponse is a complexType.
/// class ns1__DeleteFieldResponse operations:
/// - soap_new_ns1__DeleteFieldResponse(soap*) allocate
/// - soap_new_ns1__DeleteFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFieldResponse(soap*, ns1__DeleteFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFieldResponse(soap, ns1__DeleteFieldResponse*) serialize to a stream
class ns1__DeleteFieldResponse : public xsd__anyType
{ public:
/// Element return of type xs:int.
    int                                  return_                        1;	///< Required element.
};

/// "http://ws.abx/":GetContSignByUser is a complexType.
/// class ns1__GetContSignByUser operations:
/// - soap_new_ns1__GetContSignByUser(soap*) allocate
/// - soap_new_ns1__GetContSignByUser(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContSignByUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContSignByUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContSignByUser(soap*, ns1__GetContSignByUser*) deserialize from a stream
/// - int soap_write_ns1__GetContSignByUser(soap, ns1__GetContSignByUser*) serialize to a stream
class ns1__GetContSignByUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
};

/// "http://ws.abx/":GetContSignByUserResponse is a complexType.
/// class ns1__GetContSignByUserResponse operations:
/// - soap_new_ns1__GetContSignByUserResponse(soap*) allocate
/// - soap_new_ns1__GetContSignByUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContSignByUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContSignByUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContSignByUserResponse(soap*, ns1__GetContSignByUserResponse*) deserialize from a stream
/// - int soap_write_ns1__GetContSignByUserResponse(soap, ns1__GetContSignByUserResponse*) serialize to a stream
class ns1__GetContSignByUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTasks is a complexType.
/// class ns1__GetSDKTasks operations:
/// - soap_new_ns1__GetSDKTasks(soap*) allocate
/// - soap_new_ns1__GetSDKTasks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTasks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTasks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTasks(soap*, ns1__GetSDKTasks*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTasks(soap, ns1__GetSDKTasks*) serialize to a stream
class ns1__GetSDKTasks : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTasksResponse is a complexType.
/// class ns1__GetSDKTasksResponse operations:
/// - soap_new_ns1__GetSDKTasksResponse(soap*) allocate
/// - soap_new_ns1__GetSDKTasksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTasksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTasksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTasksResponse(soap*, ns1__GetSDKTasksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTasksResponse(soap, ns1__GetSDKTasksResponse*) serialize to a stream
class ns1__GetSDKTasksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getColumnsName is a complexType.
/// class ns1__Fk_USCOREgetColumnsName operations:
/// - soap_new_ns1__Fk_USCOREgetColumnsName(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetColumnsName(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetColumnsName(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetColumnsName(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetColumnsName(soap*, ns1__Fk_USCOREgetColumnsName*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetColumnsName(soap, ns1__Fk_USCOREgetColumnsName*) serialize to a stream
class ns1__Fk_USCOREgetColumnsName : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getColumnsNameResponse is a complexType.
/// class ns1__Fk_USCOREgetColumnsNameResponse operations:
/// - soap_new_ns1__Fk_USCOREgetColumnsNameResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetColumnsNameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetColumnsNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetColumnsNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetColumnsNameResponse(soap*, ns1__Fk_USCOREgetColumnsNameResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetColumnsNameResponse(soap, ns1__Fk_USCOREgetColumnsNameResponse*) serialize to a stream
class ns1__Fk_USCOREgetColumnsNameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_create is a complexType.
/// class ns1__Fk_USCOREcreate operations:
/// - soap_new_ns1__Fk_USCOREcreate(soap*) allocate
/// - soap_new_ns1__Fk_USCOREcreate(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREcreate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREcreate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREcreate(soap*, ns1__Fk_USCOREcreate*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREcreate(soap, ns1__Fk_USCOREcreate*) serialize to a stream
class ns1__Fk_USCOREcreate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element fkp of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fkp                            0;	///< Optional element.
/// Element optionGetCache of type xs:boolean.
    bool                                 optionGetCache                 1;	///< Required element.
/// Element optionSetDesc of type xs:boolean.
    bool                                 optionSetDesc                  1;	///< Required element.
};

/// "http://ws.abx/":Fk_createResponse is a complexType.
/// class ns1__Fk_USCOREcreateResponse operations:
/// - soap_new_ns1__Fk_USCOREcreateResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREcreateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREcreateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREcreateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREcreateResponse(soap*, ns1__Fk_USCOREcreateResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREcreateResponse(soap, ns1__Fk_USCOREcreateResponse*) serialize to a stream
class ns1__Fk_USCOREcreateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertFileContainer is a complexType.
/// class ns1__InsertFileContainer operations:
/// - soap_new_ns1__InsertFileContainer(soap*) allocate
/// - soap_new_ns1__InsertFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFileContainer(soap*, ns1__InsertFileContainer*) deserialize from a stream
/// - int soap_write_ns1__InsertFileContainer(soap, ns1__InsertFileContainer*) serialize to a stream
class ns1__InsertFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":InsertFileContainerResponse is a complexType.
/// class ns1__InsertFileContainerResponse operations:
/// - soap_new_ns1__InsertFileContainerResponse(soap*) allocate
/// - soap_new_ns1__InsertFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFileContainerResponse(soap*, ns1__InsertFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertFileContainerResponse(soap, ns1__InsertFileContainerResponse*) serialize to a stream
class ns1__InsertFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetContainerLinks is a complexType.
/// class ns1__GetContainerLinks operations:
/// - soap_new_ns1__GetContainerLinks(soap*) allocate
/// - soap_new_ns1__GetContainerLinks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContainerLinks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContainerLinks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContainerLinks(soap*, ns1__GetContainerLinks*) deserialize from a stream
/// - int soap_write_ns1__GetContainerLinks(soap, ns1__GetContainerLinks*) serialize to a stream
class ns1__GetContainerLinks : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetContainerLinksResponse is a complexType.
/// class ns1__GetContainerLinksResponse operations:
/// - soap_new_ns1__GetContainerLinksResponse(soap*) allocate
/// - soap_new_ns1__GetContainerLinksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContainerLinksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContainerLinksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContainerLinksResponse(soap*, ns1__GetContainerLinksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetContainerLinksResponse(soap, ns1__GetContainerLinksResponse*) serialize to a stream
class ns1__GetContainerLinksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTPFileById is a complexType.
/// class ns1__DeleteTPFileById operations:
/// - soap_new_ns1__DeleteTPFileById(soap*) allocate
/// - soap_new_ns1__DeleteTPFileById(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTPFileById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTPFileById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTPFileById(soap*, ns1__DeleteTPFileById*) deserialize from a stream
/// - int soap_write_ns1__DeleteTPFileById(soap, ns1__DeleteTPFileById*) serialize to a stream
class ns1__DeleteTPFileById : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileId of type xs:string.
    char*                                fileId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTPFileByIdResponse is a complexType.
/// class ns1__DeleteTPFileByIdResponse operations:
/// - soap_new_ns1__DeleteTPFileByIdResponse(soap*) allocate
/// - soap_new_ns1__DeleteTPFileByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTPFileByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTPFileByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTPFileByIdResponse(soap*, ns1__DeleteTPFileByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteTPFileByIdResponse(soap, ns1__DeleteTPFileByIdResponse*) serialize to a stream
class ns1__DeleteTPFileByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteContainer is a complexType.
/// class ns1__canDeleteContainer operations:
/// - soap_new_ns1__canDeleteContainer(soap*) allocate
/// - soap_new_ns1__canDeleteContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteContainer(soap*, ns1__canDeleteContainer*) deserialize from a stream
/// - int soap_write_ns1__canDeleteContainer(soap, ns1__canDeleteContainer*) serialize to a stream
class ns1__canDeleteContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteContainerResponse is a complexType.
/// class ns1__canDeleteContainerResponse operations:
/// - soap_new_ns1__canDeleteContainerResponse(soap*) allocate
/// - soap_new_ns1__canDeleteContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteContainerResponse(soap*, ns1__canDeleteContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__canDeleteContainerResponse(soap, ns1__canDeleteContainerResponse*) serialize to a stream
class ns1__canDeleteContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":IfFileExist is a complexType.
/// class ns1__IfFileExist operations:
/// - soap_new_ns1__IfFileExist(soap*) allocate
/// - soap_new_ns1__IfFileExist(soap*, int num) allocate array
/// - soap_new_req_ns1__IfFileExist(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__IfFileExist(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__IfFileExist(soap*, ns1__IfFileExist*) deserialize from a stream
/// - int soap_write_ns1__IfFileExist(soap, ns1__IfFileExist*) serialize to a stream
class ns1__IfFileExist : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element pathfilename of type xs:string.
    char*                                pathfilename                   0;	///< Optional element.
};

/// "http://ws.abx/":IfFileExistResponse is a complexType.
/// class ns1__IfFileExistResponse operations:
/// - soap_new_ns1__IfFileExistResponse(soap*) allocate
/// - soap_new_ns1__IfFileExistResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__IfFileExistResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__IfFileExistResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__IfFileExistResponse(soap*, ns1__IfFileExistResponse*) deserialize from a stream
/// - int soap_write_ns1__IfFileExistResponse(soap, ns1__IfFileExistResponse*) serialize to a stream
class ns1__IfFileExistResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetInstanceReplication is a complexType.
/// class ns1__SetInstanceReplication operations:
/// - soap_new_ns1__SetInstanceReplication(soap*) allocate
/// - soap_new_ns1__SetInstanceReplication(soap*, int num) allocate array
/// - soap_new_req_ns1__SetInstanceReplication(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetInstanceReplication(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetInstanceReplication(soap*, ns1__SetInstanceReplication*) deserialize from a stream
/// - int soap_write_ns1__SetInstanceReplication(soap, ns1__SetInstanceReplication*) serialize to a stream
class ns1__SetInstanceReplication : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element replicationList of type "http://ws.abx/":abxReplicationList.
    ns1__abxReplicationList*             replicationList                0;	///< Optional element.
};

/// "http://ws.abx/":abxReplicationList is a complexType.
/// class ns1__abxReplicationList operations:
/// - soap_new_ns1__abxReplicationList(soap*) allocate
/// - soap_new_ns1__abxReplicationList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxReplicationList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxReplicationList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxReplicationList(soap*, ns1__abxReplicationList*) deserialize from a stream
/// - int soap_write_ns1__abxReplicationList(soap, ns1__abxReplicationList*) serialize to a stream
class ns1__abxReplicationList : public xsd__anyType
{ public:
/// Size of array of ns1__abxArchiBoxInDomain* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxArchiBoxInDomain* of length 1..unbounded
    ns1__abxArchiBoxInDomain*           *dataList                       1;
};

/// "http://ws.abx/":abxArchiBoxInDomain is a complexType.
/// class ns1__abxArchiBoxInDomain operations:
/// - soap_new_ns1__abxArchiBoxInDomain(soap*) allocate
/// - soap_new_ns1__abxArchiBoxInDomain(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchiBoxInDomain(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchiBoxInDomain(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchiBoxInDomain(soap*, ns1__abxArchiBoxInDomain*) deserialize from a stream
/// - int soap_write_ns1__abxArchiBoxInDomain(soap, ns1__abxArchiBoxInDomain*) serialize to a stream
class ns1__abxArchiBoxInDomain : public xsd__anyType
{ public:
/// Element abxId of type xs:long.
    LONG64                               abxId                          1;	///< Required element.
/// Element domainId of type xs:long.
    LONG64                               domainId                       1;	///< Required element.
/// Element matricola of type xs:string.
    char*                                matricola                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element ipAddress of type xs:string.
    char*                                ipAddress                      1;	///< Required element.
/// Element location of type xs:string.
    char*                                location                       1;	///< Required element.
/// Element release of type xs:string.
    char*                                release                        1;	///< Required element.
/// Element serverId of type xs:int.
    int                                  serverId                       1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
/// Element requestId of type xs:int.
    int                                  requestId                      1;	///< Required element.
};

/// "http://ws.abx/":SetInstanceReplicationResponse is a complexType.
/// class ns1__SetInstanceReplicationResponse operations:
/// - soap_new_ns1__SetInstanceReplicationResponse(soap*) allocate
/// - soap_new_ns1__SetInstanceReplicationResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetInstanceReplicationResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetInstanceReplicationResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetInstanceReplicationResponse(soap*, ns1__SetInstanceReplicationResponse*) deserialize from a stream
/// - int soap_write_ns1__SetInstanceReplicationResponse(soap, ns1__SetInstanceReplicationResponse*) serialize to a stream
class ns1__SetInstanceReplicationResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxReplicationResult.
    ns1__abxReplicationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxReplicationResult is a complexType.
/// class ns1__abxReplicationResult operations:
/// - soap_new_ns1__abxReplicationResult(soap*) allocate
/// - soap_new_ns1__abxReplicationResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxReplicationResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxReplicationResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxReplicationResult(soap*, ns1__abxReplicationResult*) deserialize from a stream
/// - int soap_write_ns1__abxReplicationResult(soap, ns1__abxReplicationResult*) serialize to a stream
class ns1__abxReplicationResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxReplicationList.
    ns1__abxReplicationList*             list                           1;	///< Required element.
};

/// "http://ws.abx/":DownloadTPFile is a complexType.
/// class ns1__DownloadTPFile operations:
/// - soap_new_ns1__DownloadTPFile(soap*) allocate
/// - soap_new_ns1__DownloadTPFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadTPFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadTPFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadTPFile(soap*, ns1__DownloadTPFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadTPFile(soap, ns1__DownloadTPFile*) serialize to a stream
class ns1__DownloadTPFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadTPFileResponse is a complexType.
/// class ns1__DownloadTPFileResponse operations:
/// - soap_new_ns1__DownloadTPFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadTPFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadTPFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadTPFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadTPFileResponse(soap*, ns1__DownloadTPFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadTPFileResponse(soap, ns1__DownloadTPFileResponse*) serialize to a stream
class ns1__DownloadTPFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteTableList is a complexType.
/// class ns1__Fk_USCOREgetRemoteTableList operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteTableList(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteTableList(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteTableList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteTableList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteTableList(soap*, ns1__Fk_USCOREgetRemoteTableList*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteTableList(soap, ns1__Fk_USCOREgetRemoteTableList*) serialize to a stream
class ns1__Fk_USCOREgetRemoteTableList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element host of type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element dbType of type xs:string.
    char*                                dbType                         0;	///< Optional element.
/// Element databaseName of type xs:string.
    char*                                databaseName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteTableListResponse is a complexType.
/// class ns1__Fk_USCOREgetRemoteTableListResponse operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteTableListResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteTableListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteTableListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteTableListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteTableListResponse(soap*, ns1__Fk_USCOREgetRemoteTableListResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteTableListResponse(soap, ns1__Fk_USCOREgetRemoteTableListResponse*) serialize to a stream
class ns1__Fk_USCOREgetRemoteTableListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListOnlyLastVersion is a complexType.
/// class ns1__GetDataFileListOnlyLastVersion operations:
/// - soap_new_ns1__GetDataFileListOnlyLastVersion(soap*) allocate
/// - soap_new_ns1__GetDataFileListOnlyLastVersion(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListOnlyLastVersion(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListOnlyLastVersion(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListOnlyLastVersion(soap*, ns1__GetDataFileListOnlyLastVersion*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListOnlyLastVersion(soap, ns1__GetDataFileListOnlyLastVersion*) serialize to a stream
class ns1__GetDataFileListOnlyLastVersion : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element getLinkedFiles of type xs:boolean.
    bool*                                getLinkedFiles                 0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListOnlyLastVersionResponse is a complexType.
/// class ns1__GetDataFileListOnlyLastVersionResponse operations:
/// - soap_new_ns1__GetDataFileListOnlyLastVersionResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileListOnlyLastVersionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListOnlyLastVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListOnlyLastVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListOnlyLastVersionResponse(soap*, ns1__GetDataFileListOnlyLastVersionResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListOnlyLastVersionResponse(soap, ns1__GetDataFileListOnlyLastVersionResponse*) serialize to a stream
class ns1__GetDataFileListOnlyLastVersionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DelMarker is a complexType.
/// class ns1__DelMarker operations:
/// - soap_new_ns1__DelMarker(soap*) allocate
/// - soap_new_ns1__DelMarker(soap*, int num) allocate array
/// - soap_new_req_ns1__DelMarker(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelMarker(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelMarker(soap*, ns1__DelMarker*) deserialize from a stream
/// - int soap_write_ns1__DelMarker(soap, ns1__DelMarker*) serialize to a stream
class ns1__DelMarker : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element marker of type xs:string.
    char*                                marker                         0;	///< Optional element.
};

/// "http://ws.abx/":DelMarkerResponse is a complexType.
/// class ns1__DelMarkerResponse operations:
/// - soap_new_ns1__DelMarkerResponse(soap*) allocate
/// - soap_new_ns1__DelMarkerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DelMarkerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelMarkerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelMarkerResponse(soap*, ns1__DelMarkerResponse*) deserialize from a stream
/// - int soap_write_ns1__DelMarkerResponse(soap, ns1__DelMarkerResponse*) serialize to a stream
class ns1__DelMarkerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModDefaultProcess is a complexType.
/// class ns1__ModDefaultProcess operations:
/// - soap_new_ns1__ModDefaultProcess(soap*) allocate
/// - soap_new_ns1__ModDefaultProcess(soap*, int num) allocate array
/// - soap_new_req_ns1__ModDefaultProcess(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModDefaultProcess(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModDefaultProcess(soap*, ns1__ModDefaultProcess*) deserialize from a stream
/// - int soap_write_ns1__ModDefaultProcess(soap, ns1__ModDefaultProcess*) serialize to a stream
class ns1__ModDefaultProcess : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":ModDefaultProcessResponse is a complexType.
/// class ns1__ModDefaultProcessResponse operations:
/// - soap_new_ns1__ModDefaultProcessResponse(soap*) allocate
/// - soap_new_ns1__ModDefaultProcessResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModDefaultProcessResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModDefaultProcessResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModDefaultProcessResponse(soap*, ns1__ModDefaultProcessResponse*) deserialize from a stream
/// - int soap_write_ns1__ModDefaultProcessResponse(soap, ns1__ModDefaultProcessResponse*) serialize to a stream
class ns1__ModDefaultProcessResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canModifyTemplate is a complexType.
/// class ns1__canModifyTemplate operations:
/// - soap_new_ns1__canModifyTemplate(soap*) allocate
/// - soap_new_ns1__canModifyTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyTemplate(soap*, ns1__canModifyTemplate*) deserialize from a stream
/// - int soap_write_ns1__canModifyTemplate(soap, ns1__canModifyTemplate*) serialize to a stream
class ns1__canModifyTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Template2Update of type xs:string.
    char*                                Template2Update                0;	///< Optional element.
};

/// "http://ws.abx/":canModifyTemplateResponse is a complexType.
/// class ns1__canModifyTemplateResponse operations:
/// - soap_new_ns1__canModifyTemplateResponse(soap*) allocate
/// - soap_new_ns1__canModifyTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyTemplateResponse(soap*, ns1__canModifyTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__canModifyTemplateResponse(soap, ns1__canModifyTemplateResponse*) serialize to a stream
class ns1__canModifyTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationByRangeLabelCode is a complexType.
/// class ns1__GetTranslationByRangeLabelCode operations:
/// - soap_new_ns1__GetTranslationByRangeLabelCode(soap*) allocate
/// - soap_new_ns1__GetTranslationByRangeLabelCode(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByRangeLabelCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByRangeLabelCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByRangeLabelCode(soap*, ns1__GetTranslationByRangeLabelCode*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByRangeLabelCode(soap, ns1__GetTranslationByRangeLabelCode*) serialize to a stream
class ns1__GetTranslationByRangeLabelCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element exLabelCodeFrom of type xs:string.
    char*                                exLabelCodeFrom                0;	///< Optional element.
/// Element exLabelCodeTo of type xs:string.
    char*                                exLabelCodeTo                  0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationByRangeLabelCodeResponse is a complexType.
/// class ns1__GetTranslationByRangeLabelCodeResponse operations:
/// - soap_new_ns1__GetTranslationByRangeLabelCodeResponse(soap*) allocate
/// - soap_new_ns1__GetTranslationByRangeLabelCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByRangeLabelCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByRangeLabelCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByRangeLabelCodeResponse(soap*, ns1__GetTranslationByRangeLabelCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByRangeLabelCodeResponse(soap, ns1__GetTranslationByRangeLabelCodeResponse*) serialize to a stream
class ns1__GetTranslationByRangeLabelCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxTranslationResult is a complexType.
/// class ns1__abxTranslationResult operations:
/// - soap_new_ns1__abxTranslationResult(soap*) allocate
/// - soap_new_ns1__abxTranslationResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTranslationResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTranslationResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTranslationResult(soap*, ns1__abxTranslationResult*) deserialize from a stream
/// - int soap_write_ns1__abxTranslationResult(soap, ns1__abxTranslationResult*) serialize to a stream
class ns1__abxTranslationResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxTranslationList.
    ns1__abxTranslationList*             list                           1;	///< Required element.
};

/// "http://ws.abx/":abxTranslationList is a complexType.
/// class ns1__abxTranslationList operations:
/// - soap_new_ns1__abxTranslationList(soap*) allocate
/// - soap_new_ns1__abxTranslationList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxTranslationList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxTranslationList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxTranslationList(soap*, ns1__abxTranslationList*) deserialize from a stream
/// - int soap_write_ns1__abxTranslationList(soap, ns1__abxTranslationList*) serialize to a stream
class ns1__abxTranslationList : public xsd__anyType
{ public:
/// Size of array of ns1__abxTranslation* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxTranslation* of length 1..unbounded
    ns1__abxTranslation*                *dataList                       1;
};

/// "http://ws.abx/":GetCountDocumentLinks is a complexType.
/// class ns1__GetCountDocumentLinks operations:
/// - soap_new_ns1__GetCountDocumentLinks(soap*) allocate
/// - soap_new_ns1__GetCountDocumentLinks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountDocumentLinks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountDocumentLinks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountDocumentLinks(soap*, ns1__GetCountDocumentLinks*) deserialize from a stream
/// - int soap_write_ns1__GetCountDocumentLinks(soap, ns1__GetCountDocumentLinks*) serialize to a stream
class ns1__GetCountDocumentLinks : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetCountDocumentLinksResponse is a complexType.
/// class ns1__GetCountDocumentLinksResponse operations:
/// - soap_new_ns1__GetCountDocumentLinksResponse(soap*) allocate
/// - soap_new_ns1__GetCountDocumentLinksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountDocumentLinksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountDocumentLinksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountDocumentLinksResponse(soap*, ns1__GetCountDocumentLinksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetCountDocumentLinksResponse(soap, ns1__GetCountDocumentLinksResponse*) serialize to a stream
class ns1__GetCountDocumentLinksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKRules is a complexType.
/// class ns1__GetSDKRules operations:
/// - soap_new_ns1__GetSDKRules(soap*) allocate
/// - soap_new_ns1__GetSDKRules(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKRules(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKRules(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKRules(soap*, ns1__GetSDKRules*) deserialize from a stream
/// - int soap_write_ns1__GetSDKRules(soap, ns1__GetSDKRules*) serialize to a stream
class ns1__GetSDKRules : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKRulesResponse is a complexType.
/// class ns1__GetSDKRulesResponse operations:
/// - soap_new_ns1__GetSDKRulesResponse(soap*) allocate
/// - soap_new_ns1__GetSDKRulesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKRulesResponse(soap*, ns1__GetSDKRulesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKRulesResponse(soap, ns1__GetSDKRulesResponse*) serialize to a stream
class ns1__GetSDKRulesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileContainer is a complexType.
/// class ns1__DeleteFileContainer operations:
/// - soap_new_ns1__DeleteFileContainer(soap*) allocate
/// - soap_new_ns1__DeleteFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileContainer(soap*, ns1__DeleteFileContainer*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileContainer(soap, ns1__DeleteFileContainer*) serialize to a stream
class ns1__DeleteFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileContainerResponse is a complexType.
/// class ns1__DeleteFileContainerResponse operations:
/// - soap_new_ns1__DeleteFileContainerResponse(soap*) allocate
/// - soap_new_ns1__DeleteFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileContainerResponse(soap*, ns1__DeleteFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileContainerResponse(soap, ns1__DeleteFileContainerResponse*) serialize to a stream
class ns1__DeleteFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByFilecode is a complexType.
/// class ns1__GetUploadDetailByFilecode operations:
/// - soap_new_ns1__GetUploadDetailByFilecode(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByFilecode(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByFilecode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByFilecode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByFilecode(soap*, ns1__GetUploadDetailByFilecode*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByFilecode(soap, ns1__GetUploadDetailByFilecode*) serialize to a stream
class ns1__GetUploadDetailByFilecode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByFilecodeResponse is a complexType.
/// class ns1__GetUploadDetailByFilecodeResponse operations:
/// - soap_new_ns1__GetUploadDetailByFilecodeResponse(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByFilecodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByFilecodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByFilecodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByFilecodeResponse(soap*, ns1__GetUploadDetailByFilecodeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByFilecodeResponse(soap, ns1__GetUploadDetailByFilecodeResponse*) serialize to a stream
class ns1__GetUploadDetailByFilecodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Ping is a complexType.
/// class ns1__Ping operations:
/// - soap_new_ns1__Ping(soap*) allocate
/// - soap_new_ns1__Ping(soap*, int num) allocate array
/// - soap_new_req_ns1__Ping(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Ping(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Ping(soap*, ns1__Ping*) deserialize from a stream
/// - int soap_write_ns1__Ping(soap, ns1__Ping*) serialize to a stream
class ns1__Ping : public xsd__anyType
{ public:
/// Element In of type xs:string.
    char*                                In                             0;	///< Optional element.
};

/// "http://ws.abx/":PingResponse is a complexType.
/// class ns1__PingResponse operations:
/// - soap_new_ns1__PingResponse(soap*) allocate
/// - soap_new_ns1__PingResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__PingResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__PingResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__PingResponse(soap*, ns1__PingResponse*) deserialize from a stream
/// - int soap_write_ns1__PingResponse(soap, ns1__PingResponse*) serialize to a stream
class ns1__PingResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxPingResult.
    ns1__AbxPingResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AbxPingResult is a complexType.
/// class ns1__AbxPingResult operations:
/// - soap_new_ns1__AbxPingResult(soap*) allocate
/// - soap_new_ns1__AbxPingResult(soap*, int num) allocate array
/// - soap_new_req_ns1__AbxPingResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AbxPingResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AbxPingResult(soap*, ns1__AbxPingResult*) deserialize from a stream
/// - int soap_write_ns1__AbxPingResult(soap, ns1__AbxPingResult*) serialize to a stream
class ns1__AbxPingResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element value of type xs:string.
    char*                                value                          1;	///< Required element.
};

/// "http://ws.abx/":CanAddNewYear is a complexType.
/// class ns1__CanAddNewYear operations:
/// - soap_new_ns1__CanAddNewYear(soap*) allocate
/// - soap_new_ns1__CanAddNewYear(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddNewYear(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddNewYear(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddNewYear(soap*, ns1__CanAddNewYear*) deserialize from a stream
/// - int soap_write_ns1__CanAddNewYear(soap, ns1__CanAddNewYear*) serialize to a stream
class ns1__CanAddNewYear : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":CanAddNewYearResponse is a complexType.
/// class ns1__CanAddNewYearResponse operations:
/// - soap_new_ns1__CanAddNewYearResponse(soap*) allocate
/// - soap_new_ns1__CanAddNewYearResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddNewYearResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddNewYearResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddNewYearResponse(soap*, ns1__CanAddNewYearResponse*) deserialize from a stream
/// - int soap_write_ns1__CanAddNewYearResponse(soap, ns1__CanAddNewYearResponse*) serialize to a stream
class ns1__CanAddNewYearResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertUser is a complexType.
/// class ns1__InsertUser operations:
/// - soap_new_ns1__InsertUser(soap*) allocate
/// - soap_new_ns1__InsertUser(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUser(soap*, ns1__InsertUser*) deserialize from a stream
/// - int soap_write_ns1__InsertUser(soap, ns1__InsertUser*) serialize to a stream
class ns1__InsertUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element user of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        user                           0;	///< Optional element.
};

/// "http://ws.abx/":InsertUserResponse is a complexType.
/// class ns1__InsertUserResponse operations:
/// - soap_new_ns1__InsertUserResponse(soap*) allocate
/// - soap_new_ns1__InsertUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUserResponse(soap*, ns1__InsertUserResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertUserResponse(soap, ns1__InsertUserResponse*) serialize to a stream
class ns1__InsertUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileListByUsername is a complexType.
/// class ns1__GetDataUSFileListByUsername operations:
/// - soap_new_ns1__GetDataUSFileListByUsername(soap*) allocate
/// - soap_new_ns1__GetDataUSFileListByUsername(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileListByUsername(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileListByUsername(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileListByUsername(soap*, ns1__GetDataUSFileListByUsername*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileListByUsername(soap, ns1__GetDataUSFileListByUsername*) serialize to a stream
class ns1__GetDataUSFileListByUsername : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileListByUsernameResponse is a complexType.
/// class ns1__GetDataUSFileListByUsernameResponse operations:
/// - soap_new_ns1__GetDataUSFileListByUsernameResponse(soap*) allocate
/// - soap_new_ns1__GetDataUSFileListByUsernameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileListByUsernameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileListByUsernameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileListByUsernameResponse(soap*, ns1__GetDataUSFileListByUsernameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileListByUsernameResponse(soap, ns1__GetDataUSFileListByUsernameResponse*) serialize to a stream
class ns1__GetDataUSFileListByUsernameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canModifyField is a complexType.
/// class ns1__canModifyField operations:
/// - soap_new_ns1__canModifyField(soap*) allocate
/// - soap_new_ns1__canModifyField(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyField(soap*, ns1__canModifyField*) deserialize from a stream
/// - int soap_write_ns1__canModifyField(soap, ns1__canModifyField*) serialize to a stream
class ns1__canModifyField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element FieldName of type xs:string.
    char*                                FieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":canModifyFieldResponse is a complexType.
/// class ns1__canModifyFieldResponse operations:
/// - soap_new_ns1__canModifyFieldResponse(soap*) allocate
/// - soap_new_ns1__canModifyFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyFieldResponse(soap*, ns1__canModifyFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__canModifyFieldResponse(soap, ns1__canModifyFieldResponse*) serialize to a stream
class ns1__canModifyFieldResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyFilter is a complexType.
/// class ns1__ModifyFilter operations:
/// - soap_new_ns1__ModifyFilter(soap*) allocate
/// - soap_new_ns1__ModifyFilter(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyFilter(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyFilter(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyFilter(soap*, ns1__ModifyFilter*) deserialize from a stream
/// - int soap_write_ns1__ModifyFilter(soap, ns1__ModifyFilter*) serialize to a stream
class ns1__ModifyFilter : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element filter of type "http://ws.abx/":AbxFilter.
    ns1__AbxFilter*                      filter                         0;	///< Optional element.
};

/// "http://ws.abx/":AbxFilter is a complexType.
/// class ns1__AbxFilter operations:
/// - soap_new_ns1__AbxFilter(soap*) allocate
/// - soap_new_ns1__AbxFilter(soap*, int num) allocate array
/// - soap_new_req_ns1__AbxFilter(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AbxFilter(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AbxFilter(soap*, ns1__AbxFilter*) deserialize from a stream
/// - int soap_write_ns1__AbxFilter(soap, ns1__AbxFilter*) serialize to a stream
class ns1__AbxFilter : public xsd__anyType
{ public:
/// Element instance_name of type xs:string.
    char*                                instance_USCOREname            1;	///< Required element.
/// Element group_name of type xs:string.
    char*                                group_USCOREname               1;	///< Required element.
/// Element field_name of type xs:string.
    char*                                field_USCOREname               1;	///< Required element.
/// Element field_value of type xs:string.
    char*                                field_USCOREvalue              1;	///< Required element.
/// Element filter_name of type xs:string.
    char*                                filter_USCOREname              1;	///< Required element.
/// Element instance_description of type xs:string.
    char*                                instance_USCOREdescription     1;	///< Required element.
/// Element field_description of type xs:string.
    char*                                field_USCOREdescription        1;	///< Required element.
/// Element field_value_description of type xs:string.
    char*                                field_USCOREvalue_USCOREdescription 1;	///< Required element.
};

/// "http://ws.abx/":ModifyFilterResponse is a complexType.
/// class ns1__ModifyFilterResponse operations:
/// - soap_new_ns1__ModifyFilterResponse(soap*) allocate
/// - soap_new_ns1__ModifyFilterResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyFilterResponse(soap*, ns1__ModifyFilterResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyFilterResponse(soap, ns1__ModifyFilterResponse*) serialize to a stream
class ns1__ModifyFilterResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxFilterResult.
    ns1__AbxFilterResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AbxFilterResult is a complexType.
/// class ns1__AbxFilterResult operations:
/// - soap_new_ns1__AbxFilterResult(soap*) allocate
/// - soap_new_ns1__AbxFilterResult(soap*, int num) allocate array
/// - soap_new_req_ns1__AbxFilterResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AbxFilterResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AbxFilterResult(soap*, ns1__AbxFilterResult*) deserialize from a stream
/// - int soap_write_ns1__AbxFilterResult(soap, ns1__AbxFilterResult*) serialize to a stream
class ns1__AbxFilterResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":AbxFilterList.
    ns1__AbxFilterList*                  list                           1;	///< Required element.
};

/// "http://ws.abx/":AbxFilterList is a complexType.
/// class ns1__AbxFilterList operations:
/// - soap_new_ns1__AbxFilterList(soap*) allocate
/// - soap_new_ns1__AbxFilterList(soap*, int num) allocate array
/// - soap_new_req_ns1__AbxFilterList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AbxFilterList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AbxFilterList(soap*, ns1__AbxFilterList*) deserialize from a stream
/// - int soap_write_ns1__AbxFilterList(soap, ns1__AbxFilterList*) serialize to a stream
class ns1__AbxFilterList : public xsd__anyType
{ public:
/// Size of array of ns1__AbxFilter* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__AbxFilter* of length 1..unbounded
    ns1__AbxFilter*                     *dataList                       1;
};

/// "http://ws.abx/":InsertGroup is a complexType.
/// class ns1__InsertGroup operations:
/// - soap_new_ns1__InsertGroup(soap*) allocate
/// - soap_new_ns1__InsertGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertGroup(soap*, ns1__InsertGroup*) deserialize from a stream
/// - int soap_write_ns1__InsertGroup(soap, ns1__InsertGroup*) serialize to a stream
class ns1__InsertGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element group of type "http://ws.abx/":abxGroup.
    ns1__abxGroup*                       group                          0;	///< Optional element.
};

/// "http://ws.abx/":InsertGroupResponse is a complexType.
/// class ns1__InsertGroupResponse operations:
/// - soap_new_ns1__InsertGroupResponse(soap*) allocate
/// - soap_new_ns1__InsertGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertGroupResponse(soap*, ns1__InsertGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertGroupResponse(soap, ns1__InsertGroupResponse*) serialize to a stream
class ns1__InsertGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGroupResult.
    ns1__abxGroupResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolById is a complexType.
/// class ns1__GetProtocolById operations:
/// - soap_new_ns1__GetProtocolById(soap*) allocate
/// - soap_new_ns1__GetProtocolById(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolById(soap*, ns1__GetProtocolById*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolById(soap, ns1__GetProtocolById*) serialize to a stream
class ns1__GetProtocolById : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolId of type xs:string.
    char*                                protocolId                     0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByIdResponse is a complexType.
/// class ns1__GetProtocolByIdResponse operations:
/// - soap_new_ns1__GetProtocolByIdResponse(soap*) allocate
/// - soap_new_ns1__GetProtocolByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByIdResponse(soap*, ns1__GetProtocolByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByIdResponse(soap, ns1__GetProtocolByIdResponse*) serialize to a stream
class ns1__GetProtocolByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetData is a complexType.
/// class ns1__GetData operations:
/// - soap_new_ns1__GetData(soap*) allocate
/// - soap_new_ns1__GetData(soap*, int num) allocate array
/// - soap_new_req_ns1__GetData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetData(soap*, ns1__GetData*) deserialize from a stream
/// - int soap_write_ns1__GetData(soap, ns1__GetData*) serialize to a stream
class ns1__GetData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataResponse is a complexType.
/// class ns1__GetDataResponse operations:
/// - soap_new_ns1__GetDataResponse(soap*) allocate
/// - soap_new_ns1__GetDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataResponse(soap*, ns1__GetDataResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataResponse(soap, ns1__GetDataResponse*) serialize to a stream
class ns1__GetDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteField is a complexType.
/// class ns1__canDeleteField operations:
/// - soap_new_ns1__canDeleteField(soap*) allocate
/// - soap_new_ns1__canDeleteField(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteField(soap*, ns1__canDeleteField*) deserialize from a stream
/// - int soap_write_ns1__canDeleteField(soap, ns1__canDeleteField*) serialize to a stream
class ns1__canDeleteField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element FieldName of type xs:string.
    char*                                FieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":canDeleteFieldResponse is a complexType.
/// class ns1__canDeleteFieldResponse operations:
/// - soap_new_ns1__canDeleteFieldResponse(soap*) allocate
/// - soap_new_ns1__canDeleteFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canDeleteFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canDeleteFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canDeleteFieldResponse(soap*, ns1__canDeleteFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__canDeleteFieldResponse(soap, ns1__canDeleteFieldResponse*) serialize to a stream
class ns1__canDeleteFieldResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddDefaultProcess is a complexType.
/// class ns1__AddDefaultProcess operations:
/// - soap_new_ns1__AddDefaultProcess(soap*) allocate
/// - soap_new_ns1__AddDefaultProcess(soap*, int num) allocate array
/// - soap_new_req_ns1__AddDefaultProcess(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddDefaultProcess(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddDefaultProcess(soap*, ns1__AddDefaultProcess*) deserialize from a stream
/// - int soap_write_ns1__AddDefaultProcess(soap, ns1__AddDefaultProcess*) serialize to a stream
class ns1__AddDefaultProcess : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":AddDefaultProcessResponse is a complexType.
/// class ns1__AddDefaultProcessResponse operations:
/// - soap_new_ns1__AddDefaultProcessResponse(soap*) allocate
/// - soap_new_ns1__AddDefaultProcessResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddDefaultProcessResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddDefaultProcessResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddDefaultProcessResponse(soap*, ns1__AddDefaultProcessResponse*) deserialize from a stream
/// - int soap_write_ns1__AddDefaultProcessResponse(soap, ns1__AddDefaultProcessResponse*) serialize to a stream
class ns1__AddDefaultProcessResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ValidateSession is a complexType.
/// class ns1__ValidateSession operations:
/// - soap_new_ns1__ValidateSession(soap*) allocate
/// - soap_new_ns1__ValidateSession(soap*, int num) allocate array
/// - soap_new_req_ns1__ValidateSession(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ValidateSession(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ValidateSession(soap*, ns1__ValidateSession*) deserialize from a stream
/// - int soap_write_ns1__ValidateSession(soap, ns1__ValidateSession*) serialize to a stream
class ns1__ValidateSession : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":ValidateSessionResponse is a complexType.
/// class ns1__ValidateSessionResponse operations:
/// - soap_new_ns1__ValidateSessionResponse(soap*) allocate
/// - soap_new_ns1__ValidateSessionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ValidateSessionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ValidateSessionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ValidateSessionResponse(soap*, ns1__ValidateSessionResponse*) deserialize from a stream
/// - int soap_write_ns1__ValidateSessionResponse(soap, ns1__ValidateSessionResponse*) serialize to a stream
class ns1__ValidateSessionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLoginResult.
    ns1__abxLoginResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getCountAllRecordByDesc is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecordByDesc operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByDesc(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecordByDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecordByDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecordByDesc(soap*, ns1__Fk_USCOREgetCountAllRecordByDesc*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecordByDesc(soap, ns1__Fk_USCOREgetCountAllRecordByDesc*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecordByDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getCountAllRecordByDescResponse is a complexType.
/// class ns1__Fk_USCOREgetCountAllRecordByDescResponse operations:
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap*, ns1__Fk_USCOREgetCountAllRecordByDescResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetCountAllRecordByDescResponse(soap, ns1__Fk_USCOREgetCountAllRecordByDescResponse*) serialize to a stream
class ns1__Fk_USCOREgetCountAllRecordByDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SchedulerTaskScheduleProcessed is a complexType.
/// class ns1__SchedulerTaskScheduleProcessed operations:
/// - soap_new_ns1__SchedulerTaskScheduleProcessed(soap*) allocate
/// - soap_new_ns1__SchedulerTaskScheduleProcessed(soap*, int num) allocate array
/// - soap_new_req_ns1__SchedulerTaskScheduleProcessed(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SchedulerTaskScheduleProcessed(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SchedulerTaskScheduleProcessed(soap*, ns1__SchedulerTaskScheduleProcessed*) deserialize from a stream
/// - int soap_write_ns1__SchedulerTaskScheduleProcessed(soap, ns1__SchedulerTaskScheduleProcessed*) serialize to a stream
class ns1__SchedulerTaskScheduleProcessed : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// class _ns1__SchedulerTaskScheduleProcessed_schedule operations:
/// - soap_new__ns1__SchedulerTaskScheduleProcessed_schedule(soap*) allocate
/// - soap_new__ns1__SchedulerTaskScheduleProcessed_schedule(soap*, int num) allocate array
/// - soap_new_req__ns1__SchedulerTaskScheduleProcessed_schedule(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__SchedulerTaskScheduleProcessed_schedule(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__SchedulerTaskScheduleProcessed_schedule(soap*, _ns1__SchedulerTaskScheduleProcessed_schedule*) deserialize from a stream
/// - int soap_write__ns1__SchedulerTaskScheduleProcessed_schedule(soap, _ns1__SchedulerTaskScheduleProcessed_schedule*) serialize to a stream
    class _ns1__SchedulerTaskScheduleProcessed_schedule
    {
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element startDate of type xs:string.
    char*                                startDate                      1;	///< Required element.
/// Element recurence of type xs:int.
    int                                  recurence                      1;	///< Required element.
/// Element isOneTime of type xs:boolean.
    bool                                 isOneTime                      1;	///< Required element.
/// Element daysOfTheWeek of type xs:string.
    char*                                daysOfTheWeek                  1;	///< Required element.
/// Element months of type xs:string.
    char*                                months                         1;	///< Required element.
/// Element daysOfTheMonth of type xs:string.
    char*                                daysOfTheMonth                 1;	///< Required element.
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element type of type xs:int.
    int                                  type                           1;	///< Required element.
/// Element lastRun of type xs:string.
    char*                                lastRun                        1;	///< Required element.
/// Element option of type xs:string.
    char*                                option                         1;	///< Required element.
/// Element audit_message_code_id of type xs:string.
    char*                                audit_USCOREmessage_USCOREcode_USCOREid 0;	///< Optional element.
/// Element optional_message of type xs:string.
    char*                                optional_USCOREmessage         0;	///< Optional element.
    }                                   *schedule                       0;	///< Optional element.
};

/// "http://ws.abx/":SchedulerTaskScheduleProcessedResponse is a complexType.
/// class ns1__SchedulerTaskScheduleProcessedResponse operations:
/// - soap_new_ns1__SchedulerTaskScheduleProcessedResponse(soap*) allocate
/// - soap_new_ns1__SchedulerTaskScheduleProcessedResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SchedulerTaskScheduleProcessedResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SchedulerTaskScheduleProcessedResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SchedulerTaskScheduleProcessedResponse(soap*, ns1__SchedulerTaskScheduleProcessedResponse*) deserialize from a stream
/// - int soap_write_ns1__SchedulerTaskScheduleProcessedResponse(soap, ns1__SchedulerTaskScheduleProcessedResponse*) serialize to a stream
class ns1__SchedulerTaskScheduleProcessedResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":EditProtocol is a complexType.
/// class ns1__EditProtocol operations:
/// - soap_new_ns1__EditProtocol(soap*) allocate
/// - soap_new_ns1__EditProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__EditProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__EditProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__EditProtocol(soap*, ns1__EditProtocol*) deserialize from a stream
/// - int soap_write_ns1__EditProtocol(soap, ns1__EditProtocol*) serialize to a stream
class ns1__EditProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":EditProtocolResponse is a complexType.
/// class ns1__EditProtocolResponse operations:
/// - soap_new_ns1__EditProtocolResponse(soap*) allocate
/// - soap_new_ns1__EditProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__EditProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__EditProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__EditProtocolResponse(soap*, ns1__EditProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__EditProtocolResponse(soap, ns1__EditProtocolResponse*) serialize to a stream
class ns1__EditProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadWFFile is a complexType.
/// class ns1__DownloadWFFile operations:
/// - soap_new_ns1__DownloadWFFile(soap*) allocate
/// - soap_new_ns1__DownloadWFFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadWFFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadWFFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadWFFile(soap*, ns1__DownloadWFFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadWFFile(soap, ns1__DownloadWFFile*) serialize to a stream
class ns1__DownloadWFFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadWFFileResponse is a complexType.
/// class ns1__DownloadWFFileResponse operations:
/// - soap_new_ns1__DownloadWFFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadWFFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadWFFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadWFFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadWFFileResponse(soap*, ns1__DownloadWFFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadWFFileResponse(soap, ns1__DownloadWFFileResponse*) serialize to a stream
class ns1__DownloadWFFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkContainerToContainer is a complexType.
/// class ns1__InsertLinkContainerToContainer operations:
/// - soap_new_ns1__InsertLinkContainerToContainer(soap*) allocate
/// - soap_new_ns1__InsertLinkContainerToContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkContainerToContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkContainerToContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkContainerToContainer(soap*, ns1__InsertLinkContainerToContainer*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkContainerToContainer(soap, ns1__InsertLinkContainerToContainer*) serialize to a stream
class ns1__InsertLinkContainerToContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkContainerToContainerResponse is a complexType.
/// class ns1__InsertLinkContainerToContainerResponse operations:
/// - soap_new_ns1__InsertLinkContainerToContainerResponse(soap*) allocate
/// - soap_new_ns1__InsertLinkContainerToContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkContainerToContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkContainerToContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkContainerToContainerResponse(soap*, ns1__InsertLinkContainerToContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkContainerToContainerResponse(soap, ns1__InsertLinkContainerToContainerResponse*) serialize to a stream
class ns1__InsertLinkContainerToContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataCountWithoutPermission is a complexType.
/// class ns1__GetDataCountWithoutPermission operations:
/// - soap_new_ns1__GetDataCountWithoutPermission(soap*) allocate
/// - soap_new_ns1__GetDataCountWithoutPermission(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataCountWithoutPermission(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataCountWithoutPermission(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataCountWithoutPermission(soap*, ns1__GetDataCountWithoutPermission*) deserialize from a stream
/// - int soap_write_ns1__GetDataCountWithoutPermission(soap, ns1__GetDataCountWithoutPermission*) serialize to a stream
class ns1__GetDataCountWithoutPermission : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataCountWithoutPermissionResponse is a complexType.
/// class ns1__GetDataCountWithoutPermissionResponse operations:
/// - soap_new_ns1__GetDataCountWithoutPermissionResponse(soap*) allocate
/// - soap_new_ns1__GetDataCountWithoutPermissionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataCountWithoutPermissionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataCountWithoutPermissionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataCountWithoutPermissionResponse(soap*, ns1__GetDataCountWithoutPermissionResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataCountWithoutPermissionResponse(soap, ns1__GetDataCountWithoutPermissionResponse*) serialize to a stream
class ns1__GetDataCountWithoutPermissionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileDetail is a complexType.
/// class ns1__GetDataTPFileDetail operations:
/// - soap_new_ns1__GetDataTPFileDetail(soap*) allocate
/// - soap_new_ns1__GetDataTPFileDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileDetail(soap*, ns1__GetDataTPFileDetail*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileDetail(soap, ns1__GetDataTPFileDetail*) serialize to a stream
class ns1__GetDataTPFileDetail : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileDetailResponse is a complexType.
/// class ns1__GetDataTPFileDetailResponse operations:
/// - soap_new_ns1__GetDataTPFileDetailResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileDetailResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileDetailResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileDetailResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileDetailResponse(soap*, ns1__GetDataTPFileDetailResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileDetailResponse(soap, ns1__GetDataTPFileDetailResponse*) serialize to a stream
class ns1__GetDataTPFileDetailResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSign is a complexType.
/// class ns1__GetSign operations:
/// - soap_new_ns1__GetSign(soap*) allocate
/// - soap_new_ns1__GetSign(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSign(soap*, ns1__GetSign*) deserialize from a stream
/// - int soap_write_ns1__GetSign(soap, ns1__GetSign*) serialize to a stream
class ns1__GetSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetSignResponse is a complexType.
/// class ns1__GetSignResponse operations:
/// - soap_new_ns1__GetSignResponse(soap*) allocate
/// - soap_new_ns1__GetSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSignResponse(soap*, ns1__GetSignResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSignResponse(soap, ns1__GetSignResponse*) serialize to a stream
class ns1__GetSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadUSEndFile is a complexType.
/// class ns1__UploadUSEndFile operations:
/// - soap_new_ns1__UploadUSEndFile(soap*) allocate
/// - soap_new_ns1__UploadUSEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSEndFile(soap*, ns1__UploadUSEndFile*) deserialize from a stream
/// - int soap_write_ns1__UploadUSEndFile(soap, ns1__UploadUSEndFile*) serialize to a stream
class ns1__UploadUSEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":UploadUSEndFileResponse is a complexType.
/// class ns1__UploadUSEndFileResponse operations:
/// - soap_new_ns1__UploadUSEndFileResponse(soap*) allocate
/// - soap_new_ns1__UploadUSEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSEndFileResponse(soap*, ns1__UploadUSEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadUSEndFileResponse(soap, ns1__UploadUSEndFileResponse*) serialize to a stream
class ns1__UploadUSEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DelDefaultProcess is a complexType.
/// class ns1__DelDefaultProcess operations:
/// - soap_new_ns1__DelDefaultProcess(soap*) allocate
/// - soap_new_ns1__DelDefaultProcess(soap*, int num) allocate array
/// - soap_new_req_ns1__DelDefaultProcess(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelDefaultProcess(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelDefaultProcess(soap*, ns1__DelDefaultProcess*) deserialize from a stream
/// - int soap_write_ns1__DelDefaultProcess(soap, ns1__DelDefaultProcess*) serialize to a stream
class ns1__DelDefaultProcess : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":DelDefaultProcessResponse is a complexType.
/// class ns1__DelDefaultProcessResponse operations:
/// - soap_new_ns1__DelDefaultProcessResponse(soap*) allocate
/// - soap_new_ns1__DelDefaultProcessResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DelDefaultProcessResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelDefaultProcessResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelDefaultProcessResponse(soap*, ns1__DelDefaultProcessResponse*) deserialize from a stream
/// - int soap_write_ns1__DelDefaultProcessResponse(soap, ns1__DelDefaultProcessResponse*) serialize to a stream
class ns1__DelDefaultProcessResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataCountWithPermission is a complexType.
/// class ns1__GetDataCountWithPermission operations:
/// - soap_new_ns1__GetDataCountWithPermission(soap*) allocate
/// - soap_new_ns1__GetDataCountWithPermission(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataCountWithPermission(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataCountWithPermission(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataCountWithPermission(soap*, ns1__GetDataCountWithPermission*) deserialize from a stream
/// - int soap_write_ns1__GetDataCountWithPermission(soap, ns1__GetDataCountWithPermission*) serialize to a stream
class ns1__GetDataCountWithPermission : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataCountWithPermissionResponse is a complexType.
/// class ns1__GetDataCountWithPermissionResponse operations:
/// - soap_new_ns1__GetDataCountWithPermissionResponse(soap*) allocate
/// - soap_new_ns1__GetDataCountWithPermissionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataCountWithPermissionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataCountWithPermissionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataCountWithPermissionResponse(soap*, ns1__GetDataCountWithPermissionResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataCountWithPermissionResponse(soap, ns1__GetDataCountWithPermissionResponse*) serialize to a stream
class ns1__GetDataCountWithPermissionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetLanguages is a complexType.
/// class ns1__GetLanguages operations:
/// - soap_new_ns1__GetLanguages(soap*) allocate
/// - soap_new_ns1__GetLanguages(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLanguages(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLanguages(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLanguages(soap*, ns1__GetLanguages*) deserialize from a stream
/// - int soap_write_ns1__GetLanguages(soap, ns1__GetLanguages*) serialize to a stream
class ns1__GetLanguages : public xsd__anyType
{ public:
};

/// "http://ws.abx/":GetLanguagesResponse is a complexType.
/// class ns1__GetLanguagesResponse operations:
/// - soap_new_ns1__GetLanguagesResponse(soap*) allocate
/// - soap_new_ns1__GetLanguagesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLanguagesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLanguagesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLanguagesResponse(soap*, ns1__GetLanguagesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetLanguagesResponse(soap, ns1__GetLanguagesResponse*) serialize to a stream
class ns1__GetLanguagesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLanguageResult.
    ns1__abxLanguageResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxLanguageResult is a complexType.
/// class ns1__abxLanguageResult operations:
/// - soap_new_ns1__abxLanguageResult(soap*) allocate
/// - soap_new_ns1__abxLanguageResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLanguageResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLanguageResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLanguageResult(soap*, ns1__abxLanguageResult*) deserialize from a stream
/// - int soap_write_ns1__abxLanguageResult(soap, ns1__abxLanguageResult*) serialize to a stream
class ns1__abxLanguageResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxLanguageList.
    ns1__abxLanguageList*                list                           1;	///< Required element.
};

/// "http://ws.abx/":abxLanguageList is a complexType.
/// class ns1__abxLanguageList operations:
/// - soap_new_ns1__abxLanguageList(soap*) allocate
/// - soap_new_ns1__abxLanguageList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLanguageList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLanguageList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLanguageList(soap*, ns1__abxLanguageList*) deserialize from a stream
/// - int soap_write_ns1__abxLanguageList(soap, ns1__abxLanguageList*) serialize to a stream
class ns1__abxLanguageList : public xsd__anyType
{ public:
/// Size of array of ns1__abxLanguage* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxLanguage* of length 1..unbounded
    ns1__abxLanguage*                   *dataList                       1;
};

/// "http://ws.abx/":abxLanguage is a complexType.
/// class ns1__abxLanguage operations:
/// - soap_new_ns1__abxLanguage(soap*) allocate
/// - soap_new_ns1__abxLanguage(soap*, int num) allocate array
/// - soap_new_req_ns1__abxLanguage(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxLanguage(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxLanguage(soap*, ns1__abxLanguage*) deserialize from a stream
/// - int soap_write_ns1__abxLanguage(soap, ns1__abxLanguage*) serialize to a stream
class ns1__abxLanguage : public xsd__anyType
{ public:
/// Element language of type xs:string.
    char*                                language                       1;	///< Required element.
/// Element languageId of type xs:string.
    char*                                languageId                     1;	///< Required element.
/// Element languageCode of type xs:string.
    char*                                languageCode                   1;	///< Required element.
};

/// "http://ws.abx/":GetExpressionValue is a complexType.
/// class ns1__GetExpressionValue operations:
/// - soap_new_ns1__GetExpressionValue(soap*) allocate
/// - soap_new_ns1__GetExpressionValue(soap*, int num) allocate array
/// - soap_new_req_ns1__GetExpressionValue(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetExpressionValue(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetExpressionValue(soap*, ns1__GetExpressionValue*) deserialize from a stream
/// - int soap_write_ns1__GetExpressionValue(soap, ns1__GetExpressionValue*) serialize to a stream
class ns1__GetExpressionValue : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataid of type xs:string.
    char*                                dataid                         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element expressionName of type xs:string.
    char*                                expressionName                 0;	///< Optional element.
};

/// "http://ws.abx/":GetExpressionValueResponse is a complexType.
/// class ns1__GetExpressionValueResponse operations:
/// - soap_new_ns1__GetExpressionValueResponse(soap*) allocate
/// - soap_new_ns1__GetExpressionValueResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetExpressionValueResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetExpressionValueResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetExpressionValueResponse(soap*, ns1__GetExpressionValueResponse*) deserialize from a stream
/// - int soap_write_ns1__GetExpressionValueResponse(soap, ns1__GetExpressionValueResponse*) serialize to a stream
class ns1__GetExpressionValueResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteLinkFromContainer is a complexType.
/// class ns1__CanDeleteLinkFromContainer operations:
/// - soap_new_ns1__CanDeleteLinkFromContainer(soap*) allocate
/// - soap_new_ns1__CanDeleteLinkFromContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteLinkFromContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteLinkFromContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteLinkFromContainer(soap*, ns1__CanDeleteLinkFromContainer*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteLinkFromContainer(soap, ns1__CanDeleteLinkFromContainer*) serialize to a stream
class ns1__CanDeleteLinkFromContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteLinkFromContainerResponse is a complexType.
/// class ns1__CanDeleteLinkFromContainerResponse operations:
/// - soap_new_ns1__CanDeleteLinkFromContainerResponse(soap*) allocate
/// - soap_new_ns1__CanDeleteLinkFromContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteLinkFromContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteLinkFromContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteLinkFromContainerResponse(soap*, ns1__CanDeleteLinkFromContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteLinkFromContainerResponse(soap, ns1__CanDeleteLinkFromContainerResponse*) serialize to a stream
class ns1__CanDeleteLinkFromContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTemplate is a complexType.
/// class ns1__DeleteTemplate operations:
/// - soap_new_ns1__DeleteTemplate(soap*) allocate
/// - soap_new_ns1__DeleteTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTemplate(soap*, ns1__DeleteTemplate*) deserialize from a stream
/// - int soap_write_ns1__DeleteTemplate(soap, ns1__DeleteTemplate*) serialize to a stream
class ns1__DeleteTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTemplateResponse is a complexType.
/// class ns1__DeleteTemplateResponse operations:
/// - soap_new_ns1__DeleteTemplateResponse(soap*) allocate
/// - soap_new_ns1__DeleteTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTemplateResponse(soap*, ns1__DeleteTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteTemplateResponse(soap, ns1__DeleteTemplateResponse*) serialize to a stream
class ns1__DeleteTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTemplateResult.
    ns1__abxTemplateResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":TestScritturaLettura is a complexType.
/// class ns1__TestScritturaLettura operations:
/// - soap_new_ns1__TestScritturaLettura(soap*) allocate
/// - soap_new_ns1__TestScritturaLettura(soap*, int num) allocate array
/// - soap_new_req_ns1__TestScritturaLettura(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__TestScritturaLettura(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__TestScritturaLettura(soap*, ns1__TestScritturaLettura*) deserialize from a stream
/// - int soap_write_ns1__TestScritturaLettura(soap, ns1__TestScritturaLettura*) serialize to a stream
class ns1__TestScritturaLettura : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":TestScritturaLetturaResponse is a complexType.
/// class ns1__TestScritturaLetturaResponse operations:
/// - soap_new_ns1__TestScritturaLetturaResponse(soap*) allocate
/// - soap_new_ns1__TestScritturaLetturaResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__TestScritturaLetturaResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__TestScritturaLetturaResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__TestScritturaLetturaResponse(soap*, ns1__TestScritturaLetturaResponse*) deserialize from a stream
/// - int soap_write_ns1__TestScritturaLetturaResponse(soap, ns1__TestScritturaLetturaResponse*) serialize to a stream
class ns1__TestScritturaLetturaResponse : public xsd__anyType
{ public:
/// Element return of type xs:string.
    char*                                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteRaccoglitore is a complexType.
/// class ns1__DeleteRaccoglitore operations:
/// - soap_new_ns1__DeleteRaccoglitore(soap*) allocate
/// - soap_new_ns1__DeleteRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteRaccoglitore(soap*, ns1__DeleteRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__DeleteRaccoglitore(soap, ns1__DeleteRaccoglitore*) serialize to a stream
class ns1__DeleteRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":DeleteRaccoglitoreResponse is a complexType.
/// class ns1__DeleteRaccoglitoreResponse operations:
/// - soap_new_ns1__DeleteRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__DeleteRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteRaccoglitoreResponse(soap*, ns1__DeleteRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteRaccoglitoreResponse(soap, ns1__DeleteRaccoglitoreResponse*) serialize to a stream
class ns1__DeleteRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRaccoglitoreResult.
    ns1__abxRaccoglitoreResult*          return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFile is a complexType.
/// class ns1__DeleteFile operations:
/// - soap_new_ns1__DeleteFile(soap*) allocate
/// - soap_new_ns1__DeleteFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFile(soap*, ns1__DeleteFile*) deserialize from a stream
/// - int soap_write_ns1__DeleteFile(soap, ns1__DeleteFile*) serialize to a stream
class ns1__DeleteFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileResponse is a complexType.
/// class ns1__DeleteFileResponse operations:
/// - soap_new_ns1__DeleteFileResponse(soap*) allocate
/// - soap_new_ns1__DeleteFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileResponse(soap*, ns1__DeleteFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileResponse(soap, ns1__DeleteFileResponse*) serialize to a stream
class ns1__DeleteFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModUserSettings is a complexType.
/// class ns1__ModUserSettings operations:
/// - soap_new_ns1__ModUserSettings(soap*) allocate
/// - soap_new_ns1__ModUserSettings(soap*, int num) allocate array
/// - soap_new_req_ns1__ModUserSettings(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModUserSettings(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModUserSettings(soap*, ns1__ModUserSettings*) deserialize from a stream
/// - int soap_write_ns1__ModUserSettings(soap, ns1__ModUserSettings*) serialize to a stream
class ns1__ModUserSettings : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":ModUserSettingsResponse is a complexType.
/// class ns1__ModUserSettingsResponse operations:
/// - soap_new_ns1__ModUserSettingsResponse(soap*) allocate
/// - soap_new_ns1__ModUserSettingsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModUserSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModUserSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModUserSettingsResponse(soap*, ns1__ModUserSettingsResponse*) deserialize from a stream
/// - int soap_write_ns1__ModUserSettingsResponse(soap, ns1__ModUserSettingsResponse*) serialize to a stream
class ns1__ModUserSettingsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkContainerToDocument is a complexType.
/// class ns1__InsertLinkContainerToDocument operations:
/// - soap_new_ns1__InsertLinkContainerToDocument(soap*) allocate
/// - soap_new_ns1__InsertLinkContainerToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkContainerToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkContainerToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkContainerToDocument(soap*, ns1__InsertLinkContainerToDocument*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkContainerToDocument(soap, ns1__InsertLinkContainerToDocument*) serialize to a stream
class ns1__InsertLinkContainerToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element dataIdTo of type xs:string.
    char*                                dataIdTo                       0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkContainerToDocumentResponse is a complexType.
/// class ns1__InsertLinkContainerToDocumentResponse operations:
/// - soap_new_ns1__InsertLinkContainerToDocumentResponse(soap*) allocate
/// - soap_new_ns1__InsertLinkContainerToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkContainerToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkContainerToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkContainerToDocumentResponse(soap*, ns1__InsertLinkContainerToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkContainerToDocumentResponse(soap, ns1__InsertLinkContainerToDocumentResponse*) serialize to a stream
class ns1__InsertLinkContainerToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CopyFile is a complexType.
/// class ns1__CopyFile operations:
/// - soap_new_ns1__CopyFile(soap*) allocate
/// - soap_new_ns1__CopyFile(soap*, int num) allocate array
/// - soap_new_req_ns1__CopyFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CopyFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CopyFile(soap*, ns1__CopyFile*) deserialize from a stream
/// - int soap_write_ns1__CopyFile(soap, ns1__CopyFile*) serialize to a stream
class ns1__CopyFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceNameSource of type xs:string.
    char*                                instanceNameSource             0;	///< Optional element.
/// Element dataIdSource of type xs:string.
    char*                                dataIdSource                   0;	///< Optional element.
/// Element file of type "http://ws.abx/":abxFile.
    ns1__abxFile*                        file                           0;	///< Optional element.
/// Element instanceNameDest of type xs:string.
    char*                                instanceNameDest               0;	///< Optional element.
/// Element dataIdDest of type xs:string.
    char*                                dataIdDest                     0;	///< Optional element.
};

/// "http://ws.abx/":CopyFileResponse is a complexType.
/// class ns1__CopyFileResponse operations:
/// - soap_new_ns1__CopyFileResponse(soap*) allocate
/// - soap_new_ns1__CopyFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CopyFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CopyFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CopyFileResponse(soap*, ns1__CopyFileResponse*) deserialize from a stream
/// - int soap_write_ns1__CopyFileResponse(soap, ns1__CopyFileResponse*) serialize to a stream
class ns1__CopyFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTree is a complexType.
/// class ns1__GetTree operations:
/// - soap_new_ns1__GetTree(soap*) allocate
/// - soap_new_ns1__GetTree(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTree(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTree(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTree(soap*, ns1__GetTree*) deserialize from a stream
/// - int soap_write_ns1__GetTree(soap, ns1__GetTree*) serialize to a stream
class ns1__GetTree : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element param of type "http://ws.abx/":abxTreeParam.
    ns1__abxTreeParam*                   param                          0;	///< Optional element.
};

/// "http://ws.abx/":GetTreeResponse is a complexType.
/// class ns1__GetTreeResponse operations:
/// - soap_new_ns1__GetTreeResponse(soap*) allocate
/// - soap_new_ns1__GetTreeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTreeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTreeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTreeResponse(soap*, ns1__GetTreeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTreeResponse(soap, ns1__GetTreeResponse*) serialize to a stream
class ns1__GetTreeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTreeResult.
    ns1__abxTreeResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkDocumentToDocument is a complexType.
/// class ns1__CanInsertLinkDocumentToDocument operations:
/// - soap_new_ns1__CanInsertLinkDocumentToDocument(soap*) allocate
/// - soap_new_ns1__CanInsertLinkDocumentToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkDocumentToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkDocumentToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkDocumentToDocument(soap*, ns1__CanInsertLinkDocumentToDocument*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkDocumentToDocument(soap, ns1__CanInsertLinkDocumentToDocument*) serialize to a stream
class ns1__CanInsertLinkDocumentToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkDocumentToDocumentResponse is a complexType.
/// class ns1__CanInsertLinkDocumentToDocumentResponse operations:
/// - soap_new_ns1__CanInsertLinkDocumentToDocumentResponse(soap*) allocate
/// - soap_new_ns1__CanInsertLinkDocumentToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkDocumentToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkDocumentToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkDocumentToDocumentResponse(soap*, ns1__CanInsertLinkDocumentToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkDocumentToDocumentResponse(soap, ns1__CanInsertLinkDocumentToDocumentResponse*) serialize to a stream
class ns1__CanInsertLinkDocumentToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileDetail is a complexType.
/// class ns1__GetDataUSFileDetail operations:
/// - soap_new_ns1__GetDataUSFileDetail(soap*) allocate
/// - soap_new_ns1__GetDataUSFileDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileDetail(soap*, ns1__GetDataUSFileDetail*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileDetail(soap, ns1__GetDataUSFileDetail*) serialize to a stream
class ns1__GetDataUSFileDetail : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileDetailResponse is a complexType.
/// class ns1__GetDataUSFileDetailResponse operations:
/// - soap_new_ns1__GetDataUSFileDetailResponse(soap*) allocate
/// - soap_new_ns1__GetDataUSFileDetailResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileDetailResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileDetailResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileDetailResponse(soap*, ns1__GetDataUSFileDetailResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileDetailResponse(soap, ns1__GetDataUSFileDetailResponse*) serialize to a stream
class ns1__GetDataUSFileDetailResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModUser is a complexType.
/// class ns1__ModUser operations:
/// - soap_new_ns1__ModUser(soap*) allocate
/// - soap_new_ns1__ModUser(soap*, int num) allocate array
/// - soap_new_req_ns1__ModUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModUser(soap*, ns1__ModUser*) deserialize from a stream
/// - int soap_write_ns1__ModUser(soap, ns1__ModUser*) serialize to a stream
class ns1__ModUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element user of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        user                           0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
};

/// "http://ws.abx/":ModUserResponse is a complexType.
/// class ns1__ModUserResponse operations:
/// - soap_new_ns1__ModUserResponse(soap*) allocate
/// - soap_new_ns1__ModUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModUserResponse(soap*, ns1__ModUserResponse*) deserialize from a stream
/// - int soap_write_ns1__ModUserResponse(soap, ns1__ModUserResponse*) serialize to a stream
class ns1__ModUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSchedulerTaskSchedule is a complexType.
/// class ns1__DeleteSchedulerTaskSchedule operations:
/// - soap_new_ns1__DeleteSchedulerTaskSchedule(soap*) allocate
/// - soap_new_ns1__DeleteSchedulerTaskSchedule(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSchedulerTaskSchedule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSchedulerTaskSchedule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSchedulerTaskSchedule(soap*, ns1__DeleteSchedulerTaskSchedule*) deserialize from a stream
/// - int soap_write_ns1__DeleteSchedulerTaskSchedule(soap, ns1__DeleteSchedulerTaskSchedule*) serialize to a stream
class ns1__DeleteSchedulerTaskSchedule : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element scheduleId of type xs:string.
    char*                                scheduleId                     0;	///< Optional element.
/// Element scheduleType of type xs:int.
    int                                  scheduleType                   1;	///< Required element.
};

/// "http://ws.abx/":DeleteSchedulerTaskScheduleResponse is a complexType.
/// class ns1__DeleteSchedulerTaskScheduleResponse operations:
/// - soap_new_ns1__DeleteSchedulerTaskScheduleResponse(soap*) allocate
/// - soap_new_ns1__DeleteSchedulerTaskScheduleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSchedulerTaskScheduleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSchedulerTaskScheduleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSchedulerTaskScheduleResponse(soap*, ns1__DeleteSchedulerTaskScheduleResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteSchedulerTaskScheduleResponse(soap, ns1__DeleteSchedulerTaskScheduleResponse*) serialize to a stream
class ns1__DeleteSchedulerTaskScheduleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddMarker is a complexType.
/// class ns1__AddMarker operations:
/// - soap_new_ns1__AddMarker(soap*) allocate
/// - soap_new_ns1__AddMarker(soap*, int num) allocate array
/// - soap_new_req_ns1__AddMarker(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddMarker(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddMarker(soap*, ns1__AddMarker*) deserialize from a stream
/// - int soap_write_ns1__AddMarker(soap, ns1__AddMarker*) serialize to a stream
class ns1__AddMarker : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element marker of type xs:string.
    char*                                marker                         0;	///< Optional element.
};

/// "http://ws.abx/":AddMarkerResponse is a complexType.
/// class ns1__AddMarkerResponse operations:
/// - soap_new_ns1__AddMarkerResponse(soap*) allocate
/// - soap_new_ns1__AddMarkerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddMarkerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddMarkerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddMarkerResponse(soap*, ns1__AddMarkerResponse*) deserialize from a stream
/// - int soap_write_ns1__AddMarkerResponse(soap, ns1__AddMarkerResponse*) serialize to a stream
class ns1__AddMarkerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceReplicationStatus is a complexType.
/// class ns1__GetInstanceReplicationStatus operations:
/// - soap_new_ns1__GetInstanceReplicationStatus(soap*) allocate
/// - soap_new_ns1__GetInstanceReplicationStatus(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceReplicationStatus(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceReplicationStatus(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceReplicationStatus(soap*, ns1__GetInstanceReplicationStatus*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceReplicationStatus(soap, ns1__GetInstanceReplicationStatus*) serialize to a stream
class ns1__GetInstanceReplicationStatus : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceReplicationStatusResponse is a complexType.
/// class ns1__GetInstanceReplicationStatusResponse operations:
/// - soap_new_ns1__GetInstanceReplicationStatusResponse(soap*) allocate
/// - soap_new_ns1__GetInstanceReplicationStatusResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceReplicationStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceReplicationStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceReplicationStatusResponse(soap*, ns1__GetInstanceReplicationStatusResponse*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceReplicationStatusResponse(soap, ns1__GetInstanceReplicationStatusResponse*) serialize to a stream
class ns1__GetInstanceReplicationStatusResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxReplicationResult.
    ns1__abxReplicationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDocumentLinks is a complexType.
/// class ns1__GetDocumentLinks operations:
/// - soap_new_ns1__GetDocumentLinks(soap*) allocate
/// - soap_new_ns1__GetDocumentLinks(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDocumentLinks(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDocumentLinks(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDocumentLinks(soap*, ns1__GetDocumentLinks*) deserialize from a stream
/// - int soap_write_ns1__GetDocumentLinks(soap, ns1__GetDocumentLinks*) serialize to a stream
class ns1__GetDocumentLinks : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDocumentLinksResponse is a complexType.
/// class ns1__GetDocumentLinksResponse operations:
/// - soap_new_ns1__GetDocumentLinksResponse(soap*) allocate
/// - soap_new_ns1__GetDocumentLinksResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDocumentLinksResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDocumentLinksResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDocumentLinksResponse(soap*, ns1__GetDocumentLinksResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDocumentLinksResponse(soap, ns1__GetDocumentLinksResponse*) serialize to a stream
class ns1__GetDocumentLinksResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getPars is a complexType.
/// class ns1__Fk_USCOREgetPars operations:
/// - soap_new_ns1__Fk_USCOREgetPars(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetPars(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetPars(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetPars(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetPars(soap*, ns1__Fk_USCOREgetPars*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetPars(soap, ns1__Fk_USCOREgetPars*) serialize to a stream
class ns1__Fk_USCOREgetPars : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element fkName of type xs:string.
    char*                                fkName                         0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getParsResponse is a complexType.
/// class ns1__Fk_USCOREgetParsResponse operations:
/// - soap_new_ns1__Fk_USCOREgetParsResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetParsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetParsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetParsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetParsResponse(soap*, ns1__Fk_USCOREgetParsResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetParsResponse(soap, ns1__Fk_USCOREgetParsResponse*) serialize to a stream
class ns1__Fk_USCOREgetParsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_attachContainer is a complexType.
/// class ns1__CheckOut_USCOREattachContainer operations:
/// - soap_new_ns1__CheckOut_USCOREattachContainer(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREattachContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREattachContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREattachContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREattachContainer(soap*, ns1__CheckOut_USCOREattachContainer*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREattachContainer(soap, ns1__CheckOut_USCOREattachContainer*) serialize to a stream
class ns1__CheckOut_USCOREattachContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ObjName of type xs:string.
    char*                                ObjName                        0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_attachContainerResponse is a complexType.
/// class ns1__CheckOut_USCOREattachContainerResponse operations:
/// - soap_new_ns1__CheckOut_USCOREattachContainerResponse(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREattachContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREattachContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREattachContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREattachContainerResponse(soap*, ns1__CheckOut_USCOREattachContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREattachContainerResponse(soap, ns1__CheckOut_USCOREattachContainerResponse*) serialize to a stream
class ns1__CheckOut_USCOREattachContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxCheckinResult is a complexType.
/// class ns1__abxCheckinResult operations:
/// - soap_new_ns1__abxCheckinResult(soap*) allocate
/// - soap_new_ns1__abxCheckinResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxCheckinResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxCheckinResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxCheckinResult(soap*, ns1__abxCheckinResult*) deserialize from a stream
/// - int soap_write_ns1__abxCheckinResult(soap, ns1__abxCheckinResult*) serialize to a stream
class ns1__abxCheckinResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxCheckinList.
    ns1__abxCheckinList*                 list                           1;	///< Required element.
};

/// "http://ws.abx/":abxCheckinList is a complexType.
/// class ns1__abxCheckinList operations:
/// - soap_new_ns1__abxCheckinList(soap*) allocate
/// - soap_new_ns1__abxCheckinList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxCheckinList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxCheckinList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxCheckinList(soap*, ns1__abxCheckinList*) deserialize from a stream
/// - int soap_write_ns1__abxCheckinList(soap, ns1__abxCheckinList*) serialize to a stream
class ns1__abxCheckinList : public xsd__anyType
{ public:
/// Element dataList of type "http://ws.abx/":abxCheckin.
    ns1__abxCheckin*                     dataList                       1;	///< Required element.
};

/// "http://ws.abx/":abxCheckin is a complexType.
/// class ns1__abxCheckin operations:
/// - soap_new_ns1__abxCheckin(soap*) allocate
/// - soap_new_ns1__abxCheckin(soap*, int num) allocate array
/// - soap_new_req_ns1__abxCheckin(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxCheckin(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxCheckin(soap*, ns1__abxCheckin*) deserialize from a stream
/// - int soap_write_ns1__abxCheckin(soap, ns1__abxCheckin*) serialize to a stream
class ns1__abxCheckin : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           1;	///< Required element.
};

/// "http://ws.abx/":GetTranslationByMessageId is a complexType.
/// class ns1__GetTranslationByMessageId operations:
/// - soap_new_ns1__GetTranslationByMessageId(soap*) allocate
/// - soap_new_ns1__GetTranslationByMessageId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByMessageId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByMessageId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByMessageId(soap*, ns1__GetTranslationByMessageId*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByMessageId(soap, ns1__GetTranslationByMessageId*) serialize to a stream
class ns1__GetTranslationByMessageId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element exMessageId of type xs:string.
    char*                                exMessageId                    0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationByMessageIdResponse is a complexType.
/// class ns1__GetTranslationByMessageIdResponse operations:
/// - soap_new_ns1__GetTranslationByMessageIdResponse(soap*) allocate
/// - soap_new_ns1__GetTranslationByMessageIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByMessageIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByMessageIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByMessageIdResponse(soap*, ns1__GetTranslationByMessageIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByMessageIdResponse(soap, ns1__GetTranslationByMessageIdResponse*) serialize to a stream
class ns1__GetTranslationByMessageIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskExcelPreview is a complexType.
/// class ns1__GetSDKTaskExcelPreview operations:
/// - soap_new_ns1__GetSDKTaskExcelPreview(soap*) allocate
/// - soap_new_ns1__GetSDKTaskExcelPreview(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskExcelPreview(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskExcelPreview(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskExcelPreview(soap*, ns1__GetSDKTaskExcelPreview*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskExcelPreview(soap, ns1__GetSDKTaskExcelPreview*) serialize to a stream
class ns1__GetSDKTaskExcelPreview : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskExcelPreviewResponse is a complexType.
/// class ns1__GetSDKTaskExcelPreviewResponse operations:
/// - soap_new_ns1__GetSDKTaskExcelPreviewResponse(soap*) allocate
/// - soap_new_ns1__GetSDKTaskExcelPreviewResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskExcelPreviewResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskExcelPreviewResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskExcelPreviewResponse(soap*, ns1__GetSDKTaskExcelPreviewResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskExcelPreviewResponse(soap, ns1__GetSDKTaskExcelPreviewResponse*) serialize to a stream
class ns1__GetSDKTaskExcelPreviewResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_attach is a complexType.
/// class ns1__CheckIn_USCOREattach operations:
/// - soap_new_ns1__CheckIn_USCOREattach(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREattach(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREattach(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREattach(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREattach(soap*, ns1__CheckIn_USCOREattach*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREattach(soap, ns1__CheckIn_USCOREattach*) serialize to a stream
class ns1__CheckIn_USCOREattach : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_attachResponse is a complexType.
/// class ns1__CheckIn_USCOREattachResponse operations:
/// - soap_new_ns1__CheckIn_USCOREattachResponse(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREattachResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREattachResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREattachResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREattachResponse(soap*, ns1__CheckIn_USCOREattachResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREattachResponse(soap, ns1__CheckIn_USCOREattachResponse*) serialize to a stream
class ns1__CheckIn_USCOREattachResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyData is a complexType.
/// class ns1__ModifyData operations:
/// - soap_new_ns1__ModifyData(soap*) allocate
/// - soap_new_ns1__ModifyData(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyData(soap*, ns1__ModifyData*) deserialize from a stream
/// - int soap_write_ns1__ModifyData(soap, ns1__ModifyData*) serialize to a stream
class ns1__ModifyData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element inputData of type "http://ws.abx/":abxDataList.
    ns1__abxDataList*                    inputData                      0;	///< Optional element.
/// Element protocolUseData of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocolUseData                0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element masterId of type xs:string.
    char*                                masterId                       0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":ModifyDataResponse is a complexType.
/// class ns1__ModifyDataResponse operations:
/// - soap_new_ns1__ModifyDataResponse(soap*) allocate
/// - soap_new_ns1__ModifyDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyDataResponse(soap*, ns1__ModifyDataResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyDataResponse(soap, ns1__ModifyDataResponse*) serialize to a stream
class ns1__ModifyDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByCont is a complexType.
/// class ns1__GetDownloadDetailByCont operations:
/// - soap_new_ns1__GetDownloadDetailByCont(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByCont(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByCont(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByCont(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByCont(soap*, ns1__GetDownloadDetailByCont*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByCont(soap, ns1__GetDownloadDetailByCont*) serialize to a stream
class ns1__GetDownloadDetailByCont : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByContResponse is a complexType.
/// class ns1__GetDownloadDetailByContResponse operations:
/// - soap_new_ns1__GetDownloadDetailByContResponse(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByContResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByContResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByContResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByContResponse(soap*, ns1__GetDownloadDetailByContResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByContResponse(soap, ns1__GetDownloadDetailByContResponse*) serialize to a stream
class ns1__GetDownloadDetailByContResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpWFUploadPath is a complexType.
/// class ns1__SetTmpWFUploadPath operations:
/// - soap_new_ns1__SetTmpWFUploadPath(soap*) allocate
/// - soap_new_ns1__SetTmpWFUploadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpWFUploadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpWFUploadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpWFUploadPath(soap*, ns1__SetTmpWFUploadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpWFUploadPath(soap, ns1__SetTmpWFUploadPath*) serialize to a stream
class ns1__SetTmpWFUploadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpWFUploadPathResponse is a complexType.
/// class ns1__SetTmpWFUploadPathResponse operations:
/// - soap_new_ns1__SetTmpWFUploadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpWFUploadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpWFUploadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpWFUploadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpWFUploadPathResponse(soap*, ns1__SetTmpWFUploadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpWFUploadPathResponse(soap, ns1__SetTmpWFUploadPathResponse*) serialize to a stream
class ns1__SetTmpWFUploadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getParsAllFk is a complexType.
/// class ns1__Fk_USCOREgetParsAllFk operations:
/// - soap_new_ns1__Fk_USCOREgetParsAllFk(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetParsAllFk(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetParsAllFk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetParsAllFk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetParsAllFk(soap*, ns1__Fk_USCOREgetParsAllFk*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetParsAllFk(soap, ns1__Fk_USCOREgetParsAllFk*) serialize to a stream
class ns1__Fk_USCOREgetParsAllFk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getParsAllFkResponse is a complexType.
/// class ns1__Fk_USCOREgetParsAllFkResponse operations:
/// - soap_new_ns1__Fk_USCOREgetParsAllFkResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetParsAllFkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetParsAllFkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetParsAllFkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetParsAllFkResponse(soap*, ns1__Fk_USCOREgetParsAllFkResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetParsAllFkResponse(soap, ns1__Fk_USCOREgetParsAllFkResponse*) serialize to a stream
class ns1__Fk_USCOREgetParsAllFkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetLinksToDocument is a complexType.
/// class ns1__GetLinksToDocument operations:
/// - soap_new_ns1__GetLinksToDocument(soap*) allocate
/// - soap_new_ns1__GetLinksToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLinksToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLinksToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLinksToDocument(soap*, ns1__GetLinksToDocument*) deserialize from a stream
/// - int soap_write_ns1__GetLinksToDocument(soap, ns1__GetLinksToDocument*) serialize to a stream
class ns1__GetLinksToDocument : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetLinksToDocumentResponse is a complexType.
/// class ns1__GetLinksToDocumentResponse operations:
/// - soap_new_ns1__GetLinksToDocumentResponse(soap*) allocate
/// - soap_new_ns1__GetLinksToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLinksToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLinksToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLinksToDocumentResponse(soap*, ns1__GetLinksToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__GetLinksToDocumentResponse(soap, ns1__GetLinksToDocumentResponse*) serialize to a stream
class ns1__GetLinksToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByDataId is a complexType.
/// class ns1__GetDownloadDetailByDataId operations:
/// - soap_new_ns1__GetDownloadDetailByDataId(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByDataId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByDataId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByDataId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByDataId(soap*, ns1__GetDownloadDetailByDataId*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByDataId(soap, ns1__GetDownloadDetailByDataId*) serialize to a stream
class ns1__GetDownloadDetailByDataId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByDataIdResponse is a complexType.
/// class ns1__GetDownloadDetailByDataIdResponse operations:
/// - soap_new_ns1__GetDownloadDetailByDataIdResponse(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByDataIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByDataIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByDataIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByDataIdResponse(soap*, ns1__GetDownloadDetailByDataIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByDataIdResponse(soap, ns1__GetDownloadDetailByDataIdResponse*) serialize to a stream
class ns1__GetDownloadDetailByDataIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFileContainer is a complexType.
/// class ns1__UploadEndFileContainer operations:
/// - soap_new_ns1__UploadEndFileContainer(soap*) allocate
/// - soap_new_ns1__UploadEndFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFileContainer(soap*, ns1__UploadEndFileContainer*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFileContainer(soap, ns1__UploadEndFileContainer*) serialize to a stream
class ns1__UploadEndFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element docTemplateName of type xs:string.
    char*                                docTemplateName                0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFileContainerResponse is a complexType.
/// class ns1__UploadEndFileContainerResponse operations:
/// - soap_new_ns1__UploadEndFileContainerResponse(soap*) allocate
/// - soap_new_ns1__UploadEndFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFileContainerResponse(soap*, ns1__UploadEndFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFileContainerResponse(soap, ns1__UploadEndFileContainerResponse*) serialize to a stream
class ns1__UploadEndFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInDomain is a complexType.
/// class ns1__GetArchiBoxInDomain operations:
/// - soap_new_ns1__GetArchiBoxInDomain(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInDomain(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInDomain(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInDomain(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInDomain(soap*, ns1__GetArchiBoxInDomain*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInDomain(soap, ns1__GetArchiBoxInDomain*) serialize to a stream
class ns1__GetArchiBoxInDomain : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInDomainResponse is a complexType.
/// class ns1__GetArchiBoxInDomainResponse operations:
/// - soap_new_ns1__GetArchiBoxInDomainResponse(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInDomainResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInDomainResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInDomainResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInDomainResponse(soap*, ns1__GetArchiBoxInDomainResponse*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInDomainResponse(soap, ns1__GetArchiBoxInDomainResponse*) serialize to a stream
class ns1__GetArchiBoxInDomainResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchiBoxDomainResult.
    ns1__abxArchiBoxDomainResult*        return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWAById is a complexType.
/// class ns1__GetDataWAById operations:
/// - soap_new_ns1__GetDataWAById(soap*) allocate
/// - soap_new_ns1__GetDataWAById(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWAById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWAById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWAById(soap*, ns1__GetDataWAById*) deserialize from a stream
/// - int soap_write_ns1__GetDataWAById(soap, ns1__GetDataWAById*) serialize to a stream
class ns1__GetDataWAById : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWAByIdResponse is a complexType.
/// class ns1__GetDataWAByIdResponse operations:
/// - soap_new_ns1__GetDataWAByIdResponse(soap*) allocate
/// - soap_new_ns1__GetDataWAByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWAByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWAByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWAByIdResponse(soap*, ns1__GetDataWAByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataWAByIdResponse(soap, ns1__GetDataWAByIdResponse*) serialize to a stream
class ns1__GetDataWAByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_WS_insert is a complexType.
/// class ns1__Fk_USCOREWS_USCOREinsert operations:
/// - soap_new_ns1__Fk_USCOREWS_USCOREinsert(soap*) allocate
/// - soap_new_ns1__Fk_USCOREWS_USCOREinsert(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREWS_USCOREinsert(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREWS_USCOREinsert(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREWS_USCOREinsert(soap*, ns1__Fk_USCOREWS_USCOREinsert*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREWS_USCOREinsert(soap, ns1__Fk_USCOREWS_USCOREinsert*) serialize to a stream
class ns1__Fk_USCOREWS_USCOREinsert : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element fkName of type xs:string.
    char*                                fkName                         0;	///< Optional element.
/// Element wsdlUrl of type xs:string.
    char*                                wsdlUrl                        0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element optionGetCache of type xs:boolean.
    bool                                 optionGetCache                 1;	///< Required element.
/// Element optionSetDesc of type xs:boolean.
    bool                                 optionSetDesc                  1;	///< Required element.
};

/// "http://ws.abx/":Fk_WS_insertResponse is a complexType.
/// class ns1__Fk_USCOREWS_USCOREinsertResponse operations:
/// - soap_new_ns1__Fk_USCOREWS_USCOREinsertResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREWS_USCOREinsertResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREWS_USCOREinsertResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREWS_USCOREinsertResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREWS_USCOREinsertResponse(soap*, ns1__Fk_USCOREWS_USCOREinsertResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREWS_USCOREinsertResponse(soap, ns1__Fk_USCOREWS_USCOREinsertResponse*) serialize to a stream
class ns1__Fk_USCOREWS_USCOREinsertResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteData is a complexType.
/// class ns1__CanDeleteData operations:
/// - soap_new_ns1__CanDeleteData(soap*) allocate
/// - soap_new_ns1__CanDeleteData(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteData(soap*, ns1__CanDeleteData*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteData(soap, ns1__CanDeleteData*) serialize to a stream
class ns1__CanDeleteData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteDataResponse is a complexType.
/// class ns1__CanDeleteDataResponse operations:
/// - soap_new_ns1__CanDeleteDataResponse(soap*) allocate
/// - soap_new_ns1__CanDeleteDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteDataResponse(soap*, ns1__CanDeleteDataResponse*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteDataResponse(soap, ns1__CanDeleteDataResponse*) serialize to a stream
class ns1__CanDeleteDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteViewList is a complexType.
/// class ns1__Fk_USCOREgetRemoteViewList operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteViewList(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteViewList(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteViewList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteViewList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteViewList(soap*, ns1__Fk_USCOREgetRemoteViewList*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteViewList(soap, ns1__Fk_USCOREgetRemoteViewList*) serialize to a stream
class ns1__Fk_USCOREgetRemoteViewList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element host of type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element dbType of type xs:string.
    char*                                dbType                         0;	///< Optional element.
/// Element databaseName of type xs:string.
    char*                                databaseName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteViewListResponse is a complexType.
/// class ns1__Fk_USCOREgetRemoteViewListResponse operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteViewListResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteViewListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteViewListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteViewListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteViewListResponse(soap*, ns1__Fk_USCOREgetRemoteViewListResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteViewListResponse(soap, ns1__Fk_USCOREgetRemoteViewListResponse*) serialize to a stream
class ns1__Fk_USCOREgetRemoteViewListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataByIdForSecurity is a complexType.
/// class ns1__GetDataByIdForSecurity operations:
/// - soap_new_ns1__GetDataByIdForSecurity(soap*) allocate
/// - soap_new_ns1__GetDataByIdForSecurity(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataByIdForSecurity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataByIdForSecurity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataByIdForSecurity(soap*, ns1__GetDataByIdForSecurity*) deserialize from a stream
/// - int soap_write_ns1__GetDataByIdForSecurity(soap, ns1__GetDataByIdForSecurity*) serialize to a stream
class ns1__GetDataByIdForSecurity : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDataByIdForSecurityResponse is a complexType.
/// class ns1__GetDataByIdForSecurityResponse operations:
/// - soap_new_ns1__GetDataByIdForSecurityResponse(soap*) allocate
/// - soap_new_ns1__GetDataByIdForSecurityResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataByIdForSecurityResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataByIdForSecurityResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataByIdForSecurityResponse(soap*, ns1__GetDataByIdForSecurityResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataByIdForSecurityResponse(soap, ns1__GetDataByIdForSecurityResponse*) serialize to a stream
class ns1__GetDataByIdForSecurityResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUserConfig is a complexType.
/// class ns1__ModifyUserConfig operations:
/// - soap_new_ns1__ModifyUserConfig(soap*) allocate
/// - soap_new_ns1__ModifyUserConfig(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUserConfig(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUserConfig(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUserConfig(soap*, ns1__ModifyUserConfig*) deserialize from a stream
/// - int soap_write_ns1__ModifyUserConfig(soap, ns1__ModifyUserConfig*) serialize to a stream
class ns1__ModifyUserConfig : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element configList of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        configList                     0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUserConfigResponse is a complexType.
/// class ns1__ModifyUserConfigResponse operations:
/// - soap_new_ns1__ModifyUserConfigResponse(soap*) allocate
/// - soap_new_ns1__ModifyUserConfigResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUserConfigResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUserConfigResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUserConfigResponse(soap*, ns1__ModifyUserConfigResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyUserConfigResponse(soap, ns1__ModifyUserConfigResponse*) serialize to a stream
class ns1__ModifyUserConfigResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteProtocol is a complexType.
/// class ns1__DeleteProtocol operations:
/// - soap_new_ns1__DeleteProtocol(soap*) allocate
/// - soap_new_ns1__DeleteProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteProtocol(soap*, ns1__DeleteProtocol*) deserialize from a stream
/// - int soap_write_ns1__DeleteProtocol(soap, ns1__DeleteProtocol*) serialize to a stream
class ns1__DeleteProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":DeleteProtocolResponse is a complexType.
/// class ns1__DeleteProtocolResponse operations:
/// - soap_new_ns1__DeleteProtocolResponse(soap*) allocate
/// - soap_new_ns1__DeleteProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteProtocolResponse(soap*, ns1__DeleteProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteProtocolResponse(soap, ns1__DeleteProtocolResponse*) serialize to a stream
class ns1__DeleteProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DelSign is a complexType.
/// class ns1__DelSign operations:
/// - soap_new_ns1__DelSign(soap*) allocate
/// - soap_new_ns1__DelSign(soap*, int num) allocate array
/// - soap_new_req_ns1__DelSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelSign(soap*, ns1__DelSign*) deserialize from a stream
/// - int soap_write_ns1__DelSign(soap, ns1__DelSign*) serialize to a stream
class ns1__DelSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":DelSignResponse is a complexType.
/// class ns1__DelSignResponse operations:
/// - soap_new_ns1__DelSignResponse(soap*) allocate
/// - soap_new_ns1__DelSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DelSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelSignResponse(soap*, ns1__DelSignResponse*) deserialize from a stream
/// - int soap_write_ns1__DelSignResponse(soap, ns1__DelSignResponse*) serialize to a stream
class ns1__DelSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":VerifyExpression is a complexType.
/// class ns1__VerifyExpression operations:
/// - soap_new_ns1__VerifyExpression(soap*) allocate
/// - soap_new_ns1__VerifyExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__VerifyExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__VerifyExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__VerifyExpression(soap*, ns1__VerifyExpression*) deserialize from a stream
/// - int soap_write_ns1__VerifyExpression(soap, ns1__VerifyExpression*) serialize to a stream
class ns1__VerifyExpression : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
};

/// "http://ws.abx/":VerifyExpressionResponse is a complexType.
/// class ns1__VerifyExpressionResponse operations:
/// - soap_new_ns1__VerifyExpressionResponse(soap*) allocate
/// - soap_new_ns1__VerifyExpressionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__VerifyExpressionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__VerifyExpressionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__VerifyExpressionResponse(soap*, ns1__VerifyExpressionResponse*) deserialize from a stream
/// - int soap_write_ns1__VerifyExpressionResponse(soap, ns1__VerifyExpressionResponse*) serialize to a stream
class ns1__VerifyExpressionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFilter is a complexType.
/// class ns1__DeleteFilter operations:
/// - soap_new_ns1__DeleteFilter(soap*) allocate
/// - soap_new_ns1__DeleteFilter(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFilter(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFilter(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFilter(soap*, ns1__DeleteFilter*) deserialize from a stream
/// - int soap_write_ns1__DeleteFilter(soap, ns1__DeleteFilter*) serialize to a stream
class ns1__DeleteFilter : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element filters of type "http://ws.abx/":AbxFilterList.
    ns1__AbxFilterList*                  filters                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFilterResponse is a complexType.
/// class ns1__DeleteFilterResponse operations:
/// - soap_new_ns1__DeleteFilterResponse(soap*) allocate
/// - soap_new_ns1__DeleteFilterResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFilterResponse(soap*, ns1__DeleteFilterResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFilterResponse(soap, ns1__DeleteFilterResponse*) serialize to a stream
class ns1__DeleteFilterResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxFilterResult.
    ns1__AbxFilterResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateRaccoglitore is a complexType.
/// class ns1__CreateRaccoglitore operations:
/// - soap_new_ns1__CreateRaccoglitore(soap*) allocate
/// - soap_new_ns1__CreateRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateRaccoglitore(soap*, ns1__CreateRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__CreateRaccoglitore(soap, ns1__CreateRaccoglitore*) serialize to a stream
class ns1__CreateRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Template2Update of type "http://ws.abx/":abxTemplate.
    ns1__abxTemplate*                    Template2Update                0;	///< Optional element.
/// Element Container2Update of type "http://ws.abx/":abxContainer.
    ns1__abxContainer*                   Container2Update               0;	///< Optional element.
/// Element DynorgParam of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          DynorgParam                    0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
/// Element replicationList of type "http://ws.abx/":abxReplicationList.
    ns1__abxReplicationList*             replicationList                0;	///< Optional element.
};

/// "http://ws.abx/":CreateRaccoglitoreResponse is a complexType.
/// class ns1__CreateRaccoglitoreResponse operations:
/// - soap_new_ns1__CreateRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__CreateRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateRaccoglitoreResponse(soap*, ns1__CreateRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateRaccoglitoreResponse(soap, ns1__CreateRaccoglitoreResponse*) serialize to a stream
class ns1__CreateRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRaccoglitoreResult.
    ns1__abxRaccoglitoreResult*          return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkContainerToContainer is a complexType.
/// class ns1__CanInsertLinkContainerToContainer operations:
/// - soap_new_ns1__CanInsertLinkContainerToContainer(soap*) allocate
/// - soap_new_ns1__CanInsertLinkContainerToContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkContainerToContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkContainerToContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkContainerToContainer(soap*, ns1__CanInsertLinkContainerToContainer*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkContainerToContainer(soap, ns1__CanInsertLinkContainerToContainer*) serialize to a stream
class ns1__CanInsertLinkContainerToContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkContainerToContainerResponse is a complexType.
/// class ns1__CanInsertLinkContainerToContainerResponse operations:
/// - soap_new_ns1__CanInsertLinkContainerToContainerResponse(soap*) allocate
/// - soap_new_ns1__CanInsertLinkContainerToContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkContainerToContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkContainerToContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkContainerToContainerResponse(soap*, ns1__CanInsertLinkContainerToContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkContainerToContainerResponse(soap, ns1__CanInsertLinkContainerToContainerResponse*) serialize to a stream
class ns1__CanInsertLinkContainerToContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFileWA is a complexType.
/// class ns1__UploadEndFileWA operations:
/// - soap_new_ns1__UploadEndFileWA(soap*) allocate
/// - soap_new_ns1__UploadEndFileWA(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFileWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFileWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFileWA(soap*, ns1__UploadEndFileWA*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFileWA(soap, ns1__UploadEndFileWA*) serialize to a stream
class ns1__UploadEndFileWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element codePreviousVersion of type xs:string.
    char*                                codePreviousVersion            0;	///< Optional element.
/// Element docTemplateName of type xs:string.
    char*                                docTemplateName                0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFileWAResponse is a complexType.
/// class ns1__UploadEndFileWAResponse operations:
/// - soap_new_ns1__UploadEndFileWAResponse(soap*) allocate
/// - soap_new_ns1__UploadEndFileWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFileWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFileWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFileWAResponse(soap*, ns1__UploadEndFileWAResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFileWAResponse(soap, ns1__UploadEndFileWAResponse*) serialize to a stream
class ns1__UploadEndFileWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canCreateRaccoglitore is a complexType.
/// class ns1__canCreateRaccoglitore operations:
/// - soap_new_ns1__canCreateRaccoglitore(soap*) allocate
/// - soap_new_ns1__canCreateRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateRaccoglitore(soap*, ns1__canCreateRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__canCreateRaccoglitore(soap, ns1__canCreateRaccoglitore*) serialize to a stream
class ns1__canCreateRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerParentName of type xs:string.
    char*                                ContainerParentName            0;	///< Optional element.
/// class _ns1__canCreateRaccoglitore_parentDataID operations:
/// - soap_new__ns1__canCreateRaccoglitore_parentDataID(soap*) allocate
/// - soap_new__ns1__canCreateRaccoglitore_parentDataID(soap*, int num) allocate array
/// - soap_new_req__ns1__canCreateRaccoglitore_parentDataID(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__canCreateRaccoglitore_parentDataID(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__canCreateRaccoglitore_parentDataID(soap*, _ns1__canCreateRaccoglitore_parentDataID*) deserialize from a stream
/// - int soap_write__ns1__canCreateRaccoglitore_parentDataID(soap, _ns1__canCreateRaccoglitore_parentDataID*) serialize to a stream
    class _ns1__canCreateRaccoglitore_parentDataID
    {
/// Element container_InstanceName of type xs:string.
    char*                                container_USCOREInstanceName   1;	///< Required element.
/// Element hexDataID of type xs:string.
    char*                                hexDataID                      1;	///< Required element.
    }                                   *parentDataID                   0;	///< Optional element.
};

/// "http://ws.abx/":canCreateRaccoglitoreResponse is a complexType.
/// class ns1__canCreateRaccoglitoreResponse operations:
/// - soap_new_ns1__canCreateRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__canCreateRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateRaccoglitoreResponse(soap*, ns1__canCreateRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__canCreateRaccoglitoreResponse(soap, ns1__canCreateRaccoglitoreResponse*) serialize to a stream
class ns1__canCreateRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyLinkContainerToContainer is a complexType.
/// class ns1__CanModifyLinkContainerToContainer operations:
/// - soap_new_ns1__CanModifyLinkContainerToContainer(soap*) allocate
/// - soap_new_ns1__CanModifyLinkContainerToContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyLinkContainerToContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyLinkContainerToContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyLinkContainerToContainer(soap*, ns1__CanModifyLinkContainerToContainer*) deserialize from a stream
/// - int soap_write_ns1__CanModifyLinkContainerToContainer(soap, ns1__CanModifyLinkContainerToContainer*) serialize to a stream
class ns1__CanModifyLinkContainerToContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyLinkContainerToContainerResponse is a complexType.
/// class ns1__CanModifyLinkContainerToContainerResponse operations:
/// - soap_new_ns1__CanModifyLinkContainerToContainerResponse(soap*) allocate
/// - soap_new_ns1__CanModifyLinkContainerToContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyLinkContainerToContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyLinkContainerToContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyLinkContainerToContainerResponse(soap*, ns1__CanModifyLinkContainerToContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CanModifyLinkContainerToContainerResponse(soap, ns1__CanModifyLinkContainerToContainerResponse*) serialize to a stream
class ns1__CanModifyLinkContainerToContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetQueryParam is a complexType.
/// class ns1__GetQueryParam operations:
/// - soap_new_ns1__GetQueryParam(soap*) allocate
/// - soap_new_ns1__GetQueryParam(soap*, int num) allocate array
/// - soap_new_req_ns1__GetQueryParam(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetQueryParam(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetQueryParam(soap*, ns1__GetQueryParam*) deserialize from a stream
/// - int soap_write_ns1__GetQueryParam(soap, ns1__GetQueryParam*) serialize to a stream
class ns1__GetQueryParam : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element option4query of type "http://ws.abx/":abxOption4Query.
    ns1__abxOption4Query*                option4query                   0;	///< Optional element.
};

/// "http://ws.abx/":GetQueryParamResponse is a complexType.
/// class ns1__GetQueryParamResponse operations:
/// - soap_new_ns1__GetQueryParamResponse(soap*) allocate
/// - soap_new_ns1__GetQueryParamResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetQueryParamResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetQueryParamResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetQueryParamResponse(soap*, ns1__GetQueryParamResponse*) deserialize from a stream
/// - int soap_write_ns1__GetQueryParamResponse(soap, ns1__GetQueryParamResponse*) serialize to a stream
class ns1__GetQueryParamResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRetOption4QueryResult.
    ns1__abxRetOption4QueryResult*       return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxRetOption4QueryResult is a complexType.
/// class ns1__abxRetOption4QueryResult operations:
/// - soap_new_ns1__abxRetOption4QueryResult(soap*) allocate
/// - soap_new_ns1__abxRetOption4QueryResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxRetOption4QueryResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxRetOption4QueryResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxRetOption4QueryResult(soap*, ns1__abxRetOption4QueryResult*) deserialize from a stream
/// - int soap_write_ns1__abxRetOption4QueryResult(soap, ns1__abxRetOption4QueryResult*) serialize to a stream
class ns1__abxRetOption4QueryResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element allFields of type "http://ws.abx/":abxQFieldList.
    ns1__abxQFieldList*                  allFields                      1;	///< Required element.
/// Element allFieldsByObject of type "http://ws.abx/":abxQobjectList.
    ns1__abxQobjectList*                 allFieldsByObject              1;	///< Required element.
/// Element allFieldsByTemplate of type "http://ws.abx/":abxQtemplateList.
    ns1__abxQtemplateList*               allFieldsByTemplate            1;	///< Required element.
/// Element commonFields of type "http://ws.abx/":abxQFieldList.
    ns1__abxQFieldList*                  commonFields                   1;	///< Required element.
/// Element option4Query of type "http://ws.abx/":abxOption4Query.
    ns1__abxOption4Query*                option4Query                   1;	///< Required element.
};

/// "http://ws.abx/":abxQFieldList is a complexType.
/// class ns1__abxQFieldList operations:
/// - soap_new_ns1__abxQFieldList(soap*) allocate
/// - soap_new_ns1__abxQFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQFieldList(soap*, ns1__abxQFieldList*) deserialize from a stream
/// - int soap_write_ns1__abxQFieldList(soap, ns1__abxQFieldList*) serialize to a stream
class ns1__abxQFieldList : public xsd__anyType
{ public:
/// Size of array of ns1__abxQField* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns1__abxQField* of length 1..unbounded
    ns1__abxQField*                     *list                           1;
};

/// "http://ws.abx/":abxQobjectList is a complexType.
/// class ns1__abxQobjectList operations:
/// - soap_new_ns1__abxQobjectList(soap*) allocate
/// - soap_new_ns1__abxQobjectList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQobjectList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQobjectList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQobjectList(soap*, ns1__abxQobjectList*) deserialize from a stream
/// - int soap_write_ns1__abxQobjectList(soap, ns1__abxQobjectList*) serialize to a stream
class ns1__abxQobjectList : public xsd__anyType
{ public:
/// Size of array of ns1__abxQobject* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns1__abxQobject* of length 1..unbounded
    ns1__abxQobject*                    *list                           1;
};

/// "http://ws.abx/":abxQobject is a complexType.
/// class ns1__abxQobject operations:
/// - soap_new_ns1__abxQobject(soap*) allocate
/// - soap_new_ns1__abxQobject(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQobject(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQobject(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQobject(soap*, ns1__abxQobject*) deserialize from a stream
/// - int soap_write_ns1__abxQobject(soap, ns1__abxQobject*) serialize to a stream
class ns1__abxQobject : public xsd__anyType
{ public:
/// Element ObjName of type xs:string.
    char*                                ObjName                        1;	///< Required element.
/// Element fields of type "http://ws.abx/":abxQFieldList.
    ns1__abxQFieldList*                  fields                         1;	///< Required element.
};

/// "http://ws.abx/":abxQtemplateList is a complexType.
/// class ns1__abxQtemplateList operations:
/// - soap_new_ns1__abxQtemplateList(soap*) allocate
/// - soap_new_ns1__abxQtemplateList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQtemplateList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQtemplateList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQtemplateList(soap*, ns1__abxQtemplateList*) deserialize from a stream
/// - int soap_write_ns1__abxQtemplateList(soap, ns1__abxQtemplateList*) serialize to a stream
class ns1__abxQtemplateList : public xsd__anyType
{ public:
/// Size of array of ns1__abxQtemplate* is 1..unbounded
   $int                                  __sizelist                     1;
/// Pointer to array ns1__abxQtemplate* of length 1..unbounded
    ns1__abxQtemplate*                  *list                           1;
};

/// "http://ws.abx/":abxQtemplate is a complexType.
/// class ns1__abxQtemplate operations:
/// - soap_new_ns1__abxQtemplate(soap*) allocate
/// - soap_new_ns1__abxQtemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__abxQtemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxQtemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxQtemplate(soap*, ns1__abxQtemplate*) deserialize from a stream
/// - int soap_write_ns1__abxQtemplate(soap, ns1__abxQtemplate*) serialize to a stream
class ns1__abxQtemplate : public xsd__anyType
{ public:
/// Element templateName of type xs:string.
    char*                                templateName                   1;	///< Required element.
/// Element fields of type "http://ws.abx/":abxQFieldList.
    ns1__abxQFieldList*                  fields                         1;	///< Required element.
};

/// "http://ws.abx/":GetSDKWatchFolderDirectories is a complexType.
/// class ns1__GetSDKWatchFolderDirectories operations:
/// - soap_new_ns1__GetSDKWatchFolderDirectories(soap*) allocate
/// - soap_new_ns1__GetSDKWatchFolderDirectories(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKWatchFolderDirectories(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKWatchFolderDirectories(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKWatchFolderDirectories(soap*, ns1__GetSDKWatchFolderDirectories*) deserialize from a stream
/// - int soap_write_ns1__GetSDKWatchFolderDirectories(soap, ns1__GetSDKWatchFolderDirectories*) serialize to a stream
class ns1__GetSDKWatchFolderDirectories : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element serverURL of type xs:string.
    char*                                serverURL                      0;	///< Optional element.
/// Element serverRoot of type xs:string.
    char*                                serverRoot                     0;	///< Optional element.
/// Element serverType of type xs:string.
    char*                                serverType                     0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKWatchFolderDirectoriesResponse is a complexType.
/// class ns1__GetSDKWatchFolderDirectoriesResponse operations:
/// - soap_new_ns1__GetSDKWatchFolderDirectoriesResponse(soap*) allocate
/// - soap_new_ns1__GetSDKWatchFolderDirectoriesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKWatchFolderDirectoriesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKWatchFolderDirectoriesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKWatchFolderDirectoriesResponse(soap*, ns1__GetSDKWatchFolderDirectoriesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKWatchFolderDirectoriesResponse(soap, ns1__GetSDKWatchFolderDirectoriesResponse*) serialize to a stream
class ns1__GetSDKWatchFolderDirectoriesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetArchSostRules is a complexType.
/// class ns1__GetArchSostRules operations:
/// - soap_new_ns1__GetArchSostRules(soap*) allocate
/// - soap_new_ns1__GetArchSostRules(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchSostRules(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchSostRules(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchSostRules(soap*, ns1__GetArchSostRules*) deserialize from a stream
/// - int soap_write_ns1__GetArchSostRules(soap, ns1__GetArchSostRules*) serialize to a stream
class ns1__GetArchSostRules : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetArchSostRulesResponse is a complexType.
/// class ns1__GetArchSostRulesResponse operations:
/// - soap_new_ns1__GetArchSostRulesResponse(soap*) allocate
/// - soap_new_ns1__GetArchSostRulesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchSostRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchSostRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchSostRulesResponse(soap*, ns1__GetArchSostRulesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetArchSostRulesResponse(soap, ns1__GetArchSostRulesResponse*) serialize to a stream
class ns1__GetArchSostRulesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchSostResult.
    ns1__abxArchSostResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxArchSostResult is a complexType.
/// class ns1__abxArchSostResult operations:
/// - soap_new_ns1__abxArchSostResult(soap*) allocate
/// - soap_new_ns1__abxArchSostResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchSostResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchSostResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchSostResult(soap*, ns1__abxArchSostResult*) deserialize from a stream
/// - int soap_write_ns1__abxArchSostResult(soap, ns1__abxArchSostResult*) serialize to a stream
class ns1__abxArchSostResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxArchSostRuleList.
    ns1__abxArchSostRuleList*            list                           1;	///< Required element.
};

/// "http://ws.abx/":abxArchSostRuleList is a complexType.
/// class ns1__abxArchSostRuleList operations:
/// - soap_new_ns1__abxArchSostRuleList(soap*) allocate
/// - soap_new_ns1__abxArchSostRuleList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchSostRuleList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchSostRuleList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchSostRuleList(soap*, ns1__abxArchSostRuleList*) deserialize from a stream
/// - int soap_write_ns1__abxArchSostRuleList(soap, ns1__abxArchSostRuleList*) serialize to a stream
class ns1__abxArchSostRuleList : public xsd__anyType
{ public:
/// Size of array of ns1__abxArchSostRule* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxArchSostRule* of length 1..unbounded
    ns1__abxArchSostRule*               *dataList                       1;
};

/// "http://ws.abx/":abxArchSostRule is a complexType.
/// class ns1__abxArchSostRule operations:
/// - soap_new_ns1__abxArchSostRule(soap*) allocate
/// - soap_new_ns1__abxArchSostRule(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchSostRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchSostRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchSostRule(soap*, ns1__abxArchSostRule*) deserialize from a stream
/// - int soap_write_ns1__abxArchSostRule(soap, ns1__abxArchSostRule*) serialize to a stream
class ns1__abxArchSostRule : public xsd__anyType
{ public:
/// Size of abxArchSostRuleFilters array is 1..unbounded
   $int                                  __sizeabxArchSostRuleFilters   1;
/// class _ns1__abxArchSostRule_abxArchSostRuleFilters operations:
/// - soap_new__ns1__abxArchSostRule_abxArchSostRuleFilters(soap*) allocate
/// - soap_new__ns1__abxArchSostRule_abxArchSostRuleFilters(soap*, int num) allocate array
/// - soap_new_req__ns1__abxArchSostRule_abxArchSostRuleFilters(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxArchSostRule_abxArchSostRuleFilters(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxArchSostRule_abxArchSostRuleFilters(soap*, _ns1__abxArchSostRule_abxArchSostRuleFilters*) deserialize from a stream
/// - int soap_write__ns1__abxArchSostRule_abxArchSostRuleFilters(soap, _ns1__abxArchSostRule_abxArchSostRuleFilters*) serialize to a stream
    class _ns1__abxArchSostRule_abxArchSostRuleFilters
    {
/// Element filterId of type xs:string.
    char*                                filterId                       1;	///< Required element.
/// Element ruleId of type xs:string.
    char*                                ruleId                         1;	///< Required element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element protocolID of type xs:string.
    char*                                protocolID                     1;	///< Required element.
/// Element protocolDateFrom of type xs:string.
    char*                                protocolDateFrom               1;	///< Required element.
/// Element protocolDateTo of type xs:string.
    char*                                protocolDateTo                 1;	///< Required element.
/// Element protocolNumFrom of type xs:string.
    char*                                protocolNumFrom                1;	///< Required element.
/// Element protocolNumTo of type xs:string.
    char*                                protocolNumTo                  1;	///< Required element.
/// Element fromValue of type xs:string.
    char*                                fromValue                      1;	///< Required element.
/// Element toValue of type xs:string.
    char*                                toValue                        1;	///< Required element.
/// Element shiftFromValue of type xs:int.
    int                                  shiftFromValue                 1;	///< Required element.
/// Element shiftToValue of type xs:int.
    int                                  shiftToValue                   1;	///< Required element.
/// Element replaceDate of type xs:boolean.
    bool                                 replaceDate                    1;	///< Required element.
    }                                   *abxArchSostRuleFilters         1;
/// Size of abxArchSostRuleMap array is 1..unbounded
   $int                                  __sizeabxArchSostRuleMap       1;
/// class _ns1__abxArchSostRule_abxArchSostRuleMap operations:
/// - soap_new__ns1__abxArchSostRule_abxArchSostRuleMap(soap*) allocate
/// - soap_new__ns1__abxArchSostRule_abxArchSostRuleMap(soap*, int num) allocate array
/// - soap_new_req__ns1__abxArchSostRule_abxArchSostRuleMap(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxArchSostRule_abxArchSostRuleMap(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxArchSostRule_abxArchSostRuleMap(soap*, _ns1__abxArchSostRule_abxArchSostRuleMap*) deserialize from a stream
/// - int soap_write__ns1__abxArchSostRule_abxArchSostRuleMap(soap, _ns1__abxArchSostRule_abxArchSostRuleMap*) serialize to a stream
    class _ns1__abxArchSostRule_abxArchSostRuleMap
    {
/// Element mapId of type xs:string.
    char*                                mapId                          1;	///< Required element.
/// Element ruleId of type xs:string.
    char*                                ruleId                         1;	///< Required element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      1;	///< Required element.
/// Element isProtocol of type xs:boolean.
    bool                                 isProtocol                     1;	///< Required element.
/// Element metadataClasseDocumentaleName of type xs:string.
    char*                                metadataClasseDocumentaleName  1;	///< Required element.
    }                                   *abxArchSostRuleMap             1;
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element classeDocumentaleName of type xs:string.
    char*                                classeDocumentaleName          1;	///< Required element.
/// Element getSignedFile of type xs:boolean.
    bool                                 getSignedFile                  1;	///< Required element.
/// Element zipFile of type xs:boolean.
    bool                                 zipFile                        1;	///< Required element.
};

/// "http://ws.abx/":DownloadFileWAByFileUniqueCode is a complexType.
/// class ns1__DownloadFileWAByFileUniqueCode operations:
/// - soap_new_ns1__DownloadFileWAByFileUniqueCode(soap*) allocate
/// - soap_new_ns1__DownloadFileWAByFileUniqueCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileWAByFileUniqueCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileWAByFileUniqueCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileWAByFileUniqueCode(soap*, ns1__DownloadFileWAByFileUniqueCode*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileWAByFileUniqueCode(soap, ns1__DownloadFileWAByFileUniqueCode*) serialize to a stream
class ns1__DownloadFileWAByFileUniqueCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileUniqueCode of type xs:string.
    char*                                fileUniqueCode                 0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileWAByFileUniqueCodeResponse is a complexType.
/// class ns1__DownloadFileWAByFileUniqueCodeResponse operations:
/// - soap_new_ns1__DownloadFileWAByFileUniqueCodeResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileWAByFileUniqueCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileWAByFileUniqueCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileWAByFileUniqueCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileWAByFileUniqueCodeResponse(soap*, ns1__DownloadFileWAByFileUniqueCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileWAByFileUniqueCodeResponse(soap, ns1__DownloadFileWAByFileUniqueCodeResponse*) serialize to a stream
class ns1__DownloadFileWAByFileUniqueCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKVariables is a complexType.
/// class ns1__GetSDKVariables operations:
/// - soap_new_ns1__GetSDKVariables(soap*) allocate
/// - soap_new_ns1__GetSDKVariables(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKVariables(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKVariables(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKVariables(soap*, ns1__GetSDKVariables*) deserialize from a stream
/// - int soap_write_ns1__GetSDKVariables(soap, ns1__GetSDKVariables*) serialize to a stream
class ns1__GetSDKVariables : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKVariablesResponse is a complexType.
/// class ns1__GetSDKVariablesResponse operations:
/// - soap_new_ns1__GetSDKVariablesResponse(soap*) allocate
/// - soap_new_ns1__GetSDKVariablesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKVariablesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKVariablesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKVariablesResponse(soap*, ns1__GetSDKVariablesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKVariablesResponse(soap, ns1__GetSDKVariablesResponse*) serialize to a stream
class ns1__GetSDKVariablesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadEndFileWA is a complexType.
/// class ns1__DownloadEndFileWA operations:
/// - soap_new_ns1__DownloadEndFileWA(soap*) allocate
/// - soap_new_ns1__DownloadEndFileWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadEndFileWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadEndFileWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadEndFileWA(soap*, ns1__DownloadEndFileWA*) deserialize from a stream
/// - int soap_write_ns1__DownloadEndFileWA(soap, ns1__DownloadEndFileWA*) serialize to a stream
class ns1__DownloadEndFileWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadEndFileWAResponse is a complexType.
/// class ns1__DownloadEndFileWAResponse operations:
/// - soap_new_ns1__DownloadEndFileWAResponse(soap*) allocate
/// - soap_new_ns1__DownloadEndFileWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadEndFileWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadEndFileWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadEndFileWAResponse(soap*, ns1__DownloadEndFileWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadEndFileWAResponse(soap, ns1__DownloadEndFileWAResponse*) serialize to a stream
class ns1__DownloadEndFileWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteClasseDocumentale is a complexType.
/// class ns1__DeleteClasseDocumentale operations:
/// - soap_new_ns1__DeleteClasseDocumentale(soap*) allocate
/// - soap_new_ns1__DeleteClasseDocumentale(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteClasseDocumentale(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteClasseDocumentale(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteClasseDocumentale(soap*, ns1__DeleteClasseDocumentale*) deserialize from a stream
/// - int soap_write_ns1__DeleteClasseDocumentale(soap, ns1__DeleteClasseDocumentale*) serialize to a stream
class ns1__DeleteClasseDocumentale : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ClasseDocumentaleName of type xs:string.
    char*                                ClasseDocumentaleName          0;	///< Optional element.
};

/// "http://ws.abx/":DeleteClasseDocumentaleResponse is a complexType.
/// class ns1__DeleteClasseDocumentaleResponse operations:
/// - soap_new_ns1__DeleteClasseDocumentaleResponse(soap*) allocate
/// - soap_new_ns1__DeleteClasseDocumentaleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteClasseDocumentaleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteClasseDocumentaleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteClasseDocumentaleResponse(soap*, ns1__DeleteClasseDocumentaleResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteClasseDocumentaleResponse(soap, ns1__DeleteClasseDocumentaleResponse*) serialize to a stream
class ns1__DeleteClasseDocumentaleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxClasseDocumentaleResult.
    ns1__abxClasseDocumentaleResult*     return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxClasseDocumentaleResult is a complexType.
/// class ns1__abxClasseDocumentaleResult operations:
/// - soap_new_ns1__abxClasseDocumentaleResult(soap*) allocate
/// - soap_new_ns1__abxClasseDocumentaleResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxClasseDocumentaleResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxClasseDocumentaleResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxClasseDocumentaleResult(soap*, ns1__abxClasseDocumentaleResult*) deserialize from a stream
/// - int soap_write_ns1__abxClasseDocumentaleResult(soap, ns1__abxClasseDocumentaleResult*) serialize to a stream
class ns1__abxClasseDocumentaleResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxClasseDocumentaleList.
    ns1__abxClasseDocumentaleList*       list                           1;	///< Required element.
};

/// "http://ws.abx/":abxClasseDocumentaleList is a complexType.
/// class ns1__abxClasseDocumentaleList operations:
/// - soap_new_ns1__abxClasseDocumentaleList(soap*) allocate
/// - soap_new_ns1__abxClasseDocumentaleList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxClasseDocumentaleList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxClasseDocumentaleList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxClasseDocumentaleList(soap*, ns1__abxClasseDocumentaleList*) deserialize from a stream
/// - int soap_write_ns1__abxClasseDocumentaleList(soap, ns1__abxClasseDocumentaleList*) serialize to a stream
class ns1__abxClasseDocumentaleList : public xsd__anyType
{ public:
/// Size of array of ns1__abxClasseDocumentale* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxClasseDocumentale* of length 1..unbounded
    ns1__abxClasseDocumentale*          *dataList                       1;
};

/// "http://ws.abx/":abxClasseDocumentale is a complexType.
/// class ns1__abxClasseDocumentale operations:
/// - soap_new_ns1__abxClasseDocumentale(soap*) allocate
/// - soap_new_ns1__abxClasseDocumentale(soap*, int num) allocate array
/// - soap_new_req_ns1__abxClasseDocumentale(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxClasseDocumentale(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxClasseDocumentale(soap*, ns1__abxClasseDocumentale*) deserialize from a stream
/// - int soap_write_ns1__abxClasseDocumentale(soap, ns1__abxClasseDocumentale*) serialize to a stream
class ns1__abxClasseDocumentale : public xsd__anyType
{ public:
/// Size of Metadata array is 1..unbounded
   $int                                  __sizeMetadata                 1;
/// class _ns1__abxClasseDocumentale_Metadata operations:
/// - soap_new__ns1__abxClasseDocumentale_Metadata(soap*) allocate
/// - soap_new__ns1__abxClasseDocumentale_Metadata(soap*, int num) allocate array
/// - soap_new_req__ns1__abxClasseDocumentale_Metadata(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxClasseDocumentale_Metadata(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxClasseDocumentale_Metadata(soap*, _ns1__abxClasseDocumentale_Metadata*) deserialize from a stream
/// - int soap_write__ns1__abxClasseDocumentale_Metadata(soap, _ns1__abxClasseDocumentale_Metadata*) serialize to a stream
    class _ns1__abxClasseDocumentale_Metadata
    {
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element index of type xs:long.
    LONG64                               index                          1;	///< Required element.
/// Element optional of type xs:boolean.
    bool                                 optional                       1;	///< Required element.
    }                                   *Metadata                       1;
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element company of type xs:string.
    char*                                company                        1;	///< Required element.
/// Element preserveMaxAge of type xs:long.
    LONG64                               preserveMaxAge                 1;	///< Required element.
/// Element preserveNumDays of type xs:long.
    LONG64                               preserveNumDays                1;	///< Required element.
/// Element automaticallySigned of type xs:boolean.
    bool                                 automaticallySigned            1;	///< Required element.
/// Element automaticallyTimestamped of type xs:boolean.
    bool                                 automaticallyTimestamped       1;	///< Required element.
/// Element makeISO of type xs:boolean.
    bool                                 makeISO                        1;	///< Required element.
};

/// "http://ws.abx/":CanDeleteFile is a complexType.
/// class ns1__CanDeleteFile operations:
/// - soap_new_ns1__CanDeleteFile(soap*) allocate
/// - soap_new_ns1__CanDeleteFile(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteFile(soap*, ns1__CanDeleteFile*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteFile(soap, ns1__CanDeleteFile*) serialize to a stream
class ns1__CanDeleteFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteFileResponse is a complexType.
/// class ns1__CanDeleteFileResponse operations:
/// - soap_new_ns1__CanDeleteFileResponse(soap*) allocate
/// - soap_new_ns1__CanDeleteFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteFileResponse(soap*, ns1__CanDeleteFileResponse*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteFileResponse(soap, ns1__CanDeleteFileResponse*) serialize to a stream
class ns1__CanDeleteFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertUserInGroup is a complexType.
/// class ns1__InsertUserInGroup operations:
/// - soap_new_ns1__InsertUserInGroup(soap*) allocate
/// - soap_new_ns1__InsertUserInGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUserInGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUserInGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUserInGroup(soap*, ns1__InsertUserInGroup*) deserialize from a stream
/// - int soap_write_ns1__InsertUserInGroup(soap, ns1__InsertUserInGroup*) serialize to a stream
class ns1__InsertUserInGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element groupName of type xs:string.
    char*                                groupName                      0;	///< Optional element.
};

/// "http://ws.abx/":InsertUserInGroupResponse is a complexType.
/// class ns1__InsertUserInGroupResponse operations:
/// - soap_new_ns1__InsertUserInGroupResponse(soap*) allocate
/// - soap_new_ns1__InsertUserInGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUserInGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUserInGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUserInGroupResponse(soap*, ns1__InsertUserInGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertUserInGroupResponse(soap, ns1__InsertUserInGroupResponse*) serialize to a stream
class ns1__InsertUserInGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":EndPermissionSettings is a complexType.
/// class ns1__EndPermissionSettings operations:
/// - soap_new_ns1__EndPermissionSettings(soap*) allocate
/// - soap_new_ns1__EndPermissionSettings(soap*, int num) allocate array
/// - soap_new_req_ns1__EndPermissionSettings(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__EndPermissionSettings(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__EndPermissionSettings(soap*, ns1__EndPermissionSettings*) deserialize from a stream
/// - int soap_write_ns1__EndPermissionSettings(soap, ns1__EndPermissionSettings*) serialize to a stream
class ns1__EndPermissionSettings : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element permissionToSet of type "http://ws.abx/":abxPermission.
    ns1__abxPermission*                  permissionToSet                0;	///< Optional element.
};

/// "http://ws.abx/":EndPermissionSettingsResponse is a complexType.
/// class ns1__EndPermissionSettingsResponse operations:
/// - soap_new_ns1__EndPermissionSettingsResponse(soap*) allocate
/// - soap_new_ns1__EndPermissionSettingsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__EndPermissionSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__EndPermissionSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__EndPermissionSettingsResponse(soap*, ns1__EndPermissionSettingsResponse*) deserialize from a stream
/// - int soap_write_ns1__EndPermissionSettingsResponse(soap, ns1__EndPermissionSettingsResponse*) serialize to a stream
class ns1__EndPermissionSettingsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxPermissionResult.
    ns1__abxPermissionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxPermissionResult is a complexType.
/// class ns1__abxPermissionResult operations:
/// - soap_new_ns1__abxPermissionResult(soap*) allocate
/// - soap_new_ns1__abxPermissionResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxPermissionResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxPermissionResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxPermissionResult(soap*, ns1__abxPermissionResult*) deserialize from a stream
/// - int soap_write_ns1__abxPermissionResult(soap, ns1__abxPermissionResult*) serialize to a stream
class ns1__abxPermissionResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxPermissionElenco.
    ns1__abxPermissionElenco*            list                           1;	///< Required element.
};

/// "http://ws.abx/":abxPermissionElenco is a complexType.
/// class ns1__abxPermissionElenco operations:
/// - soap_new_ns1__abxPermissionElenco(soap*) allocate
/// - soap_new_ns1__abxPermissionElenco(soap*, int num) allocate array
/// - soap_new_req_ns1__abxPermissionElenco(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxPermissionElenco(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxPermissionElenco(soap*, ns1__abxPermissionElenco*) deserialize from a stream
/// - int soap_write_ns1__abxPermissionElenco(soap, ns1__abxPermissionElenco*) serialize to a stream
class ns1__abxPermissionElenco : public xsd__anyType
{ public:
/// Size of array of ns1__abxPermission* is 1..unbounded
   $int                                  __sizelista                    1;
/// Pointer to array ns1__abxPermission* of length 1..unbounded
    ns1__abxPermission*                 *lista                          1;
};

/// "http://ws.abx/":GetDownloadDetailByFilecode is a complexType.
/// class ns1__GetDownloadDetailByFilecode operations:
/// - soap_new_ns1__GetDownloadDetailByFilecode(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByFilecode(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByFilecode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByFilecode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByFilecode(soap*, ns1__GetDownloadDetailByFilecode*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByFilecode(soap, ns1__GetDownloadDetailByFilecode*) serialize to a stream
class ns1__GetDownloadDetailByFilecode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByFilecodeResponse is a complexType.
/// class ns1__GetDownloadDetailByFilecodeResponse operations:
/// - soap_new_ns1__GetDownloadDetailByFilecodeResponse(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByFilecodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByFilecodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByFilecodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByFilecodeResponse(soap*, ns1__GetDownloadDetailByFilecodeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByFilecodeResponse(soap, ns1__GetDownloadDetailByFilecodeResponse*) serialize to a stream
class ns1__GetDownloadDetailByFilecodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canCreateContainer is a complexType.
/// class ns1__canCreateContainer operations:
/// - soap_new_ns1__canCreateContainer(soap*) allocate
/// - soap_new_ns1__canCreateContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateContainer(soap*, ns1__canCreateContainer*) deserialize from a stream
/// - int soap_write_ns1__canCreateContainer(soap, ns1__canCreateContainer*) serialize to a stream
class ns1__canCreateContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerParentName of type xs:string.
    char*                                ContainerParentName            0;	///< Optional element.
/// class _ns1__canCreateContainer_parentDataID operations:
/// - soap_new__ns1__canCreateContainer_parentDataID(soap*) allocate
/// - soap_new__ns1__canCreateContainer_parentDataID(soap*, int num) allocate array
/// - soap_new_req__ns1__canCreateContainer_parentDataID(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__canCreateContainer_parentDataID(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__canCreateContainer_parentDataID(soap*, _ns1__canCreateContainer_parentDataID*) deserialize from a stream
/// - int soap_write__ns1__canCreateContainer_parentDataID(soap, _ns1__canCreateContainer_parentDataID*) serialize to a stream
    class _ns1__canCreateContainer_parentDataID
    {
/// Element container_InstanceName of type xs:string.
    char*                                container_USCOREInstanceName   1;	///< Required element.
/// Element hexDataID of type xs:string.
    char*                                hexDataID                      1;	///< Required element.
    }                                   *parentDataID                   0;	///< Optional element.
};

/// "http://ws.abx/":canCreateContainerResponse is a complexType.
/// class ns1__canCreateContainerResponse operations:
/// - soap_new_ns1__canCreateContainerResponse(soap*) allocate
/// - soap_new_ns1__canCreateContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateContainerResponse(soap*, ns1__canCreateContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__canCreateContainerResponse(soap, ns1__canCreateContainerResponse*) serialize to a stream
class ns1__canCreateContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordByIndex is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByIndex operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndex(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndex(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByIndex(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByIndex(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByIndex(soap*, ns1__Fk_USCOREgetAllRecordByIndex*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByIndex(soap, ns1__Fk_USCOREgetAllRecordByIndex*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByIndex : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element numTotRecord of type xs:int.
    int                                  numTotRecord                   1;	///< Required element.
/// Element directionDesc of type xs:boolean.
    bool                                 directionDesc                  1;	///< Required element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordByIndexResponse is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByIndexResponse operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap*, ns1__Fk_USCOREgetAllRecordByIndexResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByIndexResponse(soap, ns1__Fk_USCOREgetAllRecordByIndexResponse*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByIndexResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetAllFilter is a complexType.
/// class ns1__GetAllFilter operations:
/// - soap_new_ns1__GetAllFilter(soap*) allocate
/// - soap_new_ns1__GetAllFilter(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllFilter(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllFilter(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllFilter(soap*, ns1__GetAllFilter*) deserialize from a stream
/// - int soap_write_ns1__GetAllFilter(soap, ns1__GetAllFilter*) serialize to a stream
class ns1__GetAllFilter : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetAllFilterResponse is a complexType.
/// class ns1__GetAllFilterResponse operations:
/// - soap_new_ns1__GetAllFilterResponse(soap*) allocate
/// - soap_new_ns1__GetAllFilterResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllFilterResponse(soap*, ns1__GetAllFilterResponse*) deserialize from a stream
/// - int soap_write_ns1__GetAllFilterResponse(soap, ns1__GetAllFilterResponse*) serialize to a stream
class ns1__GetAllFilterResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxFilterResult.
    ns1__AbxFilterResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetNext is a complexType.
/// class ns1__DownloadGetNext operations:
/// - soap_new_ns1__DownloadGetNext(soap*) allocate
/// - soap_new_ns1__DownloadGetNext(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetNext(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetNext(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetNext(soap*, ns1__DownloadGetNext*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetNext(soap, ns1__DownloadGetNext*) serialize to a stream
class ns1__DownloadGetNext : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetNextResponse is a complexType.
/// class ns1__DownloadGetNextResponse operations:
/// - soap_new_ns1__DownloadGetNextResponse(soap*) allocate
/// - soap_new_ns1__DownloadGetNextResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetNextResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetNextResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetNextResponse(soap*, ns1__DownloadGetNextResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetNextResponse(soap, ns1__DownloadGetNextResponse*) serialize to a stream
class ns1__DownloadGetNextResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertClasseDocumentale is a complexType.
/// class ns1__InsertClasseDocumentale operations:
/// - soap_new_ns1__InsertClasseDocumentale(soap*) allocate
/// - soap_new_ns1__InsertClasseDocumentale(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertClasseDocumentale(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertClasseDocumentale(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertClasseDocumentale(soap*, ns1__InsertClasseDocumentale*) deserialize from a stream
/// - int soap_write_ns1__InsertClasseDocumentale(soap, ns1__InsertClasseDocumentale*) serialize to a stream
class ns1__InsertClasseDocumentale : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element classeDocumentale of type "http://ws.abx/":abxClasseDocumentale.
    ns1__abxClasseDocumentale*           classeDocumentale              0;	///< Optional element.
};

/// "http://ws.abx/":InsertClasseDocumentaleResponse is a complexType.
/// class ns1__InsertClasseDocumentaleResponse operations:
/// - soap_new_ns1__InsertClasseDocumentaleResponse(soap*) allocate
/// - soap_new_ns1__InsertClasseDocumentaleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertClasseDocumentaleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertClasseDocumentaleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertClasseDocumentaleResponse(soap*, ns1__InsertClasseDocumentaleResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertClasseDocumentaleResponse(soap, ns1__InsertClasseDocumentaleResponse*) serialize to a stream
class ns1__InsertClasseDocumentaleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxClasseDocumentaleResult.
    ns1__abxClasseDocumentaleResult*     return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_document is a complexType.
/// class ns1__CheckOut_USCOREdocument operations:
/// - soap_new_ns1__CheckOut_USCOREdocument(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREdocument(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREdocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREdocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREdocument(soap*, ns1__CheckOut_USCOREdocument*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREdocument(soap, ns1__CheckOut_USCOREdocument*) serialize to a stream
class ns1__CheckOut_USCOREdocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_documentResponse is a complexType.
/// class ns1__CheckOut_USCOREdocumentResponse operations:
/// - soap_new_ns1__CheckOut_USCOREdocumentResponse(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREdocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREdocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREdocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREdocumentResponse(soap*, ns1__CheckOut_USCOREdocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREdocumentResponse(soap, ns1__CheckOut_USCOREdocumentResponse*) serialize to a stream
class ns1__CheckOut_USCOREdocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUSDownloadPath is a complexType.
/// class ns1__SetTmpUSDownloadPath operations:
/// - soap_new_ns1__SetTmpUSDownloadPath(soap*) allocate
/// - soap_new_ns1__SetTmpUSDownloadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUSDownloadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUSDownloadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUSDownloadPath(soap*, ns1__SetTmpUSDownloadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUSDownloadPath(soap, ns1__SetTmpUSDownloadPath*) serialize to a stream
class ns1__SetTmpUSDownloadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUSDownloadPathResponse is a complexType.
/// class ns1__SetTmpUSDownloadPathResponse operations:
/// - soap_new_ns1__SetTmpUSDownloadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpUSDownloadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUSDownloadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUSDownloadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUSDownloadPathResponse(soap*, ns1__SetTmpUSDownloadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUSDownloadPathResponse(soap, ns1__SetTmpUSDownloadPathResponse*) serialize to a stream
class ns1__SetTmpUSDownloadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canCreateTemplate is a complexType.
/// class ns1__canCreateTemplate operations:
/// - soap_new_ns1__canCreateTemplate(soap*) allocate
/// - soap_new_ns1__canCreateTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateTemplate(soap*, ns1__canCreateTemplate*) deserialize from a stream
/// - int soap_write_ns1__canCreateTemplate(soap, ns1__canCreateTemplate*) serialize to a stream
class ns1__canCreateTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":canCreateTemplateResponse is a complexType.
/// class ns1__canCreateTemplateResponse operations:
/// - soap_new_ns1__canCreateTemplateResponse(soap*) allocate
/// - soap_new_ns1__canCreateTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateTemplateResponse(soap*, ns1__canCreateTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__canCreateTemplateResponse(soap, ns1__canCreateTemplateResponse*) serialize to a stream
class ns1__canCreateTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteFileContainer is a complexType.
/// class ns1__CanDeleteFileContainer operations:
/// - soap_new_ns1__CanDeleteFileContainer(soap*) allocate
/// - soap_new_ns1__CanDeleteFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteFileContainer(soap*, ns1__CanDeleteFileContainer*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteFileContainer(soap, ns1__CanDeleteFileContainer*) serialize to a stream
class ns1__CanDeleteFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteFileContainerResponse is a complexType.
/// class ns1__CanDeleteFileContainerResponse operations:
/// - soap_new_ns1__CanDeleteFileContainerResponse(soap*) allocate
/// - soap_new_ns1__CanDeleteFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteFileContainerResponse(soap*, ns1__CanDeleteFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteFileContainerResponse(soap, ns1__CanDeleteFileContainerResponse*) serialize to a stream
class ns1__CanDeleteFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":QueryHeader is a complexType.
/// class ns1__QueryHeader operations:
/// - soap_new_ns1__QueryHeader(soap*) allocate
/// - soap_new_ns1__QueryHeader(soap*, int num) allocate array
/// - soap_new_req_ns1__QueryHeader(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__QueryHeader(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__QueryHeader(soap*, ns1__QueryHeader*) deserialize from a stream
/// - int soap_write_ns1__QueryHeader(soap, ns1__QueryHeader*) serialize to a stream
class ns1__QueryHeader : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element option4query of type "http://ws.abx/":abxQexpression.
    ns1__abxQexpression*                 option4query                   0;	///< Optional element.
};

/// "http://ws.abx/":QueryHeaderResponse is a complexType.
/// class ns1__QueryHeaderResponse operations:
/// - soap_new_ns1__QueryHeaderResponse(soap*) allocate
/// - soap_new_ns1__QueryHeaderResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__QueryHeaderResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__QueryHeaderResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__QueryHeaderResponse(soap*, ns1__QueryHeaderResponse*) deserialize from a stream
/// - int soap_write_ns1__QueryHeaderResponse(soap, ns1__QueryHeaderResponse*) serialize to a stream
class ns1__QueryHeaderResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRetQueryResult.
    ns1__abxRetQueryResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolList is a complexType.
/// class ns1__GetProtocolList operations:
/// - soap_new_ns1__GetProtocolList(soap*) allocate
/// - soap_new_ns1__GetProtocolList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolList(soap*, ns1__GetProtocolList*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolList(soap, ns1__GetProtocolList*) serialize to a stream
class ns1__GetProtocolList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolListResponse is a complexType.
/// class ns1__GetProtocolListResponse operations:
/// - soap_new_ns1__GetProtocolListResponse(soap*) allocate
/// - soap_new_ns1__GetProtocolListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolListResponse(soap*, ns1__GetProtocolListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolListResponse(soap, ns1__GetProtocolListResponse*) serialize to a stream
class ns1__GetProtocolListResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_attach is a complexType.
/// class ns1__CheckOut_USCOREattach operations:
/// - soap_new_ns1__CheckOut_USCOREattach(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREattach(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREattach(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREattach(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREattach(soap*, ns1__CheckOut_USCOREattach*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREattach(soap, ns1__CheckOut_USCOREattach*) serialize to a stream
class ns1__CheckOut_USCOREattach : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckOut_attachResponse is a complexType.
/// class ns1__CheckOut_USCOREattachResponse operations:
/// - soap_new_ns1__CheckOut_USCOREattachResponse(soap*) allocate
/// - soap_new_ns1__CheckOut_USCOREattachResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckOut_USCOREattachResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckOut_USCOREattachResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckOut_USCOREattachResponse(soap*, ns1__CheckOut_USCOREattachResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckOut_USCOREattachResponse(soap, ns1__CheckOut_USCOREattachResponse*) serialize to a stream
class ns1__CheckOut_USCOREattachResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetFieldsPropertiesFromTemplate is a complexType.
/// class ns1__GetFieldsPropertiesFromTemplate operations:
/// - soap_new_ns1__GetFieldsPropertiesFromTemplate(soap*) allocate
/// - soap_new_ns1__GetFieldsPropertiesFromTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldsPropertiesFromTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldsPropertiesFromTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldsPropertiesFromTemplate(soap*, ns1__GetFieldsPropertiesFromTemplate*) deserialize from a stream
/// - int soap_write_ns1__GetFieldsPropertiesFromTemplate(soap, ns1__GetFieldsPropertiesFromTemplate*) serialize to a stream
class ns1__GetFieldsPropertiesFromTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetFieldsPropertiesFromTemplateResponse is a complexType.
/// class ns1__GetFieldsPropertiesFromTemplateResponse operations:
/// - soap_new_ns1__GetFieldsPropertiesFromTemplateResponse(soap*) allocate
/// - soap_new_ns1__GetFieldsPropertiesFromTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldsPropertiesFromTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldsPropertiesFromTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldsPropertiesFromTemplateResponse(soap*, ns1__GetFieldsPropertiesFromTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFieldsPropertiesFromTemplateResponse(soap, ns1__GetFieldsPropertiesFromTemplateResponse*) serialize to a stream
class ns1__GetFieldsPropertiesFromTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFieldResult.
    ns1__abxFieldResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteDataWA is a complexType.
/// class ns1__DeleteDataWA operations:
/// - soap_new_ns1__DeleteDataWA(soap*) allocate
/// - soap_new_ns1__DeleteDataWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteDataWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteDataWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteDataWA(soap*, ns1__DeleteDataWA*) deserialize from a stream
/// - int soap_write_ns1__DeleteDataWA(soap, ns1__DeleteDataWA*) serialize to a stream
class ns1__DeleteDataWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
};

/// "http://ws.abx/":DeleteDataWAResponse is a complexType.
/// class ns1__DeleteDataWAResponse operations:
/// - soap_new_ns1__DeleteDataWAResponse(soap*) allocate
/// - soap_new_ns1__DeleteDataWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteDataWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteDataWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteDataWAResponse(soap*, ns1__DeleteDataWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteDataWAResponse(soap, ns1__DeleteDataWAResponse*) serialize to a stream
class ns1__DeleteDataWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteArchSostRule is a complexType.
/// class ns1__DeleteArchSostRule operations:
/// - soap_new_ns1__DeleteArchSostRule(soap*) allocate
/// - soap_new_ns1__DeleteArchSostRule(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteArchSostRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteArchSostRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteArchSostRule(soap*, ns1__DeleteArchSostRule*) deserialize from a stream
/// - int soap_write_ns1__DeleteArchSostRule(soap, ns1__DeleteArchSostRule*) serialize to a stream
class ns1__DeleteArchSostRule : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ruleId of type xs:string.
    char*                                ruleId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteArchSostRuleResponse is a complexType.
/// class ns1__DeleteArchSostRuleResponse operations:
/// - soap_new_ns1__DeleteArchSostRuleResponse(soap*) allocate
/// - soap_new_ns1__DeleteArchSostRuleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteArchSostRuleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteArchSostRuleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteArchSostRuleResponse(soap*, ns1__DeleteArchSostRuleResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteArchSostRuleResponse(soap, ns1__DeleteArchSostRuleResponse*) serialize to a stream
class ns1__DeleteArchSostRuleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchSostResult.
    ns1__abxArchSostResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetMethod is a complexType.
/// class ns1__GetMethod operations:
/// - soap_new_ns1__GetMethod(soap*) allocate
/// - soap_new_ns1__GetMethod(soap*, int num) allocate array
/// - soap_new_req_ns1__GetMethod(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetMethod(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetMethod(soap*, ns1__GetMethod*) deserialize from a stream
/// - int soap_write_ns1__GetMethod(soap, ns1__GetMethod*) serialize to a stream
class ns1__GetMethod : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetMethodResponse is a complexType.
/// class ns1__GetMethodResponse operations:
/// - soap_new_ns1__GetMethodResponse(soap*) allocate
/// - soap_new_ns1__GetMethodResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetMethodResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetMethodResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetMethodResponse(soap*, ns1__GetMethodResponse*) deserialize from a stream
/// - int soap_write_ns1__GetMethodResponse(soap, ns1__GetMethodResponse*) serialize to a stream
class ns1__GetMethodResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGmResult.
    ns1__abxGmResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxGmResult is a complexType.
/// class ns1__abxGmResult operations:
/// - soap_new_ns1__abxGmResult(soap*) allocate
/// - soap_new_ns1__abxGmResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGmResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGmResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGmResult(soap*, ns1__abxGmResult*) deserialize from a stream
/// - int soap_write_ns1__abxGmResult(soap, ns1__abxGmResult*) serialize to a stream
class ns1__abxGmResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element method of type "http://ws.abx/":abxMethodDef.
    ns1__abxMethodDef*                   method                         1;	///< Required element.
};

/// "http://ws.abx/":abxMethodDef is a complexType.
/// class ns1__abxMethodDef operations:
/// - soap_new_ns1__abxMethodDef(soap*) allocate
/// - soap_new_ns1__abxMethodDef(soap*, int num) allocate array
/// - soap_new_req_ns1__abxMethodDef(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxMethodDef(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxMethodDef(soap*, ns1__abxMethodDef*) deserialize from a stream
/// - int soap_write_ns1__abxMethodDef(soap, ns1__abxMethodDef*) serialize to a stream
class ns1__abxMethodDef : public xsd__anyType
{ public:
/// Size of elmethod array is 1..unbounded
   $int                                  __sizeelmethod                 1;
/// class _ns1__abxMethodDef_elmethod operations:
/// - soap_new__ns1__abxMethodDef_elmethod(soap*) allocate
/// - soap_new__ns1__abxMethodDef_elmethod(soap*, int num) allocate array
/// - soap_new_req__ns1__abxMethodDef_elmethod(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxMethodDef_elmethod(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxMethodDef_elmethod(soap*, _ns1__abxMethodDef_elmethod*) deserialize from a stream
/// - int soap_write__ns1__abxMethodDef_elmethod(soap, _ns1__abxMethodDef_elmethod*) serialize to a stream
    class _ns1__abxMethodDef_elmethod
    {
/// Element methodName of type xs:string.
    char*                                methodName                     1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
    }                                   *elmethod                       1;
/// Element xxx of type xs:anyType.
    xsd__anyType*                        xxx                            1;	///< Required element.
};

/// "http://ws.abx/":CanAddNewDate is a complexType.
/// class ns1__CanAddNewDate operations:
/// - soap_new_ns1__CanAddNewDate(soap*) allocate
/// - soap_new_ns1__CanAddNewDate(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddNewDate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddNewDate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddNewDate(soap*, ns1__CanAddNewDate*) deserialize from a stream
/// - int soap_write_ns1__CanAddNewDate(soap, ns1__CanAddNewDate*) serialize to a stream
class ns1__CanAddNewDate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":CanAddNewDateResponse is a complexType.
/// class ns1__CanAddNewDateResponse operations:
/// - soap_new_ns1__CanAddNewDateResponse(soap*) allocate
/// - soap_new_ns1__CanAddNewDateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddNewDateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddNewDateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddNewDateResponse(soap*, ns1__CanAddNewDateResponse*) deserialize from a stream
/// - int soap_write_ns1__CanAddNewDateResponse(soap, ns1__CanAddNewDateResponse*) serialize to a stream
class ns1__CanAddNewDateResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInDomainByMatricola is a complexType.
/// class ns1__GetArchiBoxInDomainByMatricola operations:
/// - soap_new_ns1__GetArchiBoxInDomainByMatricola(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInDomainByMatricola(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInDomainByMatricola(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInDomainByMatricola(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInDomainByMatricola(soap*, ns1__GetArchiBoxInDomainByMatricola*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInDomainByMatricola(soap, ns1__GetArchiBoxInDomainByMatricola*) serialize to a stream
class ns1__GetArchiBoxInDomainByMatricola : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element matricola of type xs:string.
    char*                                matricola                      0;	///< Optional element.
};

/// "http://ws.abx/":GetArchiBoxInDomainByMatricolaResponse is a complexType.
/// class ns1__GetArchiBoxInDomainByMatricolaResponse operations:
/// - soap_new_ns1__GetArchiBoxInDomainByMatricolaResponse(soap*) allocate
/// - soap_new_ns1__GetArchiBoxInDomainByMatricolaResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetArchiBoxInDomainByMatricolaResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetArchiBoxInDomainByMatricolaResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetArchiBoxInDomainByMatricolaResponse(soap*, ns1__GetArchiBoxInDomainByMatricolaResponse*) deserialize from a stream
/// - int soap_write_ns1__GetArchiBoxInDomainByMatricolaResponse(soap, ns1__GetArchiBoxInDomainByMatricolaResponse*) serialize to a stream
class ns1__GetArchiBoxInDomainByMatricolaResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchiBoxDomainResult.
    ns1__abxArchiBoxDomainResult*        return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifySDKTask is a complexType.
/// class ns1__ModifySDKTask operations:
/// - soap_new_ns1__ModifySDKTask(soap*) allocate
/// - soap_new_ns1__ModifySDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySDKTask(soap*, ns1__ModifySDKTask*) deserialize from a stream
/// - int soap_write_ns1__ModifySDKTask(soap, ns1__ModifySDKTask*) serialize to a stream
class ns1__ModifySDKTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element sdkTask of type "http://ws.abx/":abxSDKTask.
    ns1__abxSDKTask*                     sdkTask                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifySDKTaskResponse is a complexType.
/// class ns1__ModifySDKTaskResponse operations:
/// - soap_new_ns1__ModifySDKTaskResponse(soap*) allocate
/// - soap_new_ns1__ModifySDKTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySDKTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySDKTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySDKTaskResponse(soap*, ns1__ModifySDKTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifySDKTaskResponse(soap, ns1__ModifySDKTaskResponse*) serialize to a stream
class ns1__ModifySDKTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslationCode is a complexType.
/// class ns1__InsertTranslationCode operations:
/// - soap_new_ns1__InsertTranslationCode(soap*) allocate
/// - soap_new_ns1__InsertTranslationCode(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslationCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslationCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslationCode(soap*, ns1__InsertTranslationCode*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslationCode(soap, ns1__InsertTranslationCode*) serialize to a stream
class ns1__InsertTranslationCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element transLang of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 transLang                      0;	///< Optional element.
/// Element exLabelCode of type xs:string.
    char*                                exLabelCode                    0;	///< Optional element.
/// Element exArchiboxSourceSuffix of type xs:string.
    char*                                exArchiboxSourceSuffix         0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslationCodeResponse is a complexType.
/// class ns1__InsertTranslationCodeResponse operations:
/// - soap_new_ns1__InsertTranslationCodeResponse(soap*) allocate
/// - soap_new_ns1__InsertTranslationCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslationCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslationCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslationCodeResponse(soap*, ns1__InsertTranslationCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslationCodeResponse(soap, ns1__InsertTranslationCodeResponse*) serialize to a stream
class ns1__InsertTranslationCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetGroupList is a complexType.
/// class ns1__GetGroupList operations:
/// - soap_new_ns1__GetGroupList(soap*) allocate
/// - soap_new_ns1__GetGroupList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetGroupList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetGroupList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetGroupList(soap*, ns1__GetGroupList*) deserialize from a stream
/// - int soap_write_ns1__GetGroupList(soap, ns1__GetGroupList*) serialize to a stream
class ns1__GetGroupList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element groupField of type "http://ws.abx/":abxGroup.
    ns1__abxGroup*                       groupField                     0;	///< Optional element.
};

/// "http://ws.abx/":GetGroupListResponse is a complexType.
/// class ns1__GetGroupListResponse operations:
/// - soap_new_ns1__GetGroupListResponse(soap*) allocate
/// - soap_new_ns1__GetGroupListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetGroupListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetGroupListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetGroupListResponse(soap*, ns1__GetGroupListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetGroupListResponse(soap, ns1__GetGroupListResponse*) serialize to a stream
class ns1__GetGroupListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGroupResult.
    ns1__abxGroupResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordByIndexDesc is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByIndexDesc operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap*, ns1__Fk_USCOREgetAllRecordByIndexDesc*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByIndexDesc(soap, ns1__Fk_USCOREgetAllRecordByIndexDesc*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByIndexDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fkp of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fkp                            0;	///< Optional element.
/// Element numTotRecord of type xs:int.
    int                                  numTotRecord                   1;	///< Required element.
/// Element orderBy of type xs:string.
    char*                                orderBy                        0;	///< Optional element.
/// Element directionDesc of type xs:boolean.
    bool                                 directionDesc                  1;	///< Required element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordByIndexDescResponse is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByIndexDescResponse operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap*, ns1__Fk_USCOREgetAllRecordByIndexDescResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByIndexDescResponse(soap, ns1__Fk_USCOREgetAllRecordByIndexDescResponse*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByIndexDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyData is a complexType.
/// class ns1__CanModifyData operations:
/// - soap_new_ns1__CanModifyData(soap*) allocate
/// - soap_new_ns1__CanModifyData(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyData(soap*, ns1__CanModifyData*) deserialize from a stream
/// - int soap_write_ns1__CanModifyData(soap, ns1__CanModifyData*) serialize to a stream
class ns1__CanModifyData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyDataResponse is a complexType.
/// class ns1__CanModifyDataResponse operations:
/// - soap_new_ns1__CanModifyDataResponse(soap*) allocate
/// - soap_new_ns1__CanModifyDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyDataResponse(soap*, ns1__CanModifyDataResponse*) deserialize from a stream
/// - int soap_write_ns1__CanModifyDataResponse(soap, ns1__CanModifyDataResponse*) serialize to a stream
class ns1__CanModifyDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Query is a complexType.
/// class ns1__Query operations:
/// - soap_new_ns1__Query(soap*) allocate
/// - soap_new_ns1__Query(soap*, int num) allocate array
/// - soap_new_req_ns1__Query(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Query(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Query(soap*, ns1__Query*) deserialize from a stream
/// - int soap_write_ns1__Query(soap, ns1__Query*) serialize to a stream
class ns1__Query : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element option4query of type "http://ws.abx/":abxQexpression.
    ns1__abxQexpression*                 option4query                   0;	///< Optional element.
};

/// "http://ws.abx/":QueryResponse is a complexType.
/// class ns1__QueryResponse operations:
/// - soap_new_ns1__QueryResponse(soap*) allocate
/// - soap_new_ns1__QueryResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__QueryResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__QueryResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__QueryResponse(soap*, ns1__QueryResponse*) deserialize from a stream
/// - int soap_write_ns1__QueryResponse(soap, ns1__QueryResponse*) serialize to a stream
class ns1__QueryResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRetQueryResult.
    ns1__abxRetQueryResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanAddDigitalSignature is a complexType.
/// class ns1__CanAddDigitalSignature operations:
/// - soap_new_ns1__CanAddDigitalSignature(soap*) allocate
/// - soap_new_ns1__CanAddDigitalSignature(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddDigitalSignature(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddDigitalSignature(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddDigitalSignature(soap*, ns1__CanAddDigitalSignature*) deserialize from a stream
/// - int soap_write_ns1__CanAddDigitalSignature(soap, ns1__CanAddDigitalSignature*) serialize to a stream
class ns1__CanAddDigitalSignature : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":CanAddDigitalSignatureResponse is a complexType.
/// class ns1__CanAddDigitalSignatureResponse operations:
/// - soap_new_ns1__CanAddDigitalSignatureResponse(soap*) allocate
/// - soap_new_ns1__CanAddDigitalSignatureResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanAddDigitalSignatureResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanAddDigitalSignatureResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanAddDigitalSignatureResponse(soap*, ns1__CanAddDigitalSignatureResponse*) deserialize from a stream
/// - int soap_write_ns1__CanAddDigitalSignatureResponse(soap, ns1__CanAddDigitalSignatureResponse*) serialize to a stream
class ns1__CanAddDigitalSignatureResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceId is a complexType.
/// class ns1__GetInstanceId operations:
/// - soap_new_ns1__GetInstanceId(soap*) allocate
/// - soap_new_ns1__GetInstanceId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceId(soap*, ns1__GetInstanceId*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceId(soap, ns1__GetInstanceId*) serialize to a stream
class ns1__GetInstanceId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceIdResponse is a complexType.
/// class ns1__GetInstanceIdResponse operations:
/// - soap_new_ns1__GetInstanceIdResponse(soap*) allocate
/// - soap_new_ns1__GetInstanceIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceIdResponse(soap*, ns1__GetInstanceIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceIdResponse(soap, ns1__GetInstanceIdResponse*) serialize to a stream
class ns1__GetInstanceIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGiiResult.
    ns1__abxGiiResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxGiiResult is a complexType.
/// class ns1__abxGiiResult operations:
/// - soap_new_ns1__abxGiiResult(soap*) allocate
/// - soap_new_ns1__abxGiiResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGiiResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGiiResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGiiResult(soap*, ns1__abxGiiResult*) deserialize from a stream
/// - int soap_write_ns1__abxGiiResult(soap, ns1__abxGiiResult*) serialize to a stream
class ns1__abxGiiResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element hexId of type xs:string.
    char*                                hexId                          1;	///< Required element.
};

/// "http://ws.abx/":InsertArchSostRule is a complexType.
/// class ns1__InsertArchSostRule operations:
/// - soap_new_ns1__InsertArchSostRule(soap*) allocate
/// - soap_new_ns1__InsertArchSostRule(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertArchSostRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertArchSostRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertArchSostRule(soap*, ns1__InsertArchSostRule*) deserialize from a stream
/// - int soap_write_ns1__InsertArchSostRule(soap, ns1__InsertArchSostRule*) serialize to a stream
class ns1__InsertArchSostRule : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element archSostRule of type "http://ws.abx/":abxArchSostRule.
    ns1__abxArchSostRule*                archSostRule                   0;	///< Optional element.
};

/// "http://ws.abx/":InsertArchSostRuleResponse is a complexType.
/// class ns1__InsertArchSostRuleResponse operations:
/// - soap_new_ns1__InsertArchSostRuleResponse(soap*) allocate
/// - soap_new_ns1__InsertArchSostRuleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertArchSostRuleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertArchSostRuleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertArchSostRuleResponse(soap*, ns1__InsertArchSostRuleResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertArchSostRuleResponse(soap, ns1__InsertArchSostRuleResponse*) serialize to a stream
class ns1__InsertArchSostRuleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchSostResult.
    ns1__abxArchSostResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_insert is a complexType.
/// class ns1__Combo_USCOREinsert operations:
/// - soap_new_ns1__Combo_USCOREinsert(soap*) allocate
/// - soap_new_ns1__Combo_USCOREinsert(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREinsert(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREinsert(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREinsert(soap*, ns1__Combo_USCOREinsert*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREinsert(soap, ns1__Combo_USCOREinsert*) serialize to a stream
class ns1__Combo_USCOREinsert : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element recordsArray of type "http://ws.abx/":abxCombo.
    ns1__abxCombo*                       recordsArray                   0;	///< Optional element.
};

/// "http://ws.abx/":Combo_insertResponse is a complexType.
/// class ns1__Combo_USCOREinsertResponse operations:
/// - soap_new_ns1__Combo_USCOREinsertResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREinsertResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREinsertResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREinsertResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREinsertResponse(soap*, ns1__Combo_USCOREinsertResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREinsertResponse(soap, ns1__Combo_USCOREinsertResponse*) serialize to a stream
class ns1__Combo_USCOREinsertResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxComboResult is a complexType.
/// class ns1__abxComboResult operations:
/// - soap_new_ns1__abxComboResult(soap*) allocate
/// - soap_new_ns1__abxComboResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxComboResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxComboResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxComboResult(soap*, ns1__abxComboResult*) deserialize from a stream
/// - int soap_write_ns1__abxComboResult(soap, ns1__abxComboResult*) serialize to a stream
class ns1__abxComboResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxComboList.
    ns1__abxComboList*                   list                           1;	///< Required element.
};

/// "http://ws.abx/":abxComboList is a complexType.
/// class ns1__abxComboList operations:
/// - soap_new_ns1__abxComboList(soap*) allocate
/// - soap_new_ns1__abxComboList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxComboList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxComboList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxComboList(soap*, ns1__abxComboList*) deserialize from a stream
/// - int soap_write_ns1__abxComboList(soap, ns1__abxComboList*) serialize to a stream
class ns1__abxComboList : public xsd__anyType
{ public:
/// Size of array of ns1__abxCombo* is 1..unbounded
   $int                                  __sizecombo                    1;
/// Pointer to array ns1__abxCombo* of length 1..unbounded
    ns1__abxCombo*                      *combo                          1;
};

/// "http://ws.abx/":GetAdjacentArchiBox is a complexType.
/// class ns1__GetAdjacentArchiBox operations:
/// - soap_new_ns1__GetAdjacentArchiBox(soap*) allocate
/// - soap_new_ns1__GetAdjacentArchiBox(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAdjacentArchiBox(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAdjacentArchiBox(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAdjacentArchiBox(soap*, ns1__GetAdjacentArchiBox*) deserialize from a stream
/// - int soap_write_ns1__GetAdjacentArchiBox(soap, ns1__GetAdjacentArchiBox*) serialize to a stream
class ns1__GetAdjacentArchiBox : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetAdjacentArchiBoxResponse is a complexType.
/// class ns1__GetAdjacentArchiBoxResponse operations:
/// - soap_new_ns1__GetAdjacentArchiBoxResponse(soap*) allocate
/// - soap_new_ns1__GetAdjacentArchiBoxResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAdjacentArchiBoxResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAdjacentArchiBoxResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAdjacentArchiBoxResponse(soap*, ns1__GetAdjacentArchiBoxResponse*) deserialize from a stream
/// - int soap_write_ns1__GetAdjacentArchiBoxResponse(soap, ns1__GetAdjacentArchiBoxResponse*) serialize to a stream
class ns1__GetAdjacentArchiBoxResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxReplicationResult.
    ns1__abxReplicationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDefaultObjActList is a complexType.
/// class ns1__GetDefaultObjActList operations:
/// - soap_new_ns1__GetDefaultObjActList(soap*) allocate
/// - soap_new_ns1__GetDefaultObjActList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDefaultObjActList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDefaultObjActList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDefaultObjActList(soap*, ns1__GetDefaultObjActList*) deserialize from a stream
/// - int soap_write_ns1__GetDefaultObjActList(soap, ns1__GetDefaultObjActList*) serialize to a stream
class ns1__GetDefaultObjActList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDefaultObjActListResponse is a complexType.
/// class ns1__GetDefaultObjActListResponse operations:
/// - soap_new_ns1__GetDefaultObjActListResponse(soap*) allocate
/// - soap_new_ns1__GetDefaultObjActListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDefaultObjActListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDefaultObjActListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDefaultObjActListResponse(soap*, ns1__GetDefaultObjActListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDefaultObjActListResponse(soap, ns1__GetDefaultObjActListResponse*) serialize to a stream
class ns1__GetDefaultObjActListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxPermissionResult.
    ns1__abxPermissionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ExtractSDKPDFTemplateTextByArea is a complexType.
/// class ns1__ExtractSDKPDFTemplateTextByArea operations:
/// - soap_new_ns1__ExtractSDKPDFTemplateTextByArea(soap*) allocate
/// - soap_new_ns1__ExtractSDKPDFTemplateTextByArea(soap*, int num) allocate array
/// - soap_new_req_ns1__ExtractSDKPDFTemplateTextByArea(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ExtractSDKPDFTemplateTextByArea(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ExtractSDKPDFTemplateTextByArea(soap*, ns1__ExtractSDKPDFTemplateTextByArea*) deserialize from a stream
/// - int soap_write_ns1__ExtractSDKPDFTemplateTextByArea(soap, ns1__ExtractSDKPDFTemplateTextByArea*) serialize to a stream
class ns1__ExtractSDKPDFTemplateTextByArea : public xsd__anyType
{ public:
/// Element sessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         sessionId                      0;	///< Optional element.
/// Element idTask of type xs:string.
    char*                                idTask                         0;	///< Optional element.
/// Element x of type xs:int.
    int                                  x                              1;	///< Required element.
/// Element y of type xs:int.
    int                                  y                              1;	///< Required element.
/// Element width of type xs:int.
    int                                  width                          1;	///< Required element.
/// Element height of type xs:int.
    int                                  height                         1;	///< Required element.
/// Element page of type xs:int.
    int                                  page                           1;	///< Required element.
};

/// "http://ws.abx/":ExtractSDKPDFTemplateTextByAreaResponse is a complexType.
/// class ns1__ExtractSDKPDFTemplateTextByAreaResponse operations:
/// - soap_new_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap*) allocate
/// - soap_new_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap*, ns1__ExtractSDKPDFTemplateTextByAreaResponse*) deserialize from a stream
/// - int soap_write_ns1__ExtractSDKPDFTemplateTextByAreaResponse(soap, ns1__ExtractSDKPDFTemplateTextByAreaResponse*) serialize to a stream
class ns1__ExtractSDKPDFTemplateTextByAreaResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSDKTask is a complexType.
/// class ns1__DeleteSDKTask operations:
/// - soap_new_ns1__DeleteSDKTask(soap*) allocate
/// - soap_new_ns1__DeleteSDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKTask(soap*, ns1__DeleteSDKTask*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKTask(soap, ns1__DeleteSDKTask*) serialize to a stream
class ns1__DeleteSDKTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSDKTaskResponse is a complexType.
/// class ns1__DeleteSDKTaskResponse operations:
/// - soap_new_ns1__DeleteSDKTaskResponse(soap*) allocate
/// - soap_new_ns1__DeleteSDKTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSDKTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSDKTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSDKTaskResponse(soap*, ns1__DeleteSDKTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteSDKTaskResponse(soap, ns1__DeleteSDKTaskResponse*) serialize to a stream
class ns1__DeleteSDKTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByContId is a complexType.
/// class ns1__GetUploadDetailByContId operations:
/// - soap_new_ns1__GetUploadDetailByContId(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByContId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByContId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByContId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByContId(soap*, ns1__GetUploadDetailByContId*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByContId(soap, ns1__GetUploadDetailByContId*) serialize to a stream
class ns1__GetUploadDetailByContId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByContIdResponse is a complexType.
/// class ns1__GetUploadDetailByContIdResponse operations:
/// - soap_new_ns1__GetUploadDetailByContIdResponse(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByContIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByContIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByContIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByContIdResponse(soap*, ns1__GetUploadDetailByContIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByContIdResponse(soap, ns1__GetUploadDetailByContIdResponse*) serialize to a stream
class ns1__GetUploadDetailByContIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadTPEndFile is a complexType.
/// class ns1__DownloadTPEndFile operations:
/// - soap_new_ns1__DownloadTPEndFile(soap*) allocate
/// - soap_new_ns1__DownloadTPEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadTPEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadTPEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadTPEndFile(soap*, ns1__DownloadTPEndFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadTPEndFile(soap, ns1__DownloadTPEndFile*) serialize to a stream
class ns1__DownloadTPEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DownloadTPEndFileResponse is a complexType.
/// class ns1__DownloadTPEndFileResponse operations:
/// - soap_new_ns1__DownloadTPEndFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadTPEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadTPEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadTPEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadTPEndFileResponse(soap*, ns1__DownloadTPEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadTPEndFileResponse(soap, ns1__DownloadTPEndFileResponse*) serialize to a stream
class ns1__DownloadTPEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetLinksToDocumentFiltered is a complexType.
/// class ns1__GetLinksToDocumentFiltered operations:
/// - soap_new_ns1__GetLinksToDocumentFiltered(soap*) allocate
/// - soap_new_ns1__GetLinksToDocumentFiltered(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLinksToDocumentFiltered(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLinksToDocumentFiltered(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLinksToDocumentFiltered(soap*, ns1__GetLinksToDocumentFiltered*) deserialize from a stream
/// - int soap_write_ns1__GetLinksToDocumentFiltered(soap, ns1__GetLinksToDocumentFiltered*) serialize to a stream
class ns1__GetLinksToDocumentFiltered : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element linkType of type xs:string.
    char*                                linkType                       0;	///< Optional element.
};

/// "http://ws.abx/":GetLinksToDocumentFilteredResponse is a complexType.
/// class ns1__GetLinksToDocumentFilteredResponse operations:
/// - soap_new_ns1__GetLinksToDocumentFilteredResponse(soap*) allocate
/// - soap_new_ns1__GetLinksToDocumentFilteredResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetLinksToDocumentFilteredResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetLinksToDocumentFilteredResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetLinksToDocumentFilteredResponse(soap*, ns1__GetLinksToDocumentFilteredResponse*) deserialize from a stream
/// - int soap_write_ns1__GetLinksToDocumentFilteredResponse(soap, ns1__GetLinksToDocumentFilteredResponse*) serialize to a stream
class ns1__GetLinksToDocumentFilteredResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteDatabaseList is a complexType.
/// class ns1__Fk_USCOREgetRemoteDatabaseList operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteDatabaseList(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteDatabaseList(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteDatabaseList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteDatabaseList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteDatabaseList(soap*, ns1__Fk_USCOREgetRemoteDatabaseList*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteDatabaseList(soap, ns1__Fk_USCOREgetRemoteDatabaseList*) serialize to a stream
class ns1__Fk_USCOREgetRemoteDatabaseList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element host of type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element user of type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element pwd of type xs:string.
    char*                                pwd                            0;	///< Optional element.
/// Element dbType of type xs:string.
    char*                                dbType                         0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getRemoteDatabaseListResponse is a complexType.
/// class ns1__Fk_USCOREgetRemoteDatabaseListResponse operations:
/// - soap_new_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap*, ns1__Fk_USCOREgetRemoteDatabaseListResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetRemoteDatabaseListResponse(soap, ns1__Fk_USCOREgetRemoteDatabaseListResponse*) serialize to a stream
class ns1__Fk_USCOREgetRemoteDatabaseListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListForSecurity is a complexType.
/// class ns1__GetDataFileListForSecurity operations:
/// - soap_new_ns1__GetDataFileListForSecurity(soap*) allocate
/// - soap_new_ns1__GetDataFileListForSecurity(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListForSecurity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListForSecurity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListForSecurity(soap*, ns1__GetDataFileListForSecurity*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListForSecurity(soap, ns1__GetDataFileListForSecurity*) serialize to a stream
class ns1__GetDataFileListForSecurity : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListForSecurityResponse is a complexType.
/// class ns1__GetDataFileListForSecurityResponse operations:
/// - soap_new_ns1__GetDataFileListForSecurityResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileListForSecurityResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListForSecurityResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListForSecurityResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListForSecurityResponse(soap*, ns1__GetDataFileListForSecurityResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListForSecurityResponse(soap, ns1__GetDataFileListForSecurityResponse*) serialize to a stream
class ns1__GetDataFileListForSecurityResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByData is a complexType.
/// class ns1__GetUploadDetailByData operations:
/// - soap_new_ns1__GetUploadDetailByData(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByData(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByData(soap*, ns1__GetUploadDetailByData*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByData(soap, ns1__GetUploadDetailByData*) serialize to a stream
class ns1__GetUploadDetailByData : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByDataResponse is a complexType.
/// class ns1__GetUploadDetailByDataResponse operations:
/// - soap_new_ns1__GetUploadDetailByDataResponse(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByDataResponse(soap*, ns1__GetUploadDetailByDataResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByDataResponse(soap, ns1__GetUploadDetailByDataResponse*) serialize to a stream
class ns1__GetUploadDetailByDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetChunkWA is a complexType.
/// class ns1__DownloadGetChunkWA operations:
/// - soap_new_ns1__DownloadGetChunkWA(soap*) allocate
/// - soap_new_ns1__DownloadGetChunkWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetChunkWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetChunkWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetChunkWA(soap*, ns1__DownloadGetChunkWA*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetChunkWA(soap, ns1__DownloadGetChunkWA*) serialize to a stream
class ns1__DownloadGetChunkWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element dimChunk of type xs:string.
    char*                                dimChunk                       0;	///< Optional element.
/// Element offset of type xs:string.
    char*                                offset                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetChunkWAResponse is a complexType.
/// class ns1__DownloadGetChunkWAResponse operations:
/// - soap_new_ns1__DownloadGetChunkWAResponse(soap*) allocate
/// - soap_new_ns1__DownloadGetChunkWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetChunkWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetChunkWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetChunkWAResponse(soap*, ns1__DownloadGetChunkWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetChunkWAResponse(soap, ns1__DownloadGetChunkWAResponse*) serialize to a stream
class ns1__DownloadGetChunkWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetWsdlVersion is a complexType.
/// class ns1__GetWsdlVersion operations:
/// - soap_new_ns1__GetWsdlVersion(soap*) allocate
/// - soap_new_ns1__GetWsdlVersion(soap*, int num) allocate array
/// - soap_new_req_ns1__GetWsdlVersion(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetWsdlVersion(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetWsdlVersion(soap*, ns1__GetWsdlVersion*) deserialize from a stream
/// - int soap_write_ns1__GetWsdlVersion(soap, ns1__GetWsdlVersion*) serialize to a stream
class ns1__GetWsdlVersion : public xsd__anyType
{ public:
};

/// "http://ws.abx/":GetWsdlVersionResponse is a complexType.
/// class ns1__GetWsdlVersionResponse operations:
/// - soap_new_ns1__GetWsdlVersionResponse(soap*) allocate
/// - soap_new_ns1__GetWsdlVersionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetWsdlVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetWsdlVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetWsdlVersionResponse(soap*, ns1__GetWsdlVersionResponse*) deserialize from a stream
/// - int soap_write_ns1__GetWsdlVersionResponse(soap, ns1__GetWsdlVersionResponse*) serialize to a stream
class ns1__GetWsdlVersionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxWsdlResult.
    ns1__AbxWsdlResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AbxWsdlResult is a complexType.
/// class ns1__AbxWsdlResult operations:
/// - soap_new_ns1__AbxWsdlResult(soap*) allocate
/// - soap_new_ns1__AbxWsdlResult(soap*, int num) allocate array
/// - soap_new_req_ns1__AbxWsdlResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AbxWsdlResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AbxWsdlResult(soap*, ns1__AbxWsdlResult*) deserialize from a stream
/// - int soap_write_ns1__AbxWsdlResult(soap, ns1__AbxWsdlResult*) serialize to a stream
class ns1__AbxWsdlResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element WARNINGvalue of type xs:string.
    char*                                WARNINGvalue                   1;	///< Required element.
/// Element ERRORvalue of type xs:string.
    char*                                ERRORvalue                     1;	///< Required element.
};

/// "http://ws.abx/":InsertUSFile is a complexType.
/// class ns1__InsertUSFile operations:
/// - soap_new_ns1__InsertUSFile(soap*) allocate
/// - soap_new_ns1__InsertUSFile(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUSFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUSFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUSFile(soap*, ns1__InsertUSFile*) deserialize from a stream
/// - int soap_write_ns1__InsertUSFile(soap, ns1__InsertUSFile*) serialize to a stream
class ns1__InsertUSFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":InsertUSFileResponse is a complexType.
/// class ns1__InsertUSFileResponse operations:
/// - soap_new_ns1__InsertUSFileResponse(soap*) allocate
/// - soap_new_ns1__InsertUSFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUSFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUSFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUSFileResponse(soap*, ns1__InsertUSFileResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertUSFileResponse(soap, ns1__InsertUSFileResponse*) serialize to a stream
class ns1__InsertUSFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertProtocol is a complexType.
/// class ns1__InsertProtocol operations:
/// - soap_new_ns1__InsertProtocol(soap*) allocate
/// - soap_new_ns1__InsertProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertProtocol(soap*, ns1__InsertProtocol*) deserialize from a stream
/// - int soap_write_ns1__InsertProtocol(soap, ns1__InsertProtocol*) serialize to a stream
class ns1__InsertProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":InsertProtocolResponse is a complexType.
/// class ns1__InsertProtocolResponse operations:
/// - soap_new_ns1__InsertProtocolResponse(soap*) allocate
/// - soap_new_ns1__InsertProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertProtocolResponse(soap*, ns1__InsertProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertProtocolResponse(soap, ns1__InsertProtocolResponse*) serialize to a stream
class ns1__InsertProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFilePreview is a complexType.
/// class ns1__DownloadFilePreview operations:
/// - soap_new_ns1__DownloadFilePreview(soap*) allocate
/// - soap_new_ns1__DownloadFilePreview(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFilePreview(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFilePreview(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFilePreview(soap*, ns1__DownloadFilePreview*) deserialize from a stream
/// - int soap_write_ns1__DownloadFilePreview(soap, ns1__DownloadFilePreview*) serialize to a stream
class ns1__DownloadFilePreview : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataAttachmentId of type xs:string.
    char*                                dataAttachmentId               0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
/// Element previewType of type xs:int.
    int*                                 previewType                    0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFilePreviewResponse is a complexType.
/// class ns1__DownloadFilePreviewResponse operations:
/// - soap_new_ns1__DownloadFilePreviewResponse(soap*) allocate
/// - soap_new_ns1__DownloadFilePreviewResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFilePreviewResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFilePreviewResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFilePreviewResponse(soap*, ns1__DownloadFilePreviewResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFilePreviewResponse(soap, ns1__DownloadFilePreviewResponse*) serialize to a stream
class ns1__DownloadFilePreviewResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddFileToSyncByArcCue is a complexType.
/// class ns1__AddFileToSyncByArcCue operations:
/// - soap_new_ns1__AddFileToSyncByArcCue(soap*) allocate
/// - soap_new_ns1__AddFileToSyncByArcCue(soap*, int num) allocate array
/// - soap_new_req_ns1__AddFileToSyncByArcCue(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddFileToSyncByArcCue(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddFileToSyncByArcCue(soap*, ns1__AddFileToSyncByArcCue*) deserialize from a stream
/// - int soap_write_ns1__AddFileToSyncByArcCue(soap, ns1__AddFileToSyncByArcCue*) serialize to a stream
class ns1__AddFileToSyncByArcCue : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element fromArchiboxId of type xs:string.
    char*                                fromArchiboxId                 0;	///< Optional element.
};

/// "http://ws.abx/":AddFileToSyncByArcCueResponse is a complexType.
/// class ns1__AddFileToSyncByArcCueResponse operations:
/// - soap_new_ns1__AddFileToSyncByArcCueResponse(soap*) allocate
/// - soap_new_ns1__AddFileToSyncByArcCueResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddFileToSyncByArcCueResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddFileToSyncByArcCueResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddFileToSyncByArcCueResponse(soap*, ns1__AddFileToSyncByArcCueResponse*) deserialize from a stream
/// - int soap_write_ns1__AddFileToSyncByArcCueResponse(soap, ns1__AddFileToSyncByArcCueResponse*) serialize to a stream
class ns1__AddFileToSyncByArcCueResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddLogSDK is a complexType.
/// class ns1__AddLogSDK operations:
/// - soap_new_ns1__AddLogSDK(soap*) allocate
/// - soap_new_ns1__AddLogSDK(soap*, int num) allocate array
/// - soap_new_req_ns1__AddLogSDK(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddLogSDK(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddLogSDK(soap*, ns1__AddLogSDK*) deserialize from a stream
/// - int soap_write_ns1__AddLogSDK(soap, ns1__AddLogSDK*) serialize to a stream
class ns1__AddLogSDK : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element eventTypeCode of type xs:long.
    LONG64                               eventTypeCode                  1;	///< Required element.
/// Element levelInfoCode of type xs:long.
    LONG64                               levelInfoCode                  1;	///< Required element.
/// Element messageCode of type xs:long.
    LONG64                               messageCode                    1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    0;	///< Optional element.
};

/// "http://ws.abx/":AddLogSDKResponse is a complexType.
/// class ns1__AddLogSDKResponse operations:
/// - soap_new_ns1__AddLogSDKResponse(soap*) allocate
/// - soap_new_ns1__AddLogSDKResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddLogSDKResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddLogSDKResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddLogSDKResponse(soap*, ns1__AddLogSDKResponse*) deserialize from a stream
/// - int soap_write_ns1__AddLogSDKResponse(soap, ns1__AddLogSDKResponse*) serialize to a stream
class ns1__AddLogSDKResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLogResult.
    ns1__abxLogResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByCont is a complexType.
/// class ns1__GetUploadDetailByCont operations:
/// - soap_new_ns1__GetUploadDetailByCont(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByCont(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByCont(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByCont(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByCont(soap*, ns1__GetUploadDetailByCont*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByCont(soap, ns1__GetUploadDetailByCont*) serialize to a stream
class ns1__GetUploadDetailByCont : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByContResponse is a complexType.
/// class ns1__GetUploadDetailByContResponse operations:
/// - soap_new_ns1__GetUploadDetailByContResponse(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByContResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByContResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByContResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByContResponse(soap*, ns1__GetUploadDetailByContResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByContResponse(soap, ns1__GetUploadDetailByContResponse*) serialize to a stream
class ns1__GetUploadDetailByContResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DigitalSign is a complexType.
/// class ns1__DigitalSign operations:
/// - soap_new_ns1__DigitalSign(soap*) allocate
/// - soap_new_ns1__DigitalSign(soap*, int num) allocate array
/// - soap_new_req_ns1__DigitalSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DigitalSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DigitalSign(soap*, ns1__DigitalSign*) deserialize from a stream
/// - int soap_write_ns1__DigitalSign(soap, ns1__DigitalSign*) serialize to a stream
class ns1__DigitalSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizedataIds                  0;
/// Pointer to array char* of length 0..unbounded
    char*                               *dataIds                        0;	///< Nillable pointer.
/// Size of array of char* is 0..unbounded
   $int                                  __sizefileCodes                0;
/// Pointer to array char* of length 0..unbounded
    char*                               *fileCodes                      0;	///< Nillable pointer.
/// Element signUsername of type xs:string.
    char*                                signUsername                   0;	///< Optional element.
/// Element signPassword of type xs:string.
    char*                                signPassword                   0;	///< Optional element.
/// Element signType of type xs:int.
    int*                                 signType                       0;	///< Optional element.
};

/// "http://ws.abx/":DigitalSignResponse is a complexType.
/// class ns1__DigitalSignResponse operations:
/// - soap_new_ns1__DigitalSignResponse(soap*) allocate
/// - soap_new_ns1__DigitalSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DigitalSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DigitalSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DigitalSignResponse(soap*, ns1__DigitalSignResponse*) deserialize from a stream
/// - int soap_write_ns1__DigitalSignResponse(soap, ns1__DigitalSignResponse*) serialize to a stream
class ns1__DigitalSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetFieldProperties is a complexType.
/// class ns1__GetFieldProperties operations:
/// - soap_new_ns1__GetFieldProperties(soap*) allocate
/// - soap_new_ns1__GetFieldProperties(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldProperties(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldProperties(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldProperties(soap*, ns1__GetFieldProperties*) deserialize from a stream
/// - int soap_write_ns1__GetFieldProperties(soap, ns1__GetFieldProperties*) serialize to a stream
class ns1__GetFieldProperties : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element FieldName of type xs:string.
    char*                                FieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":GetFieldPropertiesResponse is a complexType.
/// class ns1__GetFieldPropertiesResponse operations:
/// - soap_new_ns1__GetFieldPropertiesResponse(soap*) allocate
/// - soap_new_ns1__GetFieldPropertiesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFieldPropertiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFieldPropertiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFieldPropertiesResponse(soap*, ns1__GetFieldPropertiesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFieldPropertiesResponse(soap, ns1__GetFieldPropertiesResponse*) serialize to a stream
class ns1__GetFieldPropertiesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFieldResult.
    ns1__abxFieldResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUploadPath is a complexType.
/// class ns1__SetTmpUploadPath operations:
/// - soap_new_ns1__SetTmpUploadPath(soap*) allocate
/// - soap_new_ns1__SetTmpUploadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUploadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUploadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUploadPath(soap*, ns1__SetTmpUploadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUploadPath(soap, ns1__SetTmpUploadPath*) serialize to a stream
class ns1__SetTmpUploadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUploadPathResponse is a complexType.
/// class ns1__SetTmpUploadPathResponse operations:
/// - soap_new_ns1__SetTmpUploadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpUploadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUploadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUploadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUploadPathResponse(soap*, ns1__SetTmpUploadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUploadPathResponse(soap, ns1__SetTmpUploadPathResponse*) serialize to a stream
class ns1__SetTmpUploadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DelExpression is a complexType.
/// class ns1__DelExpression operations:
/// - soap_new_ns1__DelExpression(soap*) allocate
/// - soap_new_ns1__DelExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__DelExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelExpression(soap*, ns1__DelExpression*) deserialize from a stream
/// - int soap_write_ns1__DelExpression(soap, ns1__DelExpression*) serialize to a stream
class ns1__DelExpression : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
};

/// "http://ws.abx/":DelExpressionResponse is a complexType.
/// class ns1__DelExpressionResponse operations:
/// - soap_new_ns1__DelExpressionResponse(soap*) allocate
/// - soap_new_ns1__DelExpressionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DelExpressionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelExpressionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelExpressionResponse(soap*, ns1__DelExpressionResponse*) deserialize from a stream
/// - int soap_write_ns1__DelExpressionResponse(soap, ns1__DelExpressionResponse*) serialize to a stream
class ns1__DelExpressionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanEditProtocol is a complexType.
/// class ns1__CanEditProtocol operations:
/// - soap_new_ns1__CanEditProtocol(soap*) allocate
/// - soap_new_ns1__CanEditProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__CanEditProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanEditProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanEditProtocol(soap*, ns1__CanEditProtocol*) deserialize from a stream
/// - int soap_write_ns1__CanEditProtocol(soap, ns1__CanEditProtocol*) serialize to a stream
class ns1__CanEditProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolId of type xs:string.
    char*                                protocolId                     0;	///< Optional element.
};

/// "http://ws.abx/":CanEditProtocolResponse is a complexType.
/// class ns1__CanEditProtocolResponse operations:
/// - soap_new_ns1__CanEditProtocolResponse(soap*) allocate
/// - soap_new_ns1__CanEditProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanEditProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanEditProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanEditProtocolResponse(soap*, ns1__CanEditProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__CanEditProtocolResponse(soap, ns1__CanEditProtocolResponse*) serialize to a stream
class ns1__CanEditProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUserList is a complexType.
/// class ns1__GetUserList operations:
/// - soap_new_ns1__GetUserList(soap*) allocate
/// - soap_new_ns1__GetUserList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserList(soap*, ns1__GetUserList*) deserialize from a stream
/// - int soap_write_ns1__GetUserList(soap, ns1__GetUserList*) serialize to a stream
class ns1__GetUserList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element userField of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        userField                      0;	///< Optional element.
};

/// "http://ws.abx/":GetUserListResponse is a complexType.
/// class ns1__GetUserListResponse operations:
/// - soap_new_ns1__GetUserListResponse(soap*) allocate
/// - soap_new_ns1__GetUserListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserListResponse(soap*, ns1__GetUserListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUserListResponse(soap, ns1__GetUserListResponse*) serialize to a stream
class ns1__GetUserListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteUSFileByCode is a complexType.
/// class ns1__DeleteUSFileByCode operations:
/// - soap_new_ns1__DeleteUSFileByCode(soap*) allocate
/// - soap_new_ns1__DeleteUSFileByCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUSFileByCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUSFileByCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUSFileByCode(soap*, ns1__DeleteUSFileByCode*) deserialize from a stream
/// - int soap_write_ns1__DeleteUSFileByCode(soap, ns1__DeleteUSFileByCode*) serialize to a stream
class ns1__DeleteUSFileByCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteUSFileByCodeResponse is a complexType.
/// class ns1__DeleteUSFileByCodeResponse operations:
/// - soap_new_ns1__DeleteUSFileByCodeResponse(soap*) allocate
/// - soap_new_ns1__DeleteUSFileByCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUSFileByCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUSFileByCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUSFileByCodeResponse(soap*, ns1__DeleteUSFileByCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteUSFileByCodeResponse(soap, ns1__DeleteUSFileByCodeResponse*) serialize to a stream
class ns1__DeleteUSFileByCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadTPSendChunk is a complexType.
/// class ns1__UploadTPSendChunk operations:
/// - soap_new_ns1__UploadTPSendChunk(soap*) allocate
/// - soap_new_ns1__UploadTPSendChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadTPSendChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadTPSendChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadTPSendChunk(soap*, ns1__UploadTPSendChunk*) deserialize from a stream
/// - int soap_write_ns1__UploadTPSendChunk(soap, ns1__UploadTPSendChunk*) serialize to a stream
class ns1__UploadTPSendChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element chunk of type xs:base64Binary.
    xsd__base64Binary*                   chunk                          0;	///< Nillable pointer.
};

/// "http://ws.abx/":UploadTPSendChunkResponse is a complexType.
/// class ns1__UploadTPSendChunkResponse operations:
/// - soap_new_ns1__UploadTPSendChunkResponse(soap*) allocate
/// - soap_new_ns1__UploadTPSendChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadTPSendChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadTPSendChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadTPSendChunkResponse(soap*, ns1__UploadTPSendChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadTPSendChunkResponse(soap, ns1__UploadTPSendChunkResponse*) serialize to a stream
class ns1__UploadTPSendChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileContainer is a complexType.
/// class ns1__DownloadFileContainer operations:
/// - soap_new_ns1__DownloadFileContainer(soap*) allocate
/// - soap_new_ns1__DownloadFileContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileContainer(soap*, ns1__DownloadFileContainer*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileContainer(soap, ns1__DownloadFileContainer*) serialize to a stream
class ns1__DownloadFileContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element containerAttachmentId of type xs:string.
    char*                                containerAttachmentId          0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileContainerResponse is a complexType.
/// class ns1__DownloadFileContainerResponse operations:
/// - soap_new_ns1__DownloadFileContainerResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileContainerResponse(soap*, ns1__DownloadFileContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileContainerResponse(soap, ns1__DownloadFileContainerResponse*) serialize to a stream
class ns1__DownloadFileContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpTPDownloadPath is a complexType.
/// class ns1__SetTmpTPDownloadPath operations:
/// - soap_new_ns1__SetTmpTPDownloadPath(soap*) allocate
/// - soap_new_ns1__SetTmpTPDownloadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpTPDownloadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpTPDownloadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpTPDownloadPath(soap*, ns1__SetTmpTPDownloadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpTPDownloadPath(soap, ns1__SetTmpTPDownloadPath*) serialize to a stream
class ns1__SetTmpTPDownloadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpTPDownloadPathResponse is a complexType.
/// class ns1__SetTmpTPDownloadPathResponse operations:
/// - soap_new_ns1__SetTmpTPDownloadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpTPDownloadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpTPDownloadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpTPDownloadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpTPDownloadPathResponse(soap*, ns1__SetTmpTPDownloadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpTPDownloadPathResponse(soap, ns1__SetTmpTPDownloadPathResponse*) serialize to a stream
class ns1__SetTmpTPDownloadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteUSFileById is a complexType.
/// class ns1__DeleteUSFileById operations:
/// - soap_new_ns1__DeleteUSFileById(soap*) allocate
/// - soap_new_ns1__DeleteUSFileById(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUSFileById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUSFileById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUSFileById(soap*, ns1__DeleteUSFileById*) deserialize from a stream
/// - int soap_write_ns1__DeleteUSFileById(soap, ns1__DeleteUSFileById*) serialize to a stream
class ns1__DeleteUSFileById : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileId of type xs:string.
    char*                                fileId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteUSFileByIdResponse is a complexType.
/// class ns1__DeleteUSFileByIdResponse operations:
/// - soap_new_ns1__DeleteUSFileByIdResponse(soap*) allocate
/// - soap_new_ns1__DeleteUSFileByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUSFileByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUSFileByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUSFileByIdResponse(soap*, ns1__DeleteUSFileByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteUSFileByIdResponse(soap, ns1__DeleteUSFileByIdResponse*) serialize to a stream
class ns1__DeleteUSFileByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTranslationByCode is a complexType.
/// class ns1__DeleteTranslationByCode operations:
/// - soap_new_ns1__DeleteTranslationByCode(soap*) allocate
/// - soap_new_ns1__DeleteTranslationByCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTranslationByCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTranslationByCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTranslationByCode(soap*, ns1__DeleteTranslationByCode*) deserialize from a stream
/// - int soap_write_ns1__DeleteTranslationByCode(soap, ns1__DeleteTranslationByCode*) serialize to a stream
class ns1__DeleteTranslationByCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element messageId of type xs:string.
    char*                                messageId                      0;	///< Optional element.
/// Element exLabelCode of type xs:string.
    char*                                exLabelCode                    0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTranslationByCodeResponse is a complexType.
/// class ns1__DeleteTranslationByCodeResponse operations:
/// - soap_new_ns1__DeleteTranslationByCodeResponse(soap*) allocate
/// - soap_new_ns1__DeleteTranslationByCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTranslationByCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTranslationByCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTranslationByCodeResponse(soap*, ns1__DeleteTranslationByCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteTranslationByCodeResponse(soap, ns1__DeleteTranslationByCodeResponse*) serialize to a stream
class ns1__DeleteTranslationByCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertFilter is a complexType.
/// class ns1__InsertFilter operations:
/// - soap_new_ns1__InsertFilter(soap*) allocate
/// - soap_new_ns1__InsertFilter(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFilter(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFilter(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFilter(soap*, ns1__InsertFilter*) deserialize from a stream
/// - int soap_write_ns1__InsertFilter(soap, ns1__InsertFilter*) serialize to a stream
class ns1__InsertFilter : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element filter of type "http://ws.abx/":AbxFilter.
    ns1__AbxFilter*                      filter                         0;	///< Optional element.
};

/// "http://ws.abx/":InsertFilterResponse is a complexType.
/// class ns1__InsertFilterResponse operations:
/// - soap_new_ns1__InsertFilterResponse(soap*) allocate
/// - soap_new_ns1__InsertFilterResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFilterResponse(soap*, ns1__InsertFilterResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertFilterResponse(soap, ns1__InsertFilterResponse*) serialize to a stream
class ns1__InsertFilterResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":AbxFilterResult.
    ns1__AbxFilterResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileList is a complexType.
/// class ns1__GetDataFileList operations:
/// - soap_new_ns1__GetDataFileList(soap*) allocate
/// - soap_new_ns1__GetDataFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileList(soap*, ns1__GetDataFileList*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileList(soap, ns1__GetDataFileList*) serialize to a stream
class ns1__GetDataFileList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListResponse is a complexType.
/// class ns1__GetDataFileListResponse operations:
/// - soap_new_ns1__GetDataFileListResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListResponse(soap*, ns1__GetDataFileListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListResponse(soap, ns1__GetDataFileListResponse*) serialize to a stream
class ns1__GetDataFileListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileList is a complexType.
/// class ns1__GetDataTPFileList operations:
/// - soap_new_ns1__GetDataTPFileList(soap*) allocate
/// - soap_new_ns1__GetDataTPFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileList(soap*, ns1__GetDataTPFileList*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileList(soap, ns1__GetDataTPFileList*) serialize to a stream
class ns1__GetDataTPFileList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListResponse is a complexType.
/// class ns1__GetDataTPFileListResponse operations:
/// - soap_new_ns1__GetDataTPFileListResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListResponse(soap*, ns1__GetDataTPFileListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListResponse(soap, ns1__GetDataTPFileListResponse*) serialize to a stream
class ns1__GetDataTPFileListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetRootId is a complexType.
/// class ns1__GetRootId operations:
/// - soap_new_ns1__GetRootId(soap*) allocate
/// - soap_new_ns1__GetRootId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetRootId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetRootId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetRootId(soap*, ns1__GetRootId*) deserialize from a stream
/// - int soap_write_ns1__GetRootId(soap, ns1__GetRootId*) serialize to a stream
class ns1__GetRootId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetRootIdResponse is a complexType.
/// class ns1__GetRootIdResponse operations:
/// - soap_new_ns1__GetRootIdResponse(soap*) allocate
/// - soap_new_ns1__GetRootIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetRootIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetRootIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetRootIdResponse(soap*, ns1__GetRootIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetRootIdResponse(soap, ns1__GetRootIdResponse*) serialize to a stream
class ns1__GetRootIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGiiResult.
    ns1__abxGiiResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationByLabelCode is a complexType.
/// class ns1__GetTranslationByLabelCode operations:
/// - soap_new_ns1__GetTranslationByLabelCode(soap*) allocate
/// - soap_new_ns1__GetTranslationByLabelCode(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByLabelCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByLabelCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByLabelCode(soap*, ns1__GetTranslationByLabelCode*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByLabelCode(soap, ns1__GetTranslationByLabelCode*) serialize to a stream
class ns1__GetTranslationByLabelCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element exLabelCode of type xs:string.
    char*                                exLabelCode                    0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationByLabelCodeResponse is a complexType.
/// class ns1__GetTranslationByLabelCodeResponse operations:
/// - soap_new_ns1__GetTranslationByLabelCodeResponse(soap*) allocate
/// - soap_new_ns1__GetTranslationByLabelCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationByLabelCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationByLabelCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationByLabelCodeResponse(soap*, ns1__GetTranslationByLabelCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationByLabelCodeResponse(soap, ns1__GetTranslationByLabelCodeResponse*) serialize to a stream
class ns1__GetTranslationByLabelCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTasksToRun is a complexType.
/// class ns1__GetSchedulerTasksToRun operations:
/// - soap_new_ns1__GetSchedulerTasksToRun(soap*) allocate
/// - soap_new_ns1__GetSchedulerTasksToRun(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTasksToRun(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTasksToRun(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTasksToRun(soap*, ns1__GetSchedulerTasksToRun*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTasksToRun(soap, ns1__GetSchedulerTasksToRun*) serialize to a stream
class ns1__GetSchedulerTasksToRun : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetSchedulerTasksToRunResponse is a complexType.
/// class ns1__GetSchedulerTasksToRunResponse operations:
/// - soap_new_ns1__GetSchedulerTasksToRunResponse(soap*) allocate
/// - soap_new_ns1__GetSchedulerTasksToRunResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSchedulerTasksToRunResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSchedulerTasksToRunResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSchedulerTasksToRunResponse(soap*, ns1__GetSchedulerTasksToRunResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSchedulerTasksToRunResponse(soap, ns1__GetSchedulerTasksToRunResponse*) serialize to a stream
class ns1__GetSchedulerTasksToRunResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileByFileUniqueCode is a complexType.
/// class ns1__DownloadFileByFileUniqueCode operations:
/// - soap_new_ns1__DownloadFileByFileUniqueCode(soap*) allocate
/// - soap_new_ns1__DownloadFileByFileUniqueCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileByFileUniqueCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileByFileUniqueCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileByFileUniqueCode(soap*, ns1__DownloadFileByFileUniqueCode*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileByFileUniqueCode(soap, ns1__DownloadFileByFileUniqueCode*) serialize to a stream
class ns1__DownloadFileByFileUniqueCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileUniqueCode of type xs:string.
    char*                                fileUniqueCode                 0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileByFileUniqueCodeResponse is a complexType.
/// class ns1__DownloadFileByFileUniqueCodeResponse operations:
/// - soap_new_ns1__DownloadFileByFileUniqueCodeResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileByFileUniqueCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileByFileUniqueCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileByFileUniqueCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileByFileUniqueCodeResponse(soap*, ns1__DownloadFileByFileUniqueCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileByFileUniqueCodeResponse(soap, ns1__DownloadFileByFileUniqueCodeResponse*) serialize to a stream
class ns1__DownloadFileByFileUniqueCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyRaccoglitore is a complexType.
/// class ns1__ModifyRaccoglitore operations:
/// - soap_new_ns1__ModifyRaccoglitore(soap*) allocate
/// - soap_new_ns1__ModifyRaccoglitore(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyRaccoglitore(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyRaccoglitore(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyRaccoglitore(soap*, ns1__ModifyRaccoglitore*) deserialize from a stream
/// - int soap_write_ns1__ModifyRaccoglitore(soap, ns1__ModifyRaccoglitore*) serialize to a stream
class ns1__ModifyRaccoglitore : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Template2Update of type "http://ws.abx/":abxTemplate.
    ns1__abxTemplate*                    Template2Update                0;	///< Optional element.
/// Element Container2Update of type "http://ws.abx/":abxContainer.
    ns1__abxContainer*                   Container2Update               0;	///< Optional element.
/// Element DynorgParam of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          DynorgParam                    0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
/// Element replicationList of type "http://ws.abx/":abxReplicationList.
    ns1__abxReplicationList*             replicationList                0;	///< Optional element.
};

/// "http://ws.abx/":ModifyRaccoglitoreResponse is a complexType.
/// class ns1__ModifyRaccoglitoreResponse operations:
/// - soap_new_ns1__ModifyRaccoglitoreResponse(soap*) allocate
/// - soap_new_ns1__ModifyRaccoglitoreResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyRaccoglitoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyRaccoglitoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyRaccoglitoreResponse(soap*, ns1__ModifyRaccoglitoreResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyRaccoglitoreResponse(soap, ns1__ModifyRaccoglitoreResponse*) serialize to a stream
class ns1__ModifyRaccoglitoreResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxRaccoglitoreResult.
    ns1__abxRaccoglitoreResult*          return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_DB_modify is a complexType.
/// class ns1__Fk_USCOREDB_USCOREmodify operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREmodify(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREmodify(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREmodify(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREmodify(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREmodify(soap*, ns1__Fk_USCOREDB_USCOREmodify*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREmodify(soap, ns1__Fk_USCOREDB_USCOREmodify*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREmodify : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element optionGetCache of type xs:boolean.
    bool                                 optionGetCache                 1;	///< Required element.
/// Element optionSetDesc of type xs:boolean.
    bool                                 optionSetDesc                  1;	///< Required element.
};

/// "http://ws.abx/":Fk_DB_modifyResponse is a complexType.
/// class ns1__Fk_USCOREDB_USCOREmodifyResponse operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap*, ns1__Fk_USCOREDB_USCOREmodifyResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREmodifyResponse(soap, ns1__Fk_USCOREDB_USCOREmodifyResponse*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREmodifyResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUSUploadPath is a complexType.
/// class ns1__SetTmpUSUploadPath operations:
/// - soap_new_ns1__SetTmpUSUploadPath(soap*) allocate
/// - soap_new_ns1__SetTmpUSUploadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUSUploadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUSUploadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUSUploadPath(soap*, ns1__SetTmpUSUploadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUSUploadPath(soap, ns1__SetTmpUSUploadPath*) serialize to a stream
class ns1__SetTmpUSUploadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpUSUploadPathResponse is a complexType.
/// class ns1__SetTmpUSUploadPathResponse operations:
/// - soap_new_ns1__SetTmpUSUploadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpUSUploadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpUSUploadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpUSUploadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpUSUploadPathResponse(soap*, ns1__SetTmpUSUploadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpUSUploadPathResponse(soap, ns1__SetTmpUSUploadPathResponse*) serialize to a stream
class ns1__SetTmpUSUploadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListContainer is a complexType.
/// class ns1__GetDataFileListContainer operations:
/// - soap_new_ns1__GetDataFileListContainer(soap*) allocate
/// - soap_new_ns1__GetDataFileListContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListContainer(soap*, ns1__GetDataFileListContainer*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListContainer(soap, ns1__GetDataFileListContainer*) serialize to a stream
class ns1__GetDataFileListContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileListContainerResponse is a complexType.
/// class ns1__GetDataFileListContainerResponse operations:
/// - soap_new_ns1__GetDataFileListContainerResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileListContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileListContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileListContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileListContainerResponse(soap*, ns1__GetDataFileListContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileListContainerResponse(soap, ns1__GetDataFileListContainerResponse*) serialize to a stream
class ns1__GetDataFileListContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadWFEndFile is a complexType.
/// class ns1__UploadWFEndFile operations:
/// - soap_new_ns1__UploadWFEndFile(soap*) allocate
/// - soap_new_ns1__UploadWFEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadWFEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadWFEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadWFEndFile(soap*, ns1__UploadWFEndFile*) deserialize from a stream
/// - int soap_write_ns1__UploadWFEndFile(soap, ns1__UploadWFEndFile*) serialize to a stream
class ns1__UploadWFEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element codePrevioWFVersion of type xs:string.
    char*                                codePrevioWFVersion            0;	///< Optional element.
};

/// "http://ws.abx/":UploadWFEndFileResponse is a complexType.
/// class ns1__UploadWFEndFileResponse operations:
/// - soap_new_ns1__UploadWFEndFileResponse(soap*) allocate
/// - soap_new_ns1__UploadWFEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadWFEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadWFEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadWFEndFileResponse(soap*, ns1__UploadWFEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadWFEndFileResponse(soap, ns1__UploadWFEndFileResponse*) serialize to a stream
class ns1__UploadWFEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModSign is a complexType.
/// class ns1__ModSign operations:
/// - soap_new_ns1__ModSign(soap*) allocate
/// - soap_new_ns1__ModSign(soap*, int num) allocate array
/// - soap_new_req_ns1__ModSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModSign(soap*, ns1__ModSign*) deserialize from a stream
/// - int soap_write_ns1__ModSign(soap, ns1__ModSign*) serialize to a stream
class ns1__ModSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":ModSignResponse is a complexType.
/// class ns1__ModSignResponse operations:
/// - soap_new_ns1__ModSignResponse(soap*) allocate
/// - soap_new_ns1__ModSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModSignResponse(soap*, ns1__ModSignResponse*) deserialize from a stream
/// - int soap_write_ns1__ModSignResponse(soap, ns1__ModSignResponse*) serialize to a stream
class ns1__ModSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_getAll is a complexType.
/// class ns1__Combo_USCOREgetAll operations:
/// - soap_new_ns1__Combo_USCOREgetAll(soap*) allocate
/// - soap_new_ns1__Combo_USCOREgetAll(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREgetAll(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREgetAll(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREgetAll(soap*, ns1__Combo_USCOREgetAll*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREgetAll(soap, ns1__Combo_USCOREgetAll*) serialize to a stream
class ns1__Combo_USCOREgetAll : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Combo_getAllResponse is a complexType.
/// class ns1__Combo_USCOREgetAllResponse operations:
/// - soap_new_ns1__Combo_USCOREgetAllResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREgetAllResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREgetAllResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREgetAllResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREgetAllResponse(soap*, ns1__Combo_USCOREgetAllResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREgetAllResponse(soap, ns1__Combo_USCOREgetAllResponse*) serialize to a stream
class ns1__Combo_USCOREgetAllResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetChunk is a complexType.
/// class ns1__DownloadGetChunk operations:
/// - soap_new_ns1__DownloadGetChunk(soap*) allocate
/// - soap_new_ns1__DownloadGetChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetChunk(soap*, ns1__DownloadGetChunk*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetChunk(soap, ns1__DownloadGetChunk*) serialize to a stream
class ns1__DownloadGetChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element dimChunk of type xs:string.
    char*                                dimChunk                       0;	///< Optional element.
/// Element offset of type xs:string.
    char*                                offset                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadGetChunkResponse is a complexType.
/// class ns1__DownloadGetChunkResponse operations:
/// - soap_new_ns1__DownloadGetChunkResponse(soap*) allocate
/// - soap_new_ns1__DownloadGetChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadGetChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadGetChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadGetChunkResponse(soap*, ns1__DownloadGetChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadGetChunkResponse(soap, ns1__DownloadGetChunkResponse*) serialize to a stream
class ns1__DownloadGetChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyGroup is a complexType.
/// class ns1__ModifyGroup operations:
/// - soap_new_ns1__ModifyGroup(soap*) allocate
/// - soap_new_ns1__ModifyGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyGroup(soap*, ns1__ModifyGroup*) deserialize from a stream
/// - int soap_write_ns1__ModifyGroup(soap, ns1__ModifyGroup*) serialize to a stream
class ns1__ModifyGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element group of type "http://ws.abx/":abxGroup.
    ns1__abxGroup*                       group                          0;	///< Optional element.
};

/// "http://ws.abx/":ModifyGroupResponse is a complexType.
/// class ns1__ModifyGroupResponse operations:
/// - soap_new_ns1__ModifyGroupResponse(soap*) allocate
/// - soap_new_ns1__ModifyGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyGroupResponse(soap*, ns1__ModifyGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyGroupResponse(soap, ns1__ModifyGroupResponse*) serialize to a stream
class ns1__ModifyGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGroupResult.
    ns1__abxGroupResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertUserConfig is a complexType.
/// class ns1__InsertUserConfig operations:
/// - soap_new_ns1__InsertUserConfig(soap*) allocate
/// - soap_new_ns1__InsertUserConfig(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUserConfig(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUserConfig(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUserConfig(soap*, ns1__InsertUserConfig*) deserialize from a stream
/// - int soap_write_ns1__InsertUserConfig(soap, ns1__InsertUserConfig*) serialize to a stream
class ns1__InsertUserConfig : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element configList of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        configList                     0;	///< Optional element.
};

/// "http://ws.abx/":InsertUserConfigResponse is a complexType.
/// class ns1__InsertUserConfigResponse operations:
/// - soap_new_ns1__InsertUserConfigResponse(soap*) allocate
/// - soap_new_ns1__InsertUserConfigResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertUserConfigResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertUserConfigResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertUserConfigResponse(soap*, ns1__InsertUserConfigResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertUserConfigResponse(soap, ns1__InsertUserConfigResponse*) serialize to a stream
class ns1__InsertUserConfigResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByName is a complexType.
/// class ns1__GetProtocolByName operations:
/// - soap_new_ns1__GetProtocolByName(soap*) allocate
/// - soap_new_ns1__GetProtocolByName(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByName(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByName(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByName(soap*, ns1__GetProtocolByName*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByName(soap, ns1__GetProtocolByName*) serialize to a stream
class ns1__GetProtocolByName : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolName of type xs:string.
    char*                                protocolName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByNameResponse is a complexType.
/// class ns1__GetProtocolByNameResponse operations:
/// - soap_new_ns1__GetProtocolByNameResponse(soap*) allocate
/// - soap_new_ns1__GetProtocolByNameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByNameResponse(soap*, ns1__GetProtocolByNameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByNameResponse(soap, ns1__GetProtocolByNameResponse*) serialize to a stream
class ns1__GetProtocolByNameResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canModifyContainer is a complexType.
/// class ns1__canModifyContainer operations:
/// - soap_new_ns1__canModifyContainer(soap*) allocate
/// - soap_new_ns1__canModifyContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyContainer(soap*, ns1__canModifyContainer*) deserialize from a stream
/// - int soap_write_ns1__canModifyContainer(soap, ns1__canModifyContainer*) serialize to a stream
class ns1__canModifyContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":canModifyContainerResponse is a complexType.
/// class ns1__canModifyContainerResponse operations:
/// - soap_new_ns1__canModifyContainerResponse(soap*) allocate
/// - soap_new_ns1__canModifyContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyContainerResponse(soap*, ns1__canModifyContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__canModifyContainerResponse(soap, ns1__canModifyContainerResponse*) serialize to a stream
class ns1__canModifyContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslationDecimalCode is a complexType.
/// class ns1__InsertTranslationDecimalCode operations:
/// - soap_new_ns1__InsertTranslationDecimalCode(soap*) allocate
/// - soap_new_ns1__InsertTranslationDecimalCode(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslationDecimalCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslationDecimalCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslationDecimalCode(soap*, ns1__InsertTranslationDecimalCode*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslationDecimalCode(soap, ns1__InsertTranslationDecimalCode*) serialize to a stream
class ns1__InsertTranslationDecimalCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element transLang of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 transLang                      0;	///< Optional element.
/// Element decimalLabelCode of type xs:string.
    char*                                decimalLabelCode               0;	///< Optional element.
/// Element exArchiboxSourceSuffix of type xs:string.
    char*                                exArchiboxSourceSuffix         0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslationDecimalCodeResponse is a complexType.
/// class ns1__InsertTranslationDecimalCodeResponse operations:
/// - soap_new_ns1__InsertTranslationDecimalCodeResponse(soap*) allocate
/// - soap_new_ns1__InsertTranslationDecimalCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslationDecimalCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslationDecimalCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslationDecimalCodeResponse(soap*, ns1__InsertTranslationDecimalCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslationDecimalCodeResponse(soap, ns1__InsertTranslationDecimalCodeResponse*) serialize to a stream
class ns1__InsertTranslationDecimalCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationBySourceSuffix is a complexType.
/// class ns1__GetTranslationBySourceSuffix operations:
/// - soap_new_ns1__GetTranslationBySourceSuffix(soap*) allocate
/// - soap_new_ns1__GetTranslationBySourceSuffix(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationBySourceSuffix(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationBySourceSuffix(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationBySourceSuffix(soap*, ns1__GetTranslationBySourceSuffix*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationBySourceSuffix(soap, ns1__GetTranslationBySourceSuffix*) serialize to a stream
class ns1__GetTranslationBySourceSuffix : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element exSourceSuffix of type xs:string.
    char*                                exSourceSuffix                 0;	///< Optional element.
};

/// "http://ws.abx/":GetTranslationBySourceSuffixResponse is a complexType.
/// class ns1__GetTranslationBySourceSuffixResponse operations:
/// - soap_new_ns1__GetTranslationBySourceSuffixResponse(soap*) allocate
/// - soap_new_ns1__GetTranslationBySourceSuffixResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTranslationBySourceSuffixResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTranslationBySourceSuffixResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTranslationBySourceSuffixResponse(soap*, ns1__GetTranslationBySourceSuffixResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTranslationBySourceSuffixResponse(soap, ns1__GetTranslationBySourceSuffixResponse*) serialize to a stream
class ns1__GetTranslationBySourceSuffixResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDynorgList is a complexType.
/// class ns1__GetDynorgList operations:
/// - soap_new_ns1__GetDynorgList(soap*) allocate
/// - soap_new_ns1__GetDynorgList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDynorgList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDynorgList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDynorgList(soap*, ns1__GetDynorgList*) deserialize from a stream
/// - int soap_write_ns1__GetDynorgList(soap, ns1__GetDynorgList*) serialize to a stream
class ns1__GetDynorgList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDynorgListResponse is a complexType.
/// class ns1__GetDynorgListResponse operations:
/// - soap_new_ns1__GetDynorgListResponse(soap*) allocate
/// - soap_new_ns1__GetDynorgListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDynorgListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDynorgListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDynorgListResponse(soap*, ns1__GetDynorgListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDynorgListResponse(soap, ns1__GetDynorgListResponse*) serialize to a stream
class ns1__GetDynorgListResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicRuleResult.
    ns3__abxDynamicRuleResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_DB_delete is a complexType.
/// class ns1__Fk_USCOREDB_USCOREdelete operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREdelete(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREdelete(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREdelete(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREdelete(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREdelete(soap*, ns1__Fk_USCOREDB_USCOREdelete*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREdelete(soap, ns1__Fk_USCOREDB_USCOREdelete*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREdelete : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
};

/// "http://ws.abx/":Fk_DB_deleteResponse is a complexType.
/// class ns1__Fk_USCOREDB_USCOREdeleteResponse operations:
/// - soap_new_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap*, ns1__Fk_USCOREDB_USCOREdeleteResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREDB_USCOREdeleteResponse(soap, ns1__Fk_USCOREDB_USCOREdeleteResponse*) serialize to a stream
class ns1__Fk_USCOREDB_USCOREdeleteResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadTPEndFile is a complexType.
/// class ns1__UploadTPEndFile operations:
/// - soap_new_ns1__UploadTPEndFile(soap*) allocate
/// - soap_new_ns1__UploadTPEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadTPEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadTPEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadTPEndFile(soap*, ns1__UploadTPEndFile*) deserialize from a stream
/// - int soap_write_ns1__UploadTPEndFile(soap, ns1__UploadTPEndFile*) serialize to a stream
class ns1__UploadTPEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileTpList.
    ns1__abxFileTpList*                  dataListInput                  0;	///< Optional element.
/// Element codePreviousVersion of type xs:string.
    char*                                codePreviousVersion            0;	///< Optional element.
};

/// "http://ws.abx/":UploadTPEndFileResponse is a complexType.
/// class ns1__UploadTPEndFileResponse operations:
/// - soap_new_ns1__UploadTPEndFileResponse(soap*) allocate
/// - soap_new_ns1__UploadTPEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadTPEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadTPEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadTPEndFileResponse(soap*, ns1__UploadTPEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadTPEndFileResponse(soap, ns1__UploadTPEndFileResponse*) serialize to a stream
class ns1__UploadTPEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddUserSettings is a complexType.
/// class ns1__AddUserSettings operations:
/// - soap_new_ns1__AddUserSettings(soap*) allocate
/// - soap_new_ns1__AddUserSettings(soap*, int num) allocate array
/// - soap_new_req_ns1__AddUserSettings(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddUserSettings(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddUserSettings(soap*, ns1__AddUserSettings*) deserialize from a stream
/// - int soap_write_ns1__AddUserSettings(soap, ns1__AddUserSettings*) serialize to a stream
class ns1__AddUserSettings : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":AddUserSettingsResponse is a complexType.
/// class ns1__AddUserSettingsResponse operations:
/// - soap_new_ns1__AddUserSettingsResponse(soap*) allocate
/// - soap_new_ns1__AddUserSettingsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddUserSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddUserSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddUserSettingsResponse(soap*, ns1__AddUserSettingsResponse*) deserialize from a stream
/// - int soap_write_ns1__AddUserSettingsResponse(soap, ns1__AddUserSettingsResponse*) serialize to a stream
class ns1__AddUserSettingsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByDataId is a complexType.
/// class ns1__GetUploadDetailByDataId operations:
/// - soap_new_ns1__GetUploadDetailByDataId(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByDataId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByDataId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByDataId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByDataId(soap*, ns1__GetUploadDetailByDataId*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByDataId(soap, ns1__GetUploadDetailByDataId*) serialize to a stream
class ns1__GetUploadDetailByDataId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetUploadDetailByDataIdResponse is a complexType.
/// class ns1__GetUploadDetailByDataIdResponse operations:
/// - soap_new_ns1__GetUploadDetailByDataIdResponse(soap*) allocate
/// - soap_new_ns1__GetUploadDetailByDataIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUploadDetailByDataIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUploadDetailByDataIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUploadDetailByDataIdResponse(soap*, ns1__GetUploadDetailByDataIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUploadDetailByDataIdResponse(soap, ns1__GetUploadDetailByDataIdResponse*) serialize to a stream
class ns1__GetUploadDetailByDataIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_removeItem is a complexType.
/// class ns1__Combo_USCOREremoveItem operations:
/// - soap_new_ns1__Combo_USCOREremoveItem(soap*) allocate
/// - soap_new_ns1__Combo_USCOREremoveItem(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREremoveItem(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREremoveItem(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREremoveItem(soap*, ns1__Combo_USCOREremoveItem*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREremoveItem(soap, ns1__Combo_USCOREremoveItem*) serialize to a stream
class ns1__Combo_USCOREremoveItem : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element descItem of type xs:string.
    char*                                descItem                       0;	///< Optional element.
};

/// "http://ws.abx/":Combo_removeItemResponse is a complexType.
/// class ns1__Combo_USCOREremoveItemResponse operations:
/// - soap_new_ns1__Combo_USCOREremoveItemResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREremoveItemResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREremoveItemResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREremoveItemResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREremoveItemResponse(soap*, ns1__Combo_USCOREremoveItemResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREremoveItemResponse(soap, ns1__Combo_USCOREremoveItemResponse*) serialize to a stream
class ns1__Combo_USCOREremoveItemResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyDynorg is a complexType.
/// class ns1__ModifyDynorg operations:
/// - soap_new_ns1__ModifyDynorg(soap*) allocate
/// - soap_new_ns1__ModifyDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyDynorg(soap*, ns1__ModifyDynorg*) deserialize from a stream
/// - int soap_write_ns1__ModifyDynorg(soap, ns1__ModifyDynorg*) serialize to a stream
class ns1__ModifyDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element DynorgParam of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicorgRuleList.
    ns3__abxDynamicorgRuleList*          DynorgParam                    0;	///< Optional element.
};

/// "http://ws.abx/":ModifyDynorgResponse is a complexType.
/// class ns1__ModifyDynorgResponse operations:
/// - soap_new_ns1__ModifyDynorgResponse(soap*) allocate
/// - soap_new_ns1__ModifyDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyDynorgResponse(soap*, ns1__ModifyDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyDynorgResponse(soap, ns1__ModifyDynorgResponse*) serialize to a stream
class ns1__ModifyDynorgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxDynaminorg":abxDynamicRuleResult.
    ns3__abxDynamicRuleResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataById is a complexType.
/// class ns1__GetDataById operations:
/// - soap_new_ns1__GetDataById(soap*) allocate
/// - soap_new_ns1__GetDataById(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataById(soap*, ns1__GetDataById*) deserialize from a stream
/// - int soap_write_ns1__GetDataById(soap, ns1__GetDataById*) serialize to a stream
class ns1__GetDataById : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDataByIdResponse is a complexType.
/// class ns1__GetDataByIdResponse operations:
/// - soap_new_ns1__GetDataByIdResponse(soap*) allocate
/// - soap_new_ns1__GetDataByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataByIdResponse(soap*, ns1__GetDataByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataByIdResponse(soap, ns1__GetDataByIdResponse*) serialize to a stream
class ns1__GetDataByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetListDataWA is a complexType.
/// class ns1__GetListDataWA operations:
/// - soap_new_ns1__GetListDataWA(soap*) allocate
/// - soap_new_ns1__GetListDataWA(soap*, int num) allocate array
/// - soap_new_req_ns1__GetListDataWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetListDataWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetListDataWA(soap*, ns1__GetListDataWA*) deserialize from a stream
/// - int soap_write_ns1__GetListDataWA(soap, ns1__GetListDataWA*) serialize to a stream
class ns1__GetListDataWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetListDataWAResponse is a complexType.
/// class ns1__GetListDataWAResponse operations:
/// - soap_new_ns1__GetListDataWAResponse(soap*) allocate
/// - soap_new_ns1__GetListDataWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetListDataWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetListDataWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetListDataWAResponse(soap*, ns1__GetListDataWAResponse*) deserialize from a stream
/// - int soap_write_ns1__GetListDataWAResponse(soap, ns1__GetListDataWAResponse*) serialize to a stream
class ns1__GetListDataWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteWFFileByCode is a complexType.
/// class ns1__DeleteWFFileByCode operations:
/// - soap_new_ns1__DeleteWFFileByCode(soap*) allocate
/// - soap_new_ns1__DeleteWFFileByCode(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteWFFileByCode(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteWFFileByCode(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteWFFileByCode(soap*, ns1__DeleteWFFileByCode*) deserialize from a stream
/// - int soap_write_ns1__DeleteWFFileByCode(soap, ns1__DeleteWFFileByCode*) serialize to a stream
class ns1__DeleteWFFileByCode : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteWFFileByCodeResponse is a complexType.
/// class ns1__DeleteWFFileByCodeResponse operations:
/// - soap_new_ns1__DeleteWFFileByCodeResponse(soap*) allocate
/// - soap_new_ns1__DeleteWFFileByCodeResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteWFFileByCodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteWFFileByCodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteWFFileByCodeResponse(soap*, ns1__DeleteWFFileByCodeResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteWFFileByCodeResponse(soap, ns1__DeleteWFFileByCodeResponse*) serialize to a stream
class ns1__DeleteWFFileByCodeResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetContSign is a complexType.
/// class ns1__GetContSign operations:
/// - soap_new_ns1__GetContSign(soap*) allocate
/// - soap_new_ns1__GetContSign(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContSign(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContSign(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContSign(soap*, ns1__GetContSign*) deserialize from a stream
/// - int soap_write_ns1__GetContSign(soap, ns1__GetContSign*) serialize to a stream
class ns1__GetContSign : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetContSignResponse is a complexType.
/// class ns1__GetContSignResponse operations:
/// - soap_new_ns1__GetContSignResponse(soap*) allocate
/// - soap_new_ns1__GetContSignResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetContSignResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetContSignResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetContSignResponse(soap*, ns1__GetContSignResponse*) deserialize from a stream
/// - int soap_write_ns1__GetContSignResponse(soap, ns1__GetContSignResponse*) serialize to a stream
class ns1__GetContSignResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDomainList is a complexType.
/// class ns1__GetDomainList operations:
/// - soap_new_ns1__GetDomainList(soap*) allocate
/// - soap_new_ns1__GetDomainList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDomainList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDomainList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDomainList(soap*, ns1__GetDomainList*) deserialize from a stream
/// - int soap_write_ns1__GetDomainList(soap, ns1__GetDomainList*) serialize to a stream
class ns1__GetDomainList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDomainListResponse is a complexType.
/// class ns1__GetDomainListResponse operations:
/// - soap_new_ns1__GetDomainListResponse(soap*) allocate
/// - soap_new_ns1__GetDomainListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDomainListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDomainListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDomainListResponse(soap*, ns1__GetDomainListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDomainListResponse(soap, ns1__GetDomainListResponse*) serialize to a stream
class ns1__GetDomainListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDomainResult.
    ns1__abxDomainResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxDomainResult is a complexType.
/// class ns1__abxDomainResult operations:
/// - soap_new_ns1__abxDomainResult(soap*) allocate
/// - soap_new_ns1__abxDomainResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxDomainResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxDomainResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxDomainResult(soap*, ns1__abxDomainResult*) deserialize from a stream
/// - int soap_write_ns1__abxDomainResult(soap, ns1__abxDomainResult*) serialize to a stream
class ns1__abxDomainResult : public xsd__anyType
{ public:
/// Element list of type "http://ws.abx/":abxDomainList.
    ns1__abxDomainList*                  list                           1;	///< Required element.
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
};

/// "http://ws.abx/":abxDomainList is a complexType.
/// class ns1__abxDomainList operations:
/// - soap_new_ns1__abxDomainList(soap*) allocate
/// - soap_new_ns1__abxDomainList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxDomainList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxDomainList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxDomainList(soap*, ns1__abxDomainList*) deserialize from a stream
/// - int soap_write_ns1__abxDomainList(soap, ns1__abxDomainList*) serialize to a stream
class ns1__abxDomainList : public xsd__anyType
{ public:
/// Size of array of ns1__abxDomain* is 1..unbounded
   $int                                  __sizedomainList               1;
/// Pointer to array ns1__abxDomain* of length 1..unbounded
    ns1__abxDomain*                     *domainList                     1;
};

/// "http://ws.abx/":abxDomain is a complexType.
/// class ns1__abxDomain operations:
/// - soap_new_ns1__abxDomain(soap*) allocate
/// - soap_new_ns1__abxDomain(soap*, int num) allocate array
/// - soap_new_req_ns1__abxDomain(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxDomain(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxDomain(soap*, ns1__abxDomain*) deserialize from a stream
/// - int soap_write_ns1__abxDomain(soap, ns1__abxDomain*) serialize to a stream
class ns1__abxDomain : public xsd__anyType
{ public:
/// Element domain_hash of type xs:string.
    char*                                domain_USCOREhash              1;	///< Required element.
/// Element domain_name of type xs:string.
    char*                                domain_USCOREname              1;	///< Required element.
};

/// "http://ws.abx/":UploadSendChunkWA is a complexType.
/// class ns1__UploadSendChunkWA operations:
/// - soap_new_ns1__UploadSendChunkWA(soap*) allocate
/// - soap_new_ns1__UploadSendChunkWA(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadSendChunkWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadSendChunkWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadSendChunkWA(soap*, ns1__UploadSendChunkWA*) deserialize from a stream
/// - int soap_write_ns1__UploadSendChunkWA(soap, ns1__UploadSendChunkWA*) serialize to a stream
class ns1__UploadSendChunkWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element chunk of type xs:base64Binary.
    xsd__base64Binary*                   chunk                          0;	///< Nillable pointer.
};

/// "http://ws.abx/":UploadSendChunkWAResponse is a complexType.
/// class ns1__UploadSendChunkWAResponse operations:
/// - soap_new_ns1__UploadSendChunkWAResponse(soap*) allocate
/// - soap_new_ns1__UploadSendChunkWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadSendChunkWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadSendChunkWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadSendChunkWAResponse(soap*, ns1__UploadSendChunkWAResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadSendChunkWAResponse(soap, ns1__UploadSendChunkWAResponse*) serialize to a stream
class ns1__UploadSendChunkWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkDocumentToDocument is a complexType.
/// class ns1__InsertLinkDocumentToDocument operations:
/// - soap_new_ns1__InsertLinkDocumentToDocument(soap*) allocate
/// - soap_new_ns1__InsertLinkDocumentToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkDocumentToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkDocumentToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkDocumentToDocument(soap*, ns1__InsertLinkDocumentToDocument*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkDocumentToDocument(soap, ns1__InsertLinkDocumentToDocument*) serialize to a stream
class ns1__InsertLinkDocumentToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element dataIdTo of type xs:string.
    char*                                dataIdTo                       0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":InsertLinkDocumentToDocumentResponse is a complexType.
/// class ns1__InsertLinkDocumentToDocumentResponse operations:
/// - soap_new_ns1__InsertLinkDocumentToDocumentResponse(soap*) allocate
/// - soap_new_ns1__InsertLinkDocumentToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertLinkDocumentToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertLinkDocumentToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertLinkDocumentToDocumentResponse(soap*, ns1__InsertLinkDocumentToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertLinkDocumentToDocumentResponse(soap, ns1__InsertLinkDocumentToDocumentResponse*) serialize to a stream
class ns1__InsertLinkDocumentToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetNewProtocolNumber is a complexType.
/// class ns1__GetNewProtocolNumber operations:
/// - soap_new_ns1__GetNewProtocolNumber(soap*) allocate
/// - soap_new_ns1__GetNewProtocolNumber(soap*, int num) allocate array
/// - soap_new_req_ns1__GetNewProtocolNumber(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetNewProtocolNumber(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetNewProtocolNumber(soap*, ns1__GetNewProtocolNumber*) deserialize from a stream
/// - int soap_write_ns1__GetNewProtocolNumber(soap, ns1__GetNewProtocolNumber*) serialize to a stream
class ns1__GetNewProtocolNumber : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":GetNewProtocolNumberResponse is a complexType.
/// class ns1__GetNewProtocolNumberResponse operations:
/// - soap_new_ns1__GetNewProtocolNumberResponse(soap*) allocate
/// - soap_new_ns1__GetNewProtocolNumberResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetNewProtocolNumberResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetNewProtocolNumberResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetNewProtocolNumberResponse(soap*, ns1__GetNewProtocolNumberResponse*) deserialize from a stream
/// - int soap_write_ns1__GetNewProtocolNumberResponse(soap, ns1__GetNewProtocolNumberResponse*) serialize to a stream
class ns1__GetNewProtocolNumberResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxProtocolUseResult.
    ns1__abxProtocolUseResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxProtocolUseResult is a complexType.
/// class ns1__abxProtocolUseResult operations:
/// - soap_new_ns1__abxProtocolUseResult(soap*) allocate
/// - soap_new_ns1__abxProtocolUseResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxProtocolUseResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxProtocolUseResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxProtocolUseResult(soap*, ns1__abxProtocolUseResult*) deserialize from a stream
/// - int soap_write_ns1__abxProtocolUseResult(soap, ns1__abxProtocolUseResult*) serialize to a stream
class ns1__abxProtocolUseResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element list of type "http://ws.abx/":abxProtocolUseList.
    ns1__abxProtocolUseList*             list                           1;	///< Required element.
};

/// "http://ws.abx/":abxProtocolUseList is a complexType.
/// class ns1__abxProtocolUseList operations:
/// - soap_new_ns1__abxProtocolUseList(soap*) allocate
/// - soap_new_ns1__abxProtocolUseList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxProtocolUseList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxProtocolUseList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxProtocolUseList(soap*, ns1__abxProtocolUseList*) deserialize from a stream
/// - int soap_write_ns1__abxProtocolUseList(soap, ns1__abxProtocolUseList*) serialize to a stream
class ns1__abxProtocolUseList : public xsd__anyType
{ public:
/// Size of array of ns1__abxProtocolUse* is 1..unbounded
   $int                                  __sizeprotocolUseList          1;
/// Pointer to array ns1__abxProtocolUse* of length 1..unbounded
    ns1__abxProtocolUse*                *protocolUseList                1;
};

/// "http://ws.abx/":Fk_getAllRecordByDesc is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByDesc operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByDesc(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByDesc(soap*, ns1__Fk_USCOREgetAllRecordByDesc*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByDesc(soap, ns1__Fk_USCOREgetAllRecordByDesc*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element numTotRecord of type xs:int.
    int                                  numTotRecord                   1;	///< Required element.
/// Element orderBy of type xs:string.
    char*                                orderBy                        0;	///< Optional element.
/// Element directionDesc of type xs:boolean.
    bool                                 directionDesc                  1;	///< Required element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordByDescResponse is a complexType.
/// class ns1__Fk_USCOREgetAllRecordByDescResponse operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordByDescResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordByDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordByDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordByDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordByDescResponse(soap*, ns1__Fk_USCOREgetAllRecordByDescResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordByDescResponse(soap, ns1__Fk_USCOREgetAllRecordByDescResponse*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordByDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanUseProtocol is a complexType.
/// class ns1__CanUseProtocol operations:
/// - soap_new_ns1__CanUseProtocol(soap*) allocate
/// - soap_new_ns1__CanUseProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__CanUseProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanUseProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanUseProtocol(soap*, ns1__CanUseProtocol*) deserialize from a stream
/// - int soap_write_ns1__CanUseProtocol(soap, ns1__CanUseProtocol*) serialize to a stream
class ns1__CanUseProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element protocolUseData of type "http://ws.abx/":abxProtocolUse.
    ns1__abxProtocolUse*                 protocolUseData                0;	///< Optional element.
};

/// "http://ws.abx/":CanUseProtocolResponse is a complexType.
/// class ns1__CanUseProtocolResponse operations:
/// - soap_new_ns1__CanUseProtocolResponse(soap*) allocate
/// - soap_new_ns1__CanUseProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanUseProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanUseProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanUseProtocolResponse(soap*, ns1__CanUseProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__CanUseProtocolResponse(soap, ns1__CanUseProtocolResponse*) serialize to a stream
class ns1__CanUseProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateContainer is a complexType.
/// class ns1__CreateContainer operations:
/// - soap_new_ns1__CreateContainer(soap*) allocate
/// - soap_new_ns1__CreateContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateContainer(soap*, ns1__CreateContainer*) deserialize from a stream
/// - int soap_write_ns1__CreateContainer(soap, ns1__CreateContainer*) serialize to a stream
class ns1__CreateContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Container2Update of type "http://ws.abx/":abxContainer.
    ns1__abxContainer*                   Container2Update               0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
/// Element avl of type "http://ws.abx/":abxVersioningList.
    ns1__abxVersioningList*              avl                            0;	///< Optional element.
};

/// "http://ws.abx/":CreateContainerResponse is a complexType.
/// class ns1__CreateContainerResponse operations:
/// - soap_new_ns1__CreateContainerResponse(soap*) allocate
/// - soap_new_ns1__CreateContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateContainerResponse(soap*, ns1__CreateContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateContainerResponse(soap, ns1__CreateContainerResponse*) serialize to a stream
class ns1__CreateContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxContainerResult.
    ns1__abxContainerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getLocalFieldList is a complexType.
/// class ns1__Fk_USCOREgetLocalFieldList operations:
/// - soap_new_ns1__Fk_USCOREgetLocalFieldList(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetLocalFieldList(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetLocalFieldList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetLocalFieldList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetLocalFieldList(soap*, ns1__Fk_USCOREgetLocalFieldList*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetLocalFieldList(soap, ns1__Fk_USCOREgetLocalFieldList*) serialize to a stream
class ns1__Fk_USCOREgetLocalFieldList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element users of type xs:boolean.
    bool                                 users                          1;	///< Required element.
/// Element groups of type xs:boolean.
    bool                                 groups                         1;	///< Required element.
};

/// "http://ws.abx/":Fk_getLocalFieldListResponse is a complexType.
/// class ns1__Fk_USCOREgetLocalFieldListResponse operations:
/// - soap_new_ns1__Fk_USCOREgetLocalFieldListResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetLocalFieldListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetLocalFieldListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetLocalFieldListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetLocalFieldListResponse(soap*, ns1__Fk_USCOREgetLocalFieldListResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetLocalFieldListResponse(soap, ns1__Fk_USCOREgetLocalFieldListResponse*) serialize to a stream
class ns1__Fk_USCOREgetLocalFieldListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ChangeSchedulerTaskScheduleStatus is a complexType.
/// class ns1__ChangeSchedulerTaskScheduleStatus operations:
/// - soap_new_ns1__ChangeSchedulerTaskScheduleStatus(soap*) allocate
/// - soap_new_ns1__ChangeSchedulerTaskScheduleStatus(soap*, int num) allocate array
/// - soap_new_req_ns1__ChangeSchedulerTaskScheduleStatus(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ChangeSchedulerTaskScheduleStatus(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ChangeSchedulerTaskScheduleStatus(soap*, ns1__ChangeSchedulerTaskScheduleStatus*) deserialize from a stream
/// - int soap_write_ns1__ChangeSchedulerTaskScheduleStatus(soap, ns1__ChangeSchedulerTaskScheduleStatus*) serialize to a stream
class ns1__ChangeSchedulerTaskScheduleStatus : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element scheduleId of type xs:string.
    char*                                scheduleId                     0;	///< Optional element.
/// Element scheduleType of type xs:int.
    int                                  scheduleType                   1;	///< Required element.
/// Element scheduleStatus of type xs:int.
    int                                  scheduleStatus                 1;	///< Required element.
};

/// "http://ws.abx/":ChangeSchedulerTaskScheduleStatusResponse is a complexType.
/// class ns1__ChangeSchedulerTaskScheduleStatusResponse operations:
/// - soap_new_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap*) allocate
/// - soap_new_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap*, ns1__ChangeSchedulerTaskScheduleStatusResponse*) deserialize from a stream
/// - int soap_write_ns1__ChangeSchedulerTaskScheduleStatusResponse(soap, ns1__ChangeSchedulerTaskScheduleStatusResponse*) serialize to a stream
class ns1__ChangeSchedulerTaskScheduleStatusResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTranslation is a complexType.
/// class ns1__DeleteTranslation operations:
/// - soap_new_ns1__DeleteTranslation(soap*) allocate
/// - soap_new_ns1__DeleteTranslation(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTranslation(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTranslation(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTranslation(soap*, ns1__DeleteTranslation*) deserialize from a stream
/// - int soap_write_ns1__DeleteTranslation(soap, ns1__DeleteTranslation*) serialize to a stream
class ns1__DeleteTranslation : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element messageId of type xs:string.
    char*                                messageId                      0;	///< Optional element.
};

/// "http://ws.abx/":DeleteTranslationResponse is a complexType.
/// class ns1__DeleteTranslationResponse operations:
/// - soap_new_ns1__DeleteTranslationResponse(soap*) allocate
/// - soap_new_ns1__DeleteTranslationResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteTranslationResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteTranslationResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteTranslationResponse(soap*, ns1__DeleteTranslationResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteTranslationResponse(soap, ns1__DeleteTranslationResponse*) serialize to a stream
class ns1__DeleteTranslationResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_removeAll is a complexType.
/// class ns1__Combo_USCOREremoveAll operations:
/// - soap_new_ns1__Combo_USCOREremoveAll(soap*) allocate
/// - soap_new_ns1__Combo_USCOREremoveAll(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREremoveAll(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREremoveAll(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREremoveAll(soap*, ns1__Combo_USCOREremoveAll*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREremoveAll(soap, ns1__Combo_USCOREremoveAll*) serialize to a stream
class ns1__Combo_USCOREremoveAll : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":Combo_removeAllResponse is a complexType.
/// class ns1__Combo_USCOREremoveAllResponse operations:
/// - soap_new_ns1__Combo_USCOREremoveAllResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREremoveAllResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREremoveAllResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREremoveAllResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREremoveAllResponse(soap*, ns1__Combo_USCOREremoveAllResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREremoveAllResponse(soap, ns1__Combo_USCOREremoveAllResponse*) serialize to a stream
class ns1__Combo_USCOREremoveAllResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canModifyDynorg is a complexType.
/// class ns1__canModifyDynorg operations:
/// - soap_new_ns1__canModifyDynorg(soap*) allocate
/// - soap_new_ns1__canModifyDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyDynorg(soap*, ns1__canModifyDynorg*) deserialize from a stream
/// - int soap_write_ns1__canModifyDynorg(soap, ns1__canModifyDynorg*) serialize to a stream
class ns1__canModifyDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element RuleName of type xs:string.
    char*                                RuleName                       0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":canModifyDynorgResponse is a complexType.
/// class ns1__canModifyDynorgResponse operations:
/// - soap_new_ns1__canModifyDynorgResponse(soap*) allocate
/// - soap_new_ns1__canModifyDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canModifyDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canModifyDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canModifyDynorgResponse(soap*, ns1__canModifyDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__canModifyDynorgResponse(soap, ns1__canModifyDynorgResponse*) serialize to a stream
class ns1__canModifyDynorgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUserPassword is a complexType.
/// class ns1__ModifyUserPassword operations:
/// - soap_new_ns1__ModifyUserPassword(soap*) allocate
/// - soap_new_ns1__ModifyUserPassword(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUserPassword(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUserPassword(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUserPassword(soap*, ns1__ModifyUserPassword*) deserialize from a stream
/// - int soap_write_ns1__ModifyUserPassword(soap, ns1__ModifyUserPassword*) serialize to a stream
class ns1__ModifyUserPassword : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element oldPassword of type xs:string.
    char*                                oldPassword                    0;	///< Optional element.
/// Element newPassword of type xs:string.
    char*                                newPassword                    0;	///< Optional element.
};

/// "http://ws.abx/":ModifyUserPasswordResponse is a complexType.
/// class ns1__ModifyUserPasswordResponse operations:
/// - soap_new_ns1__ModifyUserPasswordResponse(soap*) allocate
/// - soap_new_ns1__ModifyUserPasswordResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyUserPasswordResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyUserPasswordResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyUserPasswordResponse(soap*, ns1__ModifyUserPasswordResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyUserPasswordResponse(soap, ns1__ModifyUserPasswordResponse*) serialize to a stream
class ns1__ModifyUserPasswordResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileList is a complexType.
/// class ns1__GetDataUSFileList operations:
/// - soap_new_ns1__GetDataUSFileList(soap*) allocate
/// - soap_new_ns1__GetDataUSFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileList(soap*, ns1__GetDataUSFileList*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileList(soap, ns1__GetDataUSFileList*) serialize to a stream
class ns1__GetDataUSFileList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDataUSFileListResponse is a complexType.
/// class ns1__GetDataUSFileListResponse operations:
/// - soap_new_ns1__GetDataUSFileListResponse(soap*) allocate
/// - soap_new_ns1__GetDataUSFileListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataUSFileListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataUSFileListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataUSFileListResponse(soap*, ns1__GetDataUSFileListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataUSFileListResponse(soap, ns1__GetDataUSFileListResponse*) serialize to a stream
class ns1__GetDataUSFileListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_isCombo is a complexType.
/// class ns1__Combo_USCOREisCombo operations:
/// - soap_new_ns1__Combo_USCOREisCombo(soap*) allocate
/// - soap_new_ns1__Combo_USCOREisCombo(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREisCombo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREisCombo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREisCombo(soap*, ns1__Combo_USCOREisCombo*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREisCombo(soap, ns1__Combo_USCOREisCombo*) serialize to a stream
class ns1__Combo_USCOREisCombo : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
};

/// "http://ws.abx/":Combo_isComboResponse is a complexType.
/// class ns1__Combo_USCOREisComboResponse operations:
/// - soap_new_ns1__Combo_USCOREisComboResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREisComboResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREisComboResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREisComboResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREisComboResponse(soap*, ns1__Combo_USCOREisComboResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREisComboResponse(soap, ns1__Combo_USCOREisComboResponse*) serialize to a stream
class ns1__Combo_USCOREisComboResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyLinkContainerToDocument is a complexType.
/// class ns1__CanModifyLinkContainerToDocument operations:
/// - soap_new_ns1__CanModifyLinkContainerToDocument(soap*) allocate
/// - soap_new_ns1__CanModifyLinkContainerToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyLinkContainerToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyLinkContainerToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyLinkContainerToDocument(soap*, ns1__CanModifyLinkContainerToDocument*) deserialize from a stream
/// - int soap_write_ns1__CanModifyLinkContainerToDocument(soap, ns1__CanModifyLinkContainerToDocument*) serialize to a stream
class ns1__CanModifyLinkContainerToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyLinkContainerToDocumentResponse is a complexType.
/// class ns1__CanModifyLinkContainerToDocumentResponse operations:
/// - soap_new_ns1__CanModifyLinkContainerToDocumentResponse(soap*) allocate
/// - soap_new_ns1__CanModifyLinkContainerToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyLinkContainerToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyLinkContainerToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyLinkContainerToDocumentResponse(soap*, ns1__CanModifyLinkContainerToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__CanModifyLinkContainerToDocumentResponse(soap, ns1__CanModifyLinkContainerToDocumentResponse*) serialize to a stream
class ns1__CanModifyLinkContainerToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyTranslation is a complexType.
/// class ns1__ModifyTranslation operations:
/// - soap_new_ns1__ModifyTranslation(soap*) allocate
/// - soap_new_ns1__ModifyTranslation(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyTranslation(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyTranslation(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyTranslation(soap*, ns1__ModifyTranslation*) deserialize from a stream
/// - int soap_write_ns1__ModifyTranslation(soap, ns1__ModifyTranslation*) serialize to a stream
class ns1__ModifyTranslation : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element translation_new of type xs:string.
    char*                                translation_USCOREnew          0;	///< Optional element.
/// Element messageId of type xs:string.
    char*                                messageId                      0;	///< Optional element.
};

/// "http://ws.abx/":ModifyTranslationResponse is a complexType.
/// class ns1__ModifyTranslationResponse operations:
/// - soap_new_ns1__ModifyTranslationResponse(soap*) allocate
/// - soap_new_ns1__ModifyTranslationResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyTranslationResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyTranslationResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyTranslationResponse(soap*, ns1__ModifyTranslationResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyTranslationResponse(soap, ns1__ModifyTranslationResponse*) serialize to a stream
class ns1__ModifyTranslationResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetFileAvailable is a complexType.
/// class ns1__GetFileAvailable operations:
/// - soap_new_ns1__GetFileAvailable(soap*) allocate
/// - soap_new_ns1__GetFileAvailable(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileAvailable(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileAvailable(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileAvailable(soap*, ns1__GetFileAvailable*) deserialize from a stream
/// - int soap_write_ns1__GetFileAvailable(soap, ns1__GetFileAvailable*) serialize to a stream
class ns1__GetFileAvailable : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":GetFileAvailableResponse is a complexType.
/// class ns1__GetFileAvailableResponse operations:
/// - soap_new_ns1__GetFileAvailableResponse(soap*) allocate
/// - soap_new_ns1__GetFileAvailableResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetFileAvailableResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetFileAvailableResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetFileAvailableResponse(soap*, ns1__GetFileAvailableResponse*) deserialize from a stream
/// - int soap_write_ns1__GetFileAvailableResponse(soap, ns1__GetFileAvailableResponse*) serialize to a stream
class ns1__GetFileAvailableResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSchedulerTask is a complexType.
/// class ns1__DeleteSchedulerTask operations:
/// - soap_new_ns1__DeleteSchedulerTask(soap*) allocate
/// - soap_new_ns1__DeleteSchedulerTask(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSchedulerTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSchedulerTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSchedulerTask(soap*, ns1__DeleteSchedulerTask*) deserialize from a stream
/// - int soap_write_ns1__DeleteSchedulerTask(soap, ns1__DeleteSchedulerTask*) serialize to a stream
class ns1__DeleteSchedulerTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteSchedulerTaskResponse is a complexType.
/// class ns1__DeleteSchedulerTaskResponse operations:
/// - soap_new_ns1__DeleteSchedulerTaskResponse(soap*) allocate
/// - soap_new_ns1__DeleteSchedulerTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteSchedulerTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteSchedulerTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteSchedulerTaskResponse(soap*, ns1__DeleteSchedulerTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteSchedulerTaskResponse(soap, ns1__DeleteSchedulerTaskResponse*) serialize to a stream
class ns1__DeleteSchedulerTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanShowFile is a complexType.
/// class ns1__CanShowFile operations:
/// - soap_new_ns1__CanShowFile(soap*) allocate
/// - soap_new_ns1__CanShowFile(soap*, int num) allocate array
/// - soap_new_req_ns1__CanShowFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanShowFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanShowFile(soap*, ns1__CanShowFile*) deserialize from a stream
/// - int soap_write_ns1__CanShowFile(soap, ns1__CanShowFile*) serialize to a stream
class ns1__CanShowFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":CanShowFileResponse is a complexType.
/// class ns1__CanShowFileResponse operations:
/// - soap_new_ns1__CanShowFileResponse(soap*) allocate
/// - soap_new_ns1__CanShowFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanShowFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanShowFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanShowFileResponse(soap*, ns1__CanShowFileResponse*) deserialize from a stream
/// - int soap_write_ns1__CanShowFileResponse(soap, ns1__CanShowFileResponse*) serialize to a stream
class ns1__CanShowFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteDynorg is a complexType.
/// class ns1__DeleteDynorg operations:
/// - soap_new_ns1__DeleteDynorg(soap*) allocate
/// - soap_new_ns1__DeleteDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteDynorg(soap*, ns1__DeleteDynorg*) deserialize from a stream
/// - int soap_write_ns1__DeleteDynorg(soap, ns1__DeleteDynorg*) serialize to a stream
class ns1__DeleteDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element RuleName of type xs:string.
    char*                                RuleName                       0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":DeleteDynorgResponse is a complexType.
/// class ns1__DeleteDynorgResponse operations:
/// - soap_new_ns1__DeleteDynorgResponse(soap*) allocate
/// - soap_new_ns1__DeleteDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteDynorgResponse(soap*, ns1__DeleteDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteDynorgResponse(soap, ns1__DeleteDynorgResponse*) serialize to a stream
class ns1__DeleteDynorgResponse : public xsd__anyType
{ public:
/// Element return of type xs:int.
    int                                  return_                        1;	///< Required element.
};

/// "http://ws.abx/":DeleteUserByUsername is a complexType.
/// class ns1__DeleteUserByUsername operations:
/// - soap_new_ns1__DeleteUserByUsername(soap*) allocate
/// - soap_new_ns1__DeleteUserByUsername(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUserByUsername(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUserByUsername(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUserByUsername(soap*, ns1__DeleteUserByUsername*) deserialize from a stream
/// - int soap_write_ns1__DeleteUserByUsername(soap, ns1__DeleteUserByUsername*) serialize to a stream
class ns1__DeleteUserByUsername : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteUserByUsernameResponse is a complexType.
/// class ns1__DeleteUserByUsernameResponse operations:
/// - soap_new_ns1__DeleteUserByUsernameResponse(soap*) allocate
/// - soap_new_ns1__DeleteUserByUsernameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteUserByUsernameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteUserByUsernameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteUserByUsernameResponse(soap*, ns1__DeleteUserByUsernameResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteUserByUsernameResponse(soap, ns1__DeleteUserByUsernameResponse*) serialize to a stream
class ns1__DeleteUserByUsernameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":TestLettura is a complexType.
/// class ns1__TestLettura operations:
/// - soap_new_ns1__TestLettura(soap*) allocate
/// - soap_new_ns1__TestLettura(soap*, int num) allocate array
/// - soap_new_req_ns1__TestLettura(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__TestLettura(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__TestLettura(soap*, ns1__TestLettura*) deserialize from a stream
/// - int soap_write_ns1__TestLettura(soap, ns1__TestLettura*) serialize to a stream
class ns1__TestLettura : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":TestLetturaResponse is a complexType.
/// class ns1__TestLetturaResponse operations:
/// - soap_new_ns1__TestLetturaResponse(soap*) allocate
/// - soap_new_ns1__TestLetturaResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__TestLetturaResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__TestLetturaResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__TestLetturaResponse(soap*, ns1__TestLetturaResponse*) deserialize from a stream
/// - int soap_write_ns1__TestLetturaResponse(soap, ns1__TestLetturaResponse*) serialize to a stream
class ns1__TestLetturaResponse : public xsd__anyType
{ public:
/// Element return of type xs:string.
    char*                                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":FullTreePathName is a complexType.
/// class ns1__FullTreePathName operations:
/// - soap_new_ns1__FullTreePathName(soap*) allocate
/// - soap_new_ns1__FullTreePathName(soap*, int num) allocate array
/// - soap_new_req_ns1__FullTreePathName(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__FullTreePathName(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__FullTreePathName(soap*, ns1__FullTreePathName*) deserialize from a stream
/// - int soap_write_ns1__FullTreePathName(soap, ns1__FullTreePathName*) serialize to a stream
class ns1__FullTreePathName : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element targetObjName of type xs:string.
    char*                                targetObjName                  0;	///< Optional element.
};

/// "http://ws.abx/":FullTreePathNameResponse is a complexType.
/// class ns1__FullTreePathNameResponse operations:
/// - soap_new_ns1__FullTreePathNameResponse(soap*) allocate
/// - soap_new_ns1__FullTreePathNameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__FullTreePathNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__FullTreePathNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__FullTreePathNameResponse(soap*, ns1__FullTreePathNameResponse*) deserialize from a stream
/// - int soap_write_ns1__FullTreePathNameResponse(soap, ns1__FullTreePathNameResponse*) serialize to a stream
class ns1__FullTreePathNameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGipResult.
    ns1__abxGipResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFile is a complexType.
/// class ns1__UploadEndFile operations:
/// - soap_new_ns1__UploadEndFile(soap*) allocate
/// - soap_new_ns1__UploadEndFile(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFile(soap*, ns1__UploadEndFile*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFile(soap, ns1__UploadEndFile*) serialize to a stream
class ns1__UploadEndFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element codePreviousVersion of type xs:string.
    char*                                codePreviousVersion            0;	///< Optional element.
/// Element docTemplateName of type xs:string.
    char*                                docTemplateName                0;	///< Optional element.
};

/// "http://ws.abx/":UploadEndFileResponse is a complexType.
/// class ns1__UploadEndFileResponse operations:
/// - soap_new_ns1__UploadEndFileResponse(soap*) allocate
/// - soap_new_ns1__UploadEndFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadEndFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadEndFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadEndFileResponse(soap*, ns1__UploadEndFileResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadEndFileResponse(soap, ns1__UploadEndFileResponse*) serialize to a stream
class ns1__UploadEndFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyLinkContainerToDocument is a complexType.
/// class ns1__ModifyLinkContainerToDocument operations:
/// - soap_new_ns1__ModifyLinkContainerToDocument(soap*) allocate
/// - soap_new_ns1__ModifyLinkContainerToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyLinkContainerToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyLinkContainerToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyLinkContainerToDocument(soap*, ns1__ModifyLinkContainerToDocument*) deserialize from a stream
/// - int soap_write_ns1__ModifyLinkContainerToDocument(soap, ns1__ModifyLinkContainerToDocument*) serialize to a stream
class ns1__ModifyLinkContainerToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
};

/// "http://ws.abx/":ModifyLinkContainerToDocumentResponse is a complexType.
/// class ns1__ModifyLinkContainerToDocumentResponse operations:
/// - soap_new_ns1__ModifyLinkContainerToDocumentResponse(soap*) allocate
/// - soap_new_ns1__ModifyLinkContainerToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyLinkContainerToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyLinkContainerToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyLinkContainerToDocumentResponse(soap*, ns1__ModifyLinkContainerToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyLinkContainerToDocumentResponse(soap, ns1__ModifyLinkContainerToDocumentResponse*) serialize to a stream
class ns1__ModifyLinkContainerToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUserDetailByUserId is a complexType.
/// class ns1__GetUserDetailByUserId operations:
/// - soap_new_ns1__GetUserDetailByUserId(soap*) allocate
/// - soap_new_ns1__GetUserDetailByUserId(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserDetailByUserId(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserDetailByUserId(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserDetailByUserId(soap*, ns1__GetUserDetailByUserId*) deserialize from a stream
/// - int soap_write_ns1__GetUserDetailByUserId(soap, ns1__GetUserDetailByUserId*) serialize to a stream
class ns1__GetUserDetailByUserId : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetUserDetailByUserIdResponse is a complexType.
/// class ns1__GetUserDetailByUserIdResponse operations:
/// - soap_new_ns1__GetUserDetailByUserIdResponse(soap*) allocate
/// - soap_new_ns1__GetUserDetailByUserIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserDetailByUserIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserDetailByUserIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserDetailByUserIdResponse(soap*, ns1__GetUserDetailByUserIdResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUserDetailByUserIdResponse(soap, ns1__GetUserDetailByUserIdResponse*) serialize to a stream
class ns1__GetUserDetailByUserIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUsersListByGroup is a complexType.
/// class ns1__GetUsersListByGroup operations:
/// - soap_new_ns1__GetUsersListByGroup(soap*) allocate
/// - soap_new_ns1__GetUsersListByGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUsersListByGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUsersListByGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUsersListByGroup(soap*, ns1__GetUsersListByGroup*) deserialize from a stream
/// - int soap_write_ns1__GetUsersListByGroup(soap, ns1__GetUsersListByGroup*) serialize to a stream
class ns1__GetUsersListByGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element groupname of type xs:string.
    char*                                groupname                      0;	///< Optional element.
};

/// "http://ws.abx/":GetUsersListByGroupResponse is a complexType.
/// class ns1__GetUsersListByGroupResponse operations:
/// - soap_new_ns1__GetUsersListByGroupResponse(soap*) allocate
/// - soap_new_ns1__GetUsersListByGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUsersListByGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUsersListByGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUsersListByGroupResponse(soap*, ns1__GetUsersListByGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUsersListByGroupResponse(soap, ns1__GetUsersListByGroupResponse*) serialize to a stream
class ns1__GetUsersListByGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWFFileList is a complexType.
/// class ns1__GetDataWFFileList operations:
/// - soap_new_ns1__GetDataWFFileList(soap*) allocate
/// - soap_new_ns1__GetDataWFFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWFFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWFFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWFFileList(soap*, ns1__GetDataWFFileList*) deserialize from a stream
/// - int soap_write_ns1__GetDataWFFileList(soap, ns1__GetDataWFFileList*) serialize to a stream
class ns1__GetDataWFFileList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWFFileListResponse is a complexType.
/// class ns1__GetDataWFFileListResponse operations:
/// - soap_new_ns1__GetDataWFFileListResponse(soap*) allocate
/// - soap_new_ns1__GetDataWFFileListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWFFileListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWFFileListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWFFileListResponse(soap*, ns1__GetDataWFFileListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataWFFileListResponse(soap, ns1__GetDataWFFileListResponse*) serialize to a stream
class ns1__GetDataWFFileListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTask is a complexType.
/// class ns1__CreateSDKTask operations:
/// - soap_new_ns1__CreateSDKTask(soap*) allocate
/// - soap_new_ns1__CreateSDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTask(soap*, ns1__CreateSDKTask*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTask(soap, ns1__CreateSDKTask*) serialize to a stream
class ns1__CreateSDKTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element sdkTask of type "http://ws.abx/":abxSDKTask.
    ns1__abxSDKTask*                     sdkTask                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateSDKTaskResponse is a complexType.
/// class ns1__CreateSDKTaskResponse operations:
/// - soap_new_ns1__CreateSDKTaskResponse(soap*) allocate
/// - soap_new_ns1__CreateSDKTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateSDKTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateSDKTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateSDKTaskResponse(soap*, ns1__CreateSDKTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateSDKTaskResponse(soap, ns1__CreateSDKTaskResponse*) serialize to a stream
class ns1__CreateSDKTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyDataWA is a complexType.
/// class ns1__ModifyDataWA operations:
/// - soap_new_ns1__ModifyDataWA(soap*) allocate
/// - soap_new_ns1__ModifyDataWA(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyDataWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyDataWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyDataWA(soap*, ns1__ModifyDataWA*) deserialize from a stream
/// - int soap_write_ns1__ModifyDataWA(soap, ns1__ModifyDataWA*) serialize to a stream
class ns1__ModifyDataWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
/// Element annotazione of type xs:string.
    char*                                annotazione                    0;	///< Optional element.
};

/// "http://ws.abx/":ModifyDataWAResponse is a complexType.
/// class ns1__ModifyDataWAResponse operations:
/// - soap_new_ns1__ModifyDataWAResponse(soap*) allocate
/// - soap_new_ns1__ModifyDataWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyDataWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyDataWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyDataWAResponse(soap*, ns1__ModifyDataWAResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyDataWAResponse(soap, ns1__ModifyDataWAResponse*) serialize to a stream
class ns1__ModifyDataWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertFileWA is a complexType.
/// class ns1__InsertFileWA operations:
/// - soap_new_ns1__InsertFileWA(soap*) allocate
/// - soap_new_ns1__InsertFileWA(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFileWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFileWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFileWA(soap*, ns1__InsertFileWA*) deserialize from a stream
/// - int soap_write_ns1__InsertFileWA(soap, ns1__InsertFileWA*) serialize to a stream
class ns1__InsertFileWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element annotazioneId of type xs:string.
    char*                                annotazioneId                  0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":InsertFileWAResponse is a complexType.
/// class ns1__InsertFileWAResponse operations:
/// - soap_new_ns1__InsertFileWAResponse(soap*) allocate
/// - soap_new_ns1__InsertFileWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFileWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFileWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFileWAResponse(soap*, ns1__InsertFileWAResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertFileWAResponse(soap, ns1__InsertFileWAResponse*) serialize to a stream
class ns1__InsertFileWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileDetail is a complexType.
/// class ns1__GetDataFileDetail operations:
/// - soap_new_ns1__GetDataFileDetail(soap*) allocate
/// - soap_new_ns1__GetDataFileDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileDetail(soap*, ns1__GetDataFileDetail*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileDetail(soap, ns1__GetDataFileDetail*) serialize to a stream
class ns1__GetDataFileDetail : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataAttachmentId of type xs:string.
    char*                                dataAttachmentId               0;	///< Optional element.
};

/// "http://ws.abx/":GetDataFileDetailResponse is a complexType.
/// class ns1__GetDataFileDetailResponse operations:
/// - soap_new_ns1__GetDataFileDetailResponse(soap*) allocate
/// - soap_new_ns1__GetDataFileDetailResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataFileDetailResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataFileDetailResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataFileDetailResponse(soap*, ns1__GetDataFileDetailResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataFileDetailResponse(soap, ns1__GetDataFileDetailResponse*) serialize to a stream
class ns1__GetDataFileDetailResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ChangeSDKTaskStatus is a complexType.
/// class ns1__ChangeSDKTaskStatus operations:
/// - soap_new_ns1__ChangeSDKTaskStatus(soap*) allocate
/// - soap_new_ns1__ChangeSDKTaskStatus(soap*, int num) allocate array
/// - soap_new_req_ns1__ChangeSDKTaskStatus(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ChangeSDKTaskStatus(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ChangeSDKTaskStatus(soap*, ns1__ChangeSDKTaskStatus*) deserialize from a stream
/// - int soap_write_ns1__ChangeSDKTaskStatus(soap, ns1__ChangeSDKTaskStatus*) serialize to a stream
class ns1__ChangeSDKTaskStatus : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
/// Element taskStatus of type xs:int.
    int                                  taskStatus                     1;	///< Required element.
};

/// "http://ws.abx/":ChangeSDKTaskStatusResponse is a complexType.
/// class ns1__ChangeSDKTaskStatusResponse operations:
/// - soap_new_ns1__ChangeSDKTaskStatusResponse(soap*) allocate
/// - soap_new_ns1__ChangeSDKTaskStatusResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ChangeSDKTaskStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ChangeSDKTaskStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ChangeSDKTaskStatusResponse(soap*, ns1__ChangeSDKTaskStatusResponse*) deserialize from a stream
/// - int soap_write_ns1__ChangeSDKTaskStatusResponse(soap, ns1__ChangeSDKTaskStatusResponse*) serialize to a stream
class ns1__ChangeSDKTaskStatusResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertFile is a complexType.
/// class ns1__CanInsertFile operations:
/// - soap_new_ns1__CanInsertFile(soap*) allocate
/// - soap_new_ns1__CanInsertFile(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertFile(soap*, ns1__CanInsertFile*) deserialize from a stream
/// - int soap_write_ns1__CanInsertFile(soap, ns1__CanInsertFile*) serialize to a stream
class ns1__CanInsertFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertFileResponse is a complexType.
/// class ns1__CanInsertFileResponse operations:
/// - soap_new_ns1__CanInsertFileResponse(soap*) allocate
/// - soap_new_ns1__CanInsertFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertFileResponse(soap*, ns1__CanInsertFileResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertFileResponse(soap, ns1__CanInsertFileResponse*) serialize to a stream
class ns1__CanInsertFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDefaultProcess is a complexType.
/// class ns1__GetDefaultProcess operations:
/// - soap_new_ns1__GetDefaultProcess(soap*) allocate
/// - soap_new_ns1__GetDefaultProcess(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDefaultProcess(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDefaultProcess(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDefaultProcess(soap*, ns1__GetDefaultProcess*) deserialize from a stream
/// - int soap_write_ns1__GetDefaultProcess(soap, ns1__GetDefaultProcess*) serialize to a stream
class ns1__GetDefaultProcess : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
};

/// "http://ws.abx/":GetDefaultProcessResponse is a complexType.
/// class ns1__GetDefaultProcessResponse operations:
/// - soap_new_ns1__GetDefaultProcessResponse(soap*) allocate
/// - soap_new_ns1__GetDefaultProcessResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDefaultProcessResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDefaultProcessResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDefaultProcessResponse(soap*, ns1__GetDefaultProcessResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDefaultProcessResponse(soap, ns1__GetDefaultProcessResponse*) serialize to a stream
class ns1__GetDefaultProcessResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetClasseDocumentale is a complexType.
/// class ns1__GetClasseDocumentale operations:
/// - soap_new_ns1__GetClasseDocumentale(soap*) allocate
/// - soap_new_ns1__GetClasseDocumentale(soap*, int num) allocate array
/// - soap_new_req_ns1__GetClasseDocumentale(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetClasseDocumentale(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetClasseDocumentale(soap*, ns1__GetClasseDocumentale*) deserialize from a stream
/// - int soap_write_ns1__GetClasseDocumentale(soap, ns1__GetClasseDocumentale*) serialize to a stream
class ns1__GetClasseDocumentale : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetClasseDocumentaleResponse is a complexType.
/// class ns1__GetClasseDocumentaleResponse operations:
/// - soap_new_ns1__GetClasseDocumentaleResponse(soap*) allocate
/// - soap_new_ns1__GetClasseDocumentaleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetClasseDocumentaleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetClasseDocumentaleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetClasseDocumentaleResponse(soap*, ns1__GetClasseDocumentaleResponse*) deserialize from a stream
/// - int soap_write_ns1__GetClasseDocumentaleResponse(soap, ns1__GetClasseDocumentaleResponse*) serialize to a stream
class ns1__GetClasseDocumentaleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxClasseDocumentaleResult.
    ns1__abxClasseDocumentaleResult*     return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadPreviewFile is a complexType.
/// class ns1__UploadPreviewFile operations:
/// - soap_new_ns1__UploadPreviewFile(soap*) allocate
/// - soap_new_ns1__UploadPreviewFile(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadPreviewFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadPreviewFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadPreviewFile(soap*, ns1__UploadPreviewFile*) deserialize from a stream
/// - int soap_write_ns1__UploadPreviewFile(soap, ns1__UploadPreviewFile*) serialize to a stream
class ns1__UploadPreviewFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element file of type xs:base64Binary.
    xsd__base64Binary*                   file                           0;	///< Nillable pointer.
/// Element fileName of type xs:string.
    char*                                fileName                       0;	///< Optional element.
};

/// "http://ws.abx/":UploadPreviewFileResponse is a complexType.
/// class ns1__UploadPreviewFileResponse operations:
/// - soap_new_ns1__UploadPreviewFileResponse(soap*) allocate
/// - soap_new_ns1__UploadPreviewFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadPreviewFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadPreviewFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadPreviewFileResponse(soap*, ns1__UploadPreviewFileResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadPreviewFileResponse(soap, ns1__UploadPreviewFileResponse*) serialize to a stream
class ns1__UploadPreviewFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Combo_modify is a complexType.
/// class ns1__Combo_USCOREmodify operations:
/// - soap_new_ns1__Combo_USCOREmodify(soap*) allocate
/// - soap_new_ns1__Combo_USCOREmodify(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREmodify(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREmodify(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREmodify(soap*, ns1__Combo_USCOREmodify*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREmodify(soap, ns1__Combo_USCOREmodify*) serialize to a stream
class ns1__Combo_USCOREmodify : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fieldName of type xs:string.
    char*                                fieldName                      0;	///< Optional element.
/// Element recordsArray of type "http://ws.abx/":abxCombo.
    ns1__abxCombo*                       recordsArray                   0;	///< Optional element.
};

/// "http://ws.abx/":Combo_modifyResponse is a complexType.
/// class ns1__Combo_USCOREmodifyResponse operations:
/// - soap_new_ns1__Combo_USCOREmodifyResponse(soap*) allocate
/// - soap_new_ns1__Combo_USCOREmodifyResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Combo_USCOREmodifyResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Combo_USCOREmodifyResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Combo_USCOREmodifyResponse(soap*, ns1__Combo_USCOREmodifyResponse*) deserialize from a stream
/// - int soap_write_ns1__Combo_USCOREmodifyResponse(soap, ns1__Combo_USCOREmodifyResponse*) serialize to a stream
class ns1__Combo_USCOREmodifyResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxComboResult.
    ns1__abxComboResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertTPFile is a complexType.
/// class ns1__InsertTPFile operations:
/// - soap_new_ns1__InsertTPFile(soap*) allocate
/// - soap_new_ns1__InsertTPFile(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTPFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTPFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTPFile(soap*, ns1__InsertTPFile*) deserialize from a stream
/// - int soap_write_ns1__InsertTPFile(soap, ns1__InsertTPFile*) serialize to a stream
class ns1__InsertTPFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileTpList.
    ns1__abxFileTpList*                  dataListInput                  0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
};

/// "http://ws.abx/":InsertTPFileResponse is a complexType.
/// class ns1__InsertTPFileResponse operations:
/// - soap_new_ns1__InsertTPFileResponse(soap*) allocate
/// - soap_new_ns1__InsertTPFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTPFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTPFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTPFileResponse(soap*, ns1__InsertTPFileResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertTPFileResponse(soap, ns1__InsertTPFileResponse*) serialize to a stream
class ns1__InsertTPFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetWorkflowVariables is a complexType.
/// class ns1__GetWorkflowVariables operations:
/// - soap_new_ns1__GetWorkflowVariables(soap*) allocate
/// - soap_new_ns1__GetWorkflowVariables(soap*, int num) allocate array
/// - soap_new_req_ns1__GetWorkflowVariables(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetWorkflowVariables(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetWorkflowVariables(soap*, ns1__GetWorkflowVariables*) deserialize from a stream
/// - int soap_write_ns1__GetWorkflowVariables(soap, ns1__GetWorkflowVariables*) serialize to a stream
class ns1__GetWorkflowVariables : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetWorkflowVariablesResponse is a complexType.
/// class ns1__GetWorkflowVariablesResponse operations:
/// - soap_new_ns1__GetWorkflowVariablesResponse(soap*) allocate
/// - soap_new_ns1__GetWorkflowVariablesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetWorkflowVariablesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetWorkflowVariablesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetWorkflowVariablesResponse(soap*, ns1__GetWorkflowVariablesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetWorkflowVariablesResponse(soap, ns1__GetWorkflowVariablesResponse*) serialize to a stream
class ns1__GetWorkflowVariablesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteWFFileById is a complexType.
/// class ns1__DeleteWFFileById operations:
/// - soap_new_ns1__DeleteWFFileById(soap*) allocate
/// - soap_new_ns1__DeleteWFFileById(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteWFFileById(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteWFFileById(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteWFFileById(soap*, ns1__DeleteWFFileById*) deserialize from a stream
/// - int soap_write_ns1__DeleteWFFileById(soap, ns1__DeleteWFFileById*) serialize to a stream
class ns1__DeleteWFFileById : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileId of type xs:string.
    char*                                fileId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteWFFileByIdResponse is a complexType.
/// class ns1__DeleteWFFileByIdResponse operations:
/// - soap_new_ns1__DeleteWFFileByIdResponse(soap*) allocate
/// - soap_new_ns1__DeleteWFFileByIdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteWFFileByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteWFFileByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteWFFileByIdResponse(soap*, ns1__DeleteWFFileByIdResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteWFFileByIdResponse(soap, ns1__DeleteWFFileByIdResponse*) serialize to a stream
class ns1__DeleteWFFileByIdResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertData is a complexType.
/// class ns1__CanInsertData operations:
/// - soap_new_ns1__CanInsertData(soap*) allocate
/// - soap_new_ns1__CanInsertData(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertData(soap*, ns1__CanInsertData*) deserialize from a stream
/// - int soap_write_ns1__CanInsertData(soap, ns1__CanInsertData*) serialize to a stream
class ns1__CanInsertData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertDataResponse is a complexType.
/// class ns1__CanInsertDataResponse operations:
/// - soap_new_ns1__CanInsertDataResponse(soap*) allocate
/// - soap_new_ns1__CanInsertDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertDataResponse(soap*, ns1__CanInsertDataResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertDataResponse(soap, ns1__CanInsertDataResponse*) serialize to a stream
class ns1__CanInsertDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":VerifySDKTaskNameExists is a complexType.
/// class ns1__VerifySDKTaskNameExists operations:
/// - soap_new_ns1__VerifySDKTaskNameExists(soap*) allocate
/// - soap_new_ns1__VerifySDKTaskNameExists(soap*, int num) allocate array
/// - soap_new_req_ns1__VerifySDKTaskNameExists(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__VerifySDKTaskNameExists(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__VerifySDKTaskNameExists(soap*, ns1__VerifySDKTaskNameExists*) deserialize from a stream
/// - int soap_write_ns1__VerifySDKTaskNameExists(soap, ns1__VerifySDKTaskNameExists*) serialize to a stream
class ns1__VerifySDKTaskNameExists : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":VerifySDKTaskNameExistsResponse is a complexType.
/// class ns1__VerifySDKTaskNameExistsResponse operations:
/// - soap_new_ns1__VerifySDKTaskNameExistsResponse(soap*) allocate
/// - soap_new_ns1__VerifySDKTaskNameExistsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__VerifySDKTaskNameExistsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__VerifySDKTaskNameExistsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__VerifySDKTaskNameExistsResponse(soap*, ns1__VerifySDKTaskNameExistsResponse*) deserialize from a stream
/// - int soap_write_ns1__VerifySDKTaskNameExistsResponse(soap, ns1__VerifySDKTaskNameExistsResponse*) serialize to a stream
class ns1__VerifySDKTaskNameExistsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifySchedulerTaskSchedule is a complexType.
/// class ns1__ModifySchedulerTaskSchedule operations:
/// - soap_new_ns1__ModifySchedulerTaskSchedule(soap*) allocate
/// - soap_new_ns1__ModifySchedulerTaskSchedule(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySchedulerTaskSchedule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySchedulerTaskSchedule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySchedulerTaskSchedule(soap*, ns1__ModifySchedulerTaskSchedule*) deserialize from a stream
/// - int soap_write_ns1__ModifySchedulerTaskSchedule(soap, ns1__ModifySchedulerTaskSchedule*) serialize to a stream
class ns1__ModifySchedulerTaskSchedule : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element abxSchedulerTask of type "http://ws.abx/":abxSchedulerTask.
    ns1__abxSchedulerTask*               abxSchedulerTask               0;	///< Optional element.
};

/// "http://ws.abx/":ModifySchedulerTaskScheduleResponse is a complexType.
/// class ns1__ModifySchedulerTaskScheduleResponse operations:
/// - soap_new_ns1__ModifySchedulerTaskScheduleResponse(soap*) allocate
/// - soap_new_ns1__ModifySchedulerTaskScheduleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySchedulerTaskScheduleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySchedulerTaskScheduleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySchedulerTaskScheduleResponse(soap*, ns1__ModifySchedulerTaskScheduleResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifySchedulerTaskScheduleResponse(soap, ns1__ModifySchedulerTaskScheduleResponse*) serialize to a stream
class ns1__ModifySchedulerTaskScheduleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifyArchSostRule is a complexType.
/// class ns1__ModifyArchSostRule operations:
/// - soap_new_ns1__ModifyArchSostRule(soap*) allocate
/// - soap_new_ns1__ModifyArchSostRule(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyArchSostRule(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyArchSostRule(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyArchSostRule(soap*, ns1__ModifyArchSostRule*) deserialize from a stream
/// - int soap_write_ns1__ModifyArchSostRule(soap, ns1__ModifyArchSostRule*) serialize to a stream
class ns1__ModifyArchSostRule : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element archSostRule of type "http://ws.abx/":abxArchSostRule.
    ns1__abxArchSostRule*                archSostRule                   0;	///< Optional element.
};

/// "http://ws.abx/":ModifyArchSostRuleResponse is a complexType.
/// class ns1__ModifyArchSostRuleResponse operations:
/// - soap_new_ns1__ModifyArchSostRuleResponse(soap*) allocate
/// - soap_new_ns1__ModifyArchSostRuleResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifyArchSostRuleResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifyArchSostRuleResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifyArchSostRuleResponse(soap*, ns1__ModifyArchSostRuleResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifyArchSostRuleResponse(soap, ns1__ModifyArchSostRuleResponse*) serialize to a stream
class ns1__ModifyArchSostRuleResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxArchSostResult.
    ns1__abxArchSostResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertDataWA is a complexType.
/// class ns1__InsertDataWA operations:
/// - soap_new_ns1__InsertDataWA(soap*) allocate
/// - soap_new_ns1__InsertDataWA(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertDataWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertDataWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertDataWA(soap*, ns1__InsertDataWA*) deserialize from a stream
/// - int soap_write_ns1__InsertDataWA(soap, ns1__InsertDataWA*) serialize to a stream
class ns1__InsertDataWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
/// Element annotazione of type xs:string.
    char*                                annotazione                    0;	///< Optional element.
};

/// "http://ws.abx/":InsertDataWAResponse is a complexType.
/// class ns1__InsertDataWAResponse operations:
/// - soap_new_ns1__InsertDataWAResponse(soap*) allocate
/// - soap_new_ns1__InsertDataWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertDataWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertDataWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertDataWAResponse(soap*, ns1__InsertDataWAResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertDataWAResponse(soap, ns1__InsertDataWAResponse*) serialize to a stream
class ns1__InsertDataWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertProtocol is a complexType.
/// class ns1__CanInsertProtocol operations:
/// - soap_new_ns1__CanInsertProtocol(soap*) allocate
/// - soap_new_ns1__CanInsertProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertProtocol(soap*, ns1__CanInsertProtocol*) deserialize from a stream
/// - int soap_write_ns1__CanInsertProtocol(soap, ns1__CanInsertProtocol*) serialize to a stream
class ns1__CanInsertProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertProtocolResponse is a complexType.
/// class ns1__CanInsertProtocolResponse operations:
/// - soap_new_ns1__CanInsertProtocolResponse(soap*) allocate
/// - soap_new_ns1__CanInsertProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertProtocolResponse(soap*, ns1__CanInsertProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertProtocolResponse(soap, ns1__CanInsertProtocolResponse*) serialize to a stream
class ns1__CanInsertProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadUSEndFileWithUser is a complexType.
/// class ns1__UploadUSEndFileWithUser operations:
/// - soap_new_ns1__UploadUSEndFileWithUser(soap*) allocate
/// - soap_new_ns1__UploadUSEndFileWithUser(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSEndFileWithUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSEndFileWithUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSEndFileWithUser(soap*, ns1__UploadUSEndFileWithUser*) deserialize from a stream
/// - int soap_write_ns1__UploadUSEndFileWithUser(soap, ns1__UploadUSEndFileWithUser*) serialize to a stream
class ns1__UploadUSEndFileWithUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element codePreviousVersion of type xs:string.
    char*                                codePreviousVersion            0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":UploadUSEndFileWithUserResponse is a complexType.
/// class ns1__UploadUSEndFileWithUserResponse operations:
/// - soap_new_ns1__UploadUSEndFileWithUserResponse(soap*) allocate
/// - soap_new_ns1__UploadUSEndFileWithUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadUSEndFileWithUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadUSEndFileWithUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadUSEndFileWithUserResponse(soap*, ns1__UploadUSEndFileWithUserResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadUSEndFileWithUserResponse(soap, ns1__UploadUSEndFileWithUserResponse*) serialize to a stream
class ns1__UploadUSEndFileWithUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkContainerToDocument is a complexType.
/// class ns1__CanInsertLinkContainerToDocument operations:
/// - soap_new_ns1__CanInsertLinkContainerToDocument(soap*) allocate
/// - soap_new_ns1__CanInsertLinkContainerToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkContainerToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkContainerToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkContainerToDocument(soap*, ns1__CanInsertLinkContainerToDocument*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkContainerToDocument(soap, ns1__CanInsertLinkContainerToDocument*) serialize to a stream
class ns1__CanInsertLinkContainerToDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element linkTypeName of type xs:string.
    char*                                linkTypeName                   0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element instanceNameTo of type xs:string.
    char*                                instanceNameTo                 0;	///< Optional element.
};

/// "http://ws.abx/":CanInsertLinkContainerToDocumentResponse is a complexType.
/// class ns1__CanInsertLinkContainerToDocumentResponse operations:
/// - soap_new_ns1__CanInsertLinkContainerToDocumentResponse(soap*) allocate
/// - soap_new_ns1__CanInsertLinkContainerToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanInsertLinkContainerToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanInsertLinkContainerToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanInsertLinkContainerToDocumentResponse(soap*, ns1__CanInsertLinkContainerToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__CanInsertLinkContainerToDocumentResponse(soap, ns1__CanInsertLinkContainerToDocumentResponse*) serialize to a stream
class ns1__CanInsertLinkContainerToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ResetUserSessions is a complexType.
/// class ns1__ResetUserSessions operations:
/// - soap_new_ns1__ResetUserSessions(soap*) allocate
/// - soap_new_ns1__ResetUserSessions(soap*, int num) allocate array
/// - soap_new_req_ns1__ResetUserSessions(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ResetUserSessions(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ResetUserSessions(soap*, ns1__ResetUserSessions*) deserialize from a stream
/// - int soap_write_ns1__ResetUserSessions(soap, ns1__ResetUserSessions*) serialize to a stream
class ns1__ResetUserSessions : public xsd__anyType
{ public:
/// Element LoginParam of type "http://ws.abx/":abxLoginIdentity.
    ns1__abxLoginIdentity*               LoginParam                     0;	///< Optional element.
};

/// "http://ws.abx/":ResetUserSessionsResponse is a complexType.
/// class ns1__ResetUserSessionsResponse operations:
/// - soap_new_ns1__ResetUserSessionsResponse(soap*) allocate
/// - soap_new_ns1__ResetUserSessionsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ResetUserSessionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ResetUserSessionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ResetUserSessionsResponse(soap*, ns1__ResetUserSessionsResponse*) deserialize from a stream
/// - int soap_write_ns1__ResetUserSessionsResponse(soap, ns1__ResetUserSessionsResponse*) serialize to a stream
class ns1__ResetUserSessionsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLoginResult.
    ns1__abxLoginResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpDownloadPath is a complexType.
/// class ns1__SetTmpDownloadPath operations:
/// - soap_new_ns1__SetTmpDownloadPath(soap*) allocate
/// - soap_new_ns1__SetTmpDownloadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpDownloadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpDownloadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpDownloadPath(soap*, ns1__SetTmpDownloadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpDownloadPath(soap, ns1__SetTmpDownloadPath*) serialize to a stream
class ns1__SetTmpDownloadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpDownloadPathResponse is a complexType.
/// class ns1__SetTmpDownloadPathResponse operations:
/// - soap_new_ns1__SetTmpDownloadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpDownloadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpDownloadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpDownloadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpDownloadPathResponse(soap*, ns1__SetTmpDownloadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpDownloadPathResponse(soap, ns1__SetTmpDownloadPathResponse*) serialize to a stream
class ns1__SetTmpDownloadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertWFFile is a complexType.
/// class ns1__InsertWFFile operations:
/// - soap_new_ns1__InsertWFFile(soap*) allocate
/// - soap_new_ns1__InsertWFFile(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertWFFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertWFFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertWFFile(soap*, ns1__InsertWFFile*) deserialize from a stream
/// - int soap_write_ns1__InsertWFFile(soap, ns1__InsertWFFile*) serialize to a stream
class ns1__InsertWFFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element abxSecurityId of type xs:string.
    char*                                abxSecurityId                  0;	///< Optional element.
};

/// "http://ws.abx/":InsertWFFileResponse is a complexType.
/// class ns1__InsertWFFileResponse operations:
/// - soap_new_ns1__InsertWFFileResponse(soap*) allocate
/// - soap_new_ns1__InsertWFFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertWFFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertWFFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertWFFileResponse(soap*, ns1__InsertWFFileResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertWFFileResponse(soap, ns1__InsertWFFileResponse*) serialize to a stream
class ns1__InsertWFFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModExpression is a complexType.
/// class ns1__ModExpression operations:
/// - soap_new_ns1__ModExpression(soap*) allocate
/// - soap_new_ns1__ModExpression(soap*, int num) allocate array
/// - soap_new_req_ns1__ModExpression(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModExpression(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModExpression(soap*, ns1__ModExpression*) deserialize from a stream
/// - int soap_write_ns1__ModExpression(soap, ns1__ModExpression*) serialize to a stream
class ns1__ModExpression : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element expr of type "http://ws.abx/":abxExpression.
    ns1__abxExpression*                  expr                           0;	///< Optional element.
};

/// "http://ws.abx/":ModExpressionResponse is a complexType.
/// class ns1__ModExpressionResponse operations:
/// - soap_new_ns1__ModExpressionResponse(soap*) allocate
/// - soap_new_ns1__ModExpressionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModExpressionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModExpressionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModExpressionResponse(soap*, ns1__ModExpressionResponse*) deserialize from a stream
/// - int soap_write_ns1__ModExpressionResponse(soap, ns1__ModExpressionResponse*) serialize to a stream
class ns1__ModExpressionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxExpressionResult.
    ns1__abxExpressionResult*            return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByData is a complexType.
/// class ns1__GetDownloadDetailByData operations:
/// - soap_new_ns1__GetDownloadDetailByData(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByData(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByData(soap*, ns1__GetDownloadDetailByData*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByData(soap, ns1__GetDownloadDetailByData*) serialize to a stream
class ns1__GetDownloadDetailByData : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDownloadDetailByDataResponse is a complexType.
/// class ns1__GetDownloadDetailByDataResponse operations:
/// - soap_new_ns1__GetDownloadDetailByDataResponse(soap*) allocate
/// - soap_new_ns1__GetDownloadDetailByDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDownloadDetailByDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDownloadDetailByDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDownloadDetailByDataResponse(soap*, ns1__GetDownloadDetailByDataResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDownloadDetailByDataResponse(soap, ns1__GetDownloadDetailByDataResponse*) serialize to a stream
class ns1__GetDownloadDetailByDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskWatchFolder is a complexType.
/// class ns1__GetSDKTaskWatchFolder operations:
/// - soap_new_ns1__GetSDKTaskWatchFolder(soap*) allocate
/// - soap_new_ns1__GetSDKTaskWatchFolder(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskWatchFolder(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskWatchFolder(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskWatchFolder(soap*, ns1__GetSDKTaskWatchFolder*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskWatchFolder(soap, ns1__GetSDKTaskWatchFolder*) serialize to a stream
class ns1__GetSDKTaskWatchFolder : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetSDKTaskWatchFolderResponse is a complexType.
/// class ns1__GetSDKTaskWatchFolderResponse operations:
/// - soap_new_ns1__GetSDKTaskWatchFolderResponse(soap*) allocate
/// - soap_new_ns1__GetSDKTaskWatchFolderResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetSDKTaskWatchFolderResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetSDKTaskWatchFolderResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetSDKTaskWatchFolderResponse(soap*, ns1__GetSDKTaskWatchFolderResponse*) deserialize from a stream
/// - int soap_write_ns1__GetSDKTaskWatchFolderResponse(soap, ns1__GetSDKTaskWatchFolderResponse*) serialize to a stream
class ns1__GetSDKTaskWatchFolderResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByDesc is a complexType.
/// class ns1__GetProtocolByDesc operations:
/// - soap_new_ns1__GetProtocolByDesc(soap*) allocate
/// - soap_new_ns1__GetProtocolByDesc(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByDesc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByDesc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByDesc(soap*, ns1__GetProtocolByDesc*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByDesc(soap, ns1__GetProtocolByDesc*) serialize to a stream
class ns1__GetProtocolByDesc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolDesc of type xs:string.
    char*                                protocolDesc                   0;	///< Optional element.
};

/// "http://ws.abx/":GetProtocolByDescResponse is a complexType.
/// class ns1__GetProtocolByDescResponse operations:
/// - soap_new_ns1__GetProtocolByDescResponse(soap*) allocate
/// - soap_new_ns1__GetProtocolByDescResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetProtocolByDescResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetProtocolByDescResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetProtocolByDescResponse(soap*, ns1__GetProtocolByDescResponse*) deserialize from a stream
/// - int soap_write_ns1__GetProtocolByDescResponse(soap, ns1__GetProtocolByDescResponse*) serialize to a stream
class ns1__GetProtocolByDescResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteLink is a complexType.
/// class ns1__DeleteLink operations:
/// - soap_new_ns1__DeleteLink(soap*) allocate
/// - soap_new_ns1__DeleteLink(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteLink(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteLink(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteLink(soap*, ns1__DeleteLink*) deserialize from a stream
/// - int soap_write_ns1__DeleteLink(soap, ns1__DeleteLink*) serialize to a stream
class ns1__DeleteLink : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceNameFrom of type xs:string.
    char*                                instanceNameFrom               0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteLinkResponse is a complexType.
/// class ns1__DeleteLinkResponse operations:
/// - soap_new_ns1__DeleteLinkResponse(soap*) allocate
/// - soap_new_ns1__DeleteLinkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteLinkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteLinkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteLinkResponse(soap*, ns1__DeleteLinkResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteLinkResponse(soap, ns1__DeleteLinkResponse*) serialize to a stream
class ns1__DeleteLinkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifySDKTaskWatchFolder is a complexType.
/// class ns1__ModifySDKTaskWatchFolder operations:
/// - soap_new_ns1__ModifySDKTaskWatchFolder(soap*) allocate
/// - soap_new_ns1__ModifySDKTaskWatchFolder(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySDKTaskWatchFolder(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySDKTaskWatchFolder(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySDKTaskWatchFolder(soap*, ns1__ModifySDKTaskWatchFolder*) deserialize from a stream
/// - int soap_write_ns1__ModifySDKTaskWatchFolder(soap, ns1__ModifySDKTaskWatchFolder*) serialize to a stream
class ns1__ModifySDKTaskWatchFolder : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element sdkTask of type "http://ws.abx/":abxSDKTask.
    ns1__abxSDKTask*                     sdkTask                        0;	///< Optional element.
};

/// "http://ws.abx/":ModifySDKTaskWatchFolderResponse is a complexType.
/// class ns1__ModifySDKTaskWatchFolderResponse operations:
/// - soap_new_ns1__ModifySDKTaskWatchFolderResponse(soap*) allocate
/// - soap_new_ns1__ModifySDKTaskWatchFolderResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ModifySDKTaskWatchFolderResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModifySDKTaskWatchFolderResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModifySDKTaskWatchFolderResponse(soap*, ns1__ModifySDKTaskWatchFolderResponse*) deserialize from a stream
/// - int soap_write_ns1__ModifySDKTaskWatchFolderResponse(soap, ns1__ModifySDKTaskWatchFolderResponse*) serialize to a stream
class ns1__ModifySDKTaskWatchFolderResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslation is a complexType.
/// class ns1__InsertTranslation operations:
/// - soap_new_ns1__InsertTranslation(soap*) allocate
/// - soap_new_ns1__InsertTranslation(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslation(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslation(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslation(soap*, ns1__InsertTranslation*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslation(soap, ns1__InsertTranslation*) serialize to a stream
class ns1__InsertTranslation : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element transLang of type "http://ws.abx/":abxTranslation.
    ns1__abxTranslation*                 transLang                      0;	///< Optional element.
};

/// "http://ws.abx/":InsertTranslationResponse is a complexType.
/// class ns1__InsertTranslationResponse operations:
/// - soap_new_ns1__InsertTranslationResponse(soap*) allocate
/// - soap_new_ns1__InsertTranslationResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertTranslationResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertTranslationResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertTranslationResponse(soap*, ns1__InsertTranslationResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertTranslationResponse(soap, ns1__InsertTranslationResponse*) serialize to a stream
class ns1__InsertTranslationResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTranslationResult.
    ns1__abxTranslationResult*           return_                        0;	///< Optional element.
};

/// "http://ws.abx/":UploadSendChunk is a complexType.
/// class ns1__UploadSendChunk operations:
/// - soap_new_ns1__UploadSendChunk(soap*) allocate
/// - soap_new_ns1__UploadSendChunk(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadSendChunk(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadSendChunk(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadSendChunk(soap*, ns1__UploadSendChunk*) deserialize from a stream
/// - int soap_write_ns1__UploadSendChunk(soap, ns1__UploadSendChunk*) serialize to a stream
class ns1__UploadSendChunk : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element chunk of type xs:base64Binary.
    xsd__base64Binary*                   chunk                          0;	///< Nillable pointer.
};

/// "http://ws.abx/":UploadSendChunkResponse is a complexType.
/// class ns1__UploadSendChunkResponse operations:
/// - soap_new_ns1__UploadSendChunkResponse(soap*) allocate
/// - soap_new_ns1__UploadSendChunkResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__UploadSendChunkResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__UploadSendChunkResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__UploadSendChunkResponse(soap*, ns1__UploadSendChunkResponse*) deserialize from a stream
/// - int soap_write_ns1__UploadSendChunkResponse(soap, ns1__UploadSendChunkResponse*) serialize to a stream
class ns1__UploadSendChunkResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetCountLinksToDocument is a complexType.
/// class ns1__GetCountLinksToDocument operations:
/// - soap_new_ns1__GetCountLinksToDocument(soap*) allocate
/// - soap_new_ns1__GetCountLinksToDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountLinksToDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountLinksToDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountLinksToDocument(soap*, ns1__GetCountLinksToDocument*) deserialize from a stream
/// - int soap_write_ns1__GetCountLinksToDocument(soap, ns1__GetCountLinksToDocument*) serialize to a stream
class ns1__GetCountLinksToDocument : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetCountLinksToDocumentResponse is a complexType.
/// class ns1__GetCountLinksToDocumentResponse operations:
/// - soap_new_ns1__GetCountLinksToDocumentResponse(soap*) allocate
/// - soap_new_ns1__GetCountLinksToDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountLinksToDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountLinksToDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountLinksToDocumentResponse(soap*, ns1__GetCountLinksToDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__GetCountLinksToDocumentResponse(soap, ns1__GetCountLinksToDocumentResponse*) serialize to a stream
class ns1__GetCountLinksToDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxLinkResult.
    ns1__abxLinkResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateTemplate is a complexType.
/// class ns1__CreateTemplate operations:
/// - soap_new_ns1__CreateTemplate(soap*) allocate
/// - soap_new_ns1__CreateTemplate(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateTemplate(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateTemplate(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateTemplate(soap*, ns1__CreateTemplate*) deserialize from a stream
/// - int soap_write_ns1__CreateTemplate(soap, ns1__CreateTemplate*) serialize to a stream
class ns1__CreateTemplate : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Template2Update of type "http://ws.abx/":abxTemplate.
    ns1__abxTemplate*                    Template2Update                0;	///< Optional element.
};

/// "http://ws.abx/":CreateTemplateResponse is a complexType.
/// class ns1__CreateTemplateResponse operations:
/// - soap_new_ns1__CreateTemplateResponse(soap*) allocate
/// - soap_new_ns1__CreateTemplateResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateTemplateResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateTemplateResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateTemplateResponse(soap*, ns1__CreateTemplateResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateTemplateResponse(soap, ns1__CreateTemplateResponse*) serialize to a stream
class ns1__CreateTemplateResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTemplateResult.
    ns1__abxTemplateResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DestroyContainer is a complexType.
/// class ns1__DestroyContainer operations:
/// - soap_new_ns1__DestroyContainer(soap*) allocate
/// - soap_new_ns1__DestroyContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__DestroyContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DestroyContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DestroyContainer(soap*, ns1__DestroyContainer*) deserialize from a stream
/// - int soap_write_ns1__DestroyContainer(soap, ns1__DestroyContainer*) serialize to a stream
class ns1__DestroyContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":DestroyContainerResponse is a complexType.
/// class ns1__DestroyContainerResponse operations:
/// - soap_new_ns1__DestroyContainerResponse(soap*) allocate
/// - soap_new_ns1__DestroyContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DestroyContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DestroyContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DestroyContainerResponse(soap*, ns1__DestroyContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__DestroyContainerResponse(soap, ns1__DestroyContainerResponse*) serialize to a stream
class ns1__DestroyContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxContainerResult.
    ns1__abxContainerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":RemoveUserByGroup is a complexType.
/// class ns1__RemoveUserByGroup operations:
/// - soap_new_ns1__RemoveUserByGroup(soap*) allocate
/// - soap_new_ns1__RemoveUserByGroup(soap*, int num) allocate array
/// - soap_new_req_ns1__RemoveUserByGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RemoveUserByGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RemoveUserByGroup(soap*, ns1__RemoveUserByGroup*) deserialize from a stream
/// - int soap_write_ns1__RemoveUserByGroup(soap, ns1__RemoveUserByGroup*) serialize to a stream
class ns1__RemoveUserByGroup : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element groupName of type xs:string.
    char*                                groupName                      0;	///< Optional element.
};

/// "http://ws.abx/":RemoveUserByGroupResponse is a complexType.
/// class ns1__RemoveUserByGroupResponse operations:
/// - soap_new_ns1__RemoveUserByGroupResponse(soap*) allocate
/// - soap_new_ns1__RemoveUserByGroupResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__RemoveUserByGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__RemoveUserByGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__RemoveUserByGroupResponse(soap*, ns1__RemoveUserByGroupResponse*) deserialize from a stream
/// - int soap_write_ns1__RemoveUserByGroupResponse(soap, ns1__RemoveUserByGroupResponse*) serialize to a stream
class ns1__RemoveUserByGroupResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetCountFileList is a complexType.
/// class ns1__GetCountFileList operations:
/// - soap_new_ns1__GetCountFileList(soap*) allocate
/// - soap_new_ns1__GetCountFileList(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountFileList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountFileList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountFileList(soap*, ns1__GetCountFileList*) deserialize from a stream
/// - int soap_write_ns1__GetCountFileList(soap, ns1__GetCountFileList*) serialize to a stream
class ns1__GetCountFileList : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceId of type xs:string.
    char*                                instanceId                     0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetCountFileListResponse is a complexType.
/// class ns1__GetCountFileListResponse operations:
/// - soap_new_ns1__GetCountFileListResponse(soap*) allocate
/// - soap_new_ns1__GetCountFileListResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetCountFileListResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetCountFileListResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetCountFileListResponse(soap*, ns1__GetCountFileListResponse*) deserialize from a stream
/// - int soap_write_ns1__GetCountFileListResponse(soap, ns1__GetCountFileListResponse*) serialize to a stream
class ns1__GetCountFileListResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileContainerUnc is a complexType.
/// class ns1__DownloadFileContainerUnc operations:
/// - soap_new_ns1__DownloadFileContainerUnc(soap*) allocate
/// - soap_new_ns1__DownloadFileContainerUnc(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileContainerUnc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileContainerUnc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileContainerUnc(soap*, ns1__DownloadFileContainerUnc*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileContainerUnc(soap, ns1__DownloadFileContainerUnc*) serialize to a stream
class ns1__DownloadFileContainerUnc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element UNCPath of type xs:string.
    char*                                UNCPath                        0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileContainerUncResponse is a complexType.
/// class ns1__DownloadFileContainerUncResponse operations:
/// - soap_new_ns1__DownloadFileContainerUncResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileContainerUncResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileContainerUncResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileContainerUncResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileContainerUncResponse(soap*, ns1__DownloadFileContainerUncResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileContainerUncResponse(soap, ns1__DownloadFileContainerUncResponse*) serialize to a stream
class ns1__DownloadFileContainerUncResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFile is a complexType.
/// class ns1__DownloadFile operations:
/// - soap_new_ns1__DownloadFile(soap*) allocate
/// - soap_new_ns1__DownloadFile(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFile(soap*, ns1__DownloadFile*) deserialize from a stream
/// - int soap_write_ns1__DownloadFile(soap, ns1__DownloadFile*) serialize to a stream
class ns1__DownloadFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataAttachmentId of type xs:string.
    char*                                dataAttachmentId               0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileResponse is a complexType.
/// class ns1__DownloadFileResponse operations:
/// - soap_new_ns1__DownloadFileResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileResponse(soap*, ns1__DownloadFileResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileResponse(soap, ns1__DownloadFileResponse*) serialize to a stream
class ns1__DownloadFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByDocument is a complexType.
/// class ns1__GetDataTPFileListByDocument operations:
/// - soap_new_ns1__GetDataTPFileListByDocument(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByDocument(soap*, ns1__GetDataTPFileListByDocument*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByDocument(soap, ns1__GetDataTPFileListByDocument*) serialize to a stream
class ns1__GetDataTPFileListByDocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByDocumentResponse is a complexType.
/// class ns1__GetDataTPFileListByDocumentResponse operations:
/// - soap_new_ns1__GetDataTPFileListByDocumentResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByDocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByDocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByDocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByDocumentResponse(soap*, ns1__GetDataTPFileListByDocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByDocumentResponse(soap, ns1__GetDataTPFileListByDocumentResponse*) serialize to a stream
class ns1__GetDataTPFileListByDocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteProtocol is a complexType.
/// class ns1__CanDeleteProtocol operations:
/// - soap_new_ns1__CanDeleteProtocol(soap*) allocate
/// - soap_new_ns1__CanDeleteProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteProtocol(soap*, ns1__CanDeleteProtocol*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteProtocol(soap, ns1__CanDeleteProtocol*) serialize to a stream
class ns1__CanDeleteProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolId of type xs:string.
    char*                                protocolId                     0;	///< Optional element.
};

/// "http://ws.abx/":CanDeleteProtocolResponse is a complexType.
/// class ns1__CanDeleteProtocolResponse operations:
/// - soap_new_ns1__CanDeleteProtocolResponse(soap*) allocate
/// - soap_new_ns1__CanDeleteProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanDeleteProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanDeleteProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanDeleteProtocolResponse(soap*, ns1__CanDeleteProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__CanDeleteProtocolResponse(soap, ns1__CanDeleteProtocolResponse*) serialize to a stream
class ns1__CanDeleteProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":canCreateDynorg is a complexType.
/// class ns1__canCreateDynorg operations:
/// - soap_new_ns1__canCreateDynorg(soap*) allocate
/// - soap_new_ns1__canCreateDynorg(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateDynorg(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateDynorg(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateDynorg(soap*, ns1__canCreateDynorg*) deserialize from a stream
/// - int soap_write_ns1__canCreateDynorg(soap, ns1__canCreateDynorg*) serialize to a stream
class ns1__canCreateDynorg : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":canCreateDynorgResponse is a complexType.
/// class ns1__canCreateDynorgResponse operations:
/// - soap_new_ns1__canCreateDynorgResponse(soap*) allocate
/// - soap_new_ns1__canCreateDynorgResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__canCreateDynorgResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__canCreateDynorgResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__canCreateDynorgResponse(soap*, ns1__canCreateDynorgResponse*) deserialize from a stream
/// - int soap_write_ns1__canCreateDynorgResponse(soap, ns1__canCreateDynorgResponse*) serialize to a stream
class ns1__canCreateDynorgResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertSchedulerTask is a complexType.
/// class ns1__InsertSchedulerTask operations:
/// - soap_new_ns1__InsertSchedulerTask(soap*) allocate
/// - soap_new_ns1__InsertSchedulerTask(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertSchedulerTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertSchedulerTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertSchedulerTask(soap*, ns1__InsertSchedulerTask*) deserialize from a stream
/// - int soap_write_ns1__InsertSchedulerTask(soap, ns1__InsertSchedulerTask*) serialize to a stream
class ns1__InsertSchedulerTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element abxSchedulerTask of type "http://ws.abx/":abxSchedulerTask.
    ns1__abxSchedulerTask*               abxSchedulerTask               0;	///< Optional element.
/// Element abxDocuments of type "http://ws.abx/":abxArchSostDocumentList.
    ns1__abxArchSostDocumentList*        abxDocuments                   0;	///< Optional element.
};

/// "http://ws.abx/":abxArchSostDocumentList is a complexType.
/// class ns1__abxArchSostDocumentList operations:
/// - soap_new_ns1__abxArchSostDocumentList(soap*) allocate
/// - soap_new_ns1__abxArchSostDocumentList(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchSostDocumentList(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchSostDocumentList(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchSostDocumentList(soap*, ns1__abxArchSostDocumentList*) deserialize from a stream
/// - int soap_write_ns1__abxArchSostDocumentList(soap, ns1__abxArchSostDocumentList*) serialize to a stream
class ns1__abxArchSostDocumentList : public xsd__anyType
{ public:
/// Size of array of ns1__abxArchSostDocument* is 1..unbounded
   $int                                  __sizedataList                 1;
/// Pointer to array ns1__abxArchSostDocument* of length 1..unbounded
    ns1__abxArchSostDocument*           *dataList                       1;
};

/// "http://ws.abx/":abxArchSostDocument is a complexType.
/// class ns1__abxArchSostDocument operations:
/// - soap_new_ns1__abxArchSostDocument(soap*) allocate
/// - soap_new_ns1__abxArchSostDocument(soap*, int num) allocate array
/// - soap_new_req_ns1__abxArchSostDocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxArchSostDocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxArchSostDocument(soap*, ns1__abxArchSostDocument*) deserialize from a stream
/// - int soap_write_ns1__abxArchSostDocument(soap, ns1__abxArchSostDocument*) serialize to a stream
class ns1__abxArchSostDocument : public xsd__anyType
{ public:
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element schedulerDailyId of type xs:string.
    char*                                schedulerDailyId               1;	///< Required element.
/// Element schedulerWeeklyId of type xs:string.
    char*                                schedulerWeeklyId              1;	///< Required element.
/// Element schedulerMonthlyId of type xs:string.
    char*                                schedulerMonthlyId             1;	///< Required element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   1;	///< Required element.
/// Element dataId of type xs:string.
    char*                                dataId                         1;	///< Required element.
/// Element tdocDocumentId of type xs:string.
    char*                                tdocDocumentId                 1;	///< Required element.
};

/// "http://ws.abx/":InsertSchedulerTaskResponse is a complexType.
/// class ns1__InsertSchedulerTaskResponse operations:
/// - soap_new_ns1__InsertSchedulerTaskResponse(soap*) allocate
/// - soap_new_ns1__InsertSchedulerTaskResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertSchedulerTaskResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertSchedulerTaskResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertSchedulerTaskResponse(soap*, ns1__InsertSchedulerTaskResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertSchedulerTaskResponse(soap, ns1__InsertSchedulerTaskResponse*) serialize to a stream
class ns1__InsertSchedulerTaskResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSchedulerResult.
    ns1__abxSchedulerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileWA is a complexType.
/// class ns1__DownloadFileWA operations:
/// - soap_new_ns1__DownloadFileWA(soap*) allocate
/// - soap_new_ns1__DownloadFileWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileWA(soap*, ns1__DownloadFileWA*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileWA(soap, ns1__DownloadFileWA*) serialize to a stream
class ns1__DownloadFileWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataAttachmentId of type xs:string.
    char*                                dataAttachmentId               0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileWAResponse is a complexType.
/// class ns1__DownloadFileWAResponse operations:
/// - soap_new_ns1__DownloadFileWAResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileWAResponse(soap*, ns1__DownloadFileWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileWAResponse(soap, ns1__DownloadFileWAResponse*) serialize to a stream
class ns1__DownloadFileWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CreateField is a complexType.
/// class ns1__CreateField operations:
/// - soap_new_ns1__CreateField(soap*) allocate
/// - soap_new_ns1__CreateField(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateField(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateField(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateField(soap*, ns1__CreateField*) deserialize from a stream
/// - int soap_write_ns1__CreateField(soap, ns1__CreateField*) serialize to a stream
class ns1__CreateField : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element Field2Update of type "http://ws.abx/":abxField.
    ns1__abxField*                       Field2Update                   0;	///< Optional element.
/// Element recordsArray of type "http://ws.abx/":abxCombo.
    ns1__abxCombo*                       recordsArray                   0;	///< Optional element.
/// Element fkp of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fkp                            0;	///< Optional element.
/// Element optionGetCache of type xs:boolean.
    bool                                 optionGetCache                 1;	///< Required element.
/// Element optionSetDesc of type xs:boolean.
    bool                                 optionSetDesc                  1;	///< Required element.
};

/// "http://ws.abx/":CreateFieldResponse is a complexType.
/// class ns1__CreateFieldResponse operations:
/// - soap_new_ns1__CreateFieldResponse(soap*) allocate
/// - soap_new_ns1__CreateFieldResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CreateFieldResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CreateFieldResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CreateFieldResponse(soap*, ns1__CreateFieldResponse*) deserialize from a stream
/// - int soap_write_ns1__CreateFieldResponse(soap, ns1__CreateFieldResponse*) serialize to a stream
class ns1__CreateFieldResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFieldResult.
    ns1__abxFieldResult*                 return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileUnc is a complexType.
/// class ns1__DownloadFileUnc operations:
/// - soap_new_ns1__DownloadFileUnc(soap*) allocate
/// - soap_new_ns1__DownloadFileUnc(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileUnc(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileUnc(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileUnc(soap*, ns1__DownloadFileUnc*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileUnc(soap, ns1__DownloadFileUnc*) serialize to a stream
class ns1__DownloadFileUnc : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element UNCPath of type xs:string.
    char*                                UNCPath                        0;	///< Optional element.
/// Element dChunk of type xs:string.
    char*                                dChunk                         0;	///< Optional element.
};

/// "http://ws.abx/":DownloadFileUncResponse is a complexType.
/// class ns1__DownloadFileUncResponse operations:
/// - soap_new_ns1__DownloadFileUncResponse(soap*) allocate
/// - soap_new_ns1__DownloadFileUncResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DownloadFileUncResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DownloadFileUncResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DownloadFileUncResponse(soap*, ns1__DownloadFileUncResponse*) deserialize from a stream
/// - int soap_write_ns1__DownloadFileUncResponse(soap, ns1__DownloadFileUncResponse*) serialize to a stream
class ns1__DownloadFileUncResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByUsername is a complexType.
/// class ns1__GetDataTPFileListByUsername operations:
/// - soap_new_ns1__GetDataTPFileListByUsername(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByUsername(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByUsername(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByUsername(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByUsername(soap*, ns1__GetDataTPFileListByUsername*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByUsername(soap, ns1__GetDataTPFileListByUsername*) serialize to a stream
class ns1__GetDataTPFileListByUsername : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
};

/// "http://ws.abx/":GetDataTPFileListByUsernameResponse is a complexType.
/// class ns1__GetDataTPFileListByUsernameResponse operations:
/// - soap_new_ns1__GetDataTPFileListByUsernameResponse(soap*) allocate
/// - soap_new_ns1__GetDataTPFileListByUsernameResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataTPFileListByUsernameResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataTPFileListByUsernameResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataTPFileListByUsernameResponse(soap*, ns1__GetDataTPFileListByUsernameResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataTPFileListByUsernameResponse(soap, ns1__GetDataTPFileListByUsernameResponse*) serialize to a stream
class ns1__GetDataTPFileListByUsernameResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileTpResult.
    ns1__abxFileTpResult*                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetUserSettings is a complexType.
/// class ns1__GetUserSettings operations:
/// - soap_new_ns1__GetUserSettings(soap*) allocate
/// - soap_new_ns1__GetUserSettings(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserSettings(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserSettings(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserSettings(soap*, ns1__GetUserSettings*) deserialize from a stream
/// - int soap_write_ns1__GetUserSettings(soap, ns1__GetUserSettings*) serialize to a stream
class ns1__GetUserSettings : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
};

/// "http://ws.abx/":GetUserSettingsResponse is a complexType.
/// class ns1__GetUserSettingsResponse operations:
/// - soap_new_ns1__GetUserSettingsResponse(soap*) allocate
/// - soap_new_ns1__GetUserSettingsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetUserSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetUserSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetUserSettingsResponse(soap*, ns1__GetUserSettingsResponse*) deserialize from a stream
/// - int soap_write_ns1__GetUserSettingsResponse(soap, ns1__GetUserSettingsResponse*) serialize to a stream
class ns1__GetUserSettingsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SaveChars is a complexType.
/// class ns1__SaveChars operations:
/// - soap_new_ns1__SaveChars(soap*) allocate
/// - soap_new_ns1__SaveChars(soap*, int num) allocate array
/// - soap_new_req_ns1__SaveChars(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SaveChars(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SaveChars(soap*, ns1__SaveChars*) deserialize from a stream
/// - int soap_write_ns1__SaveChars(soap, ns1__SaveChars*) serialize to a stream
class ns1__SaveChars : public xsd__anyType
{ public:
};

/// "http://ws.abx/":SaveCharsResponse is a complexType.
/// class ns1__SaveCharsResponse operations:
/// - soap_new_ns1__SaveCharsResponse(soap*) allocate
/// - soap_new_ns1__SaveCharsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SaveCharsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SaveCharsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SaveCharsResponse(soap*, ns1__SaveCharsResponse*) deserialize from a stream
/// - int soap_write_ns1__SaveCharsResponse(soap, ns1__SaveCharsResponse*) serialize to a stream
class ns1__SaveCharsResponse : public xsd__anyType
{ public:
/// Element return of type xs:string.
    char*                                return_                        0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecord is a complexType.
/// class ns1__Fk_USCOREgetAllRecord operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecord(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecord(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecord(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecord(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecord(soap*, ns1__Fk_USCOREgetAllRecord*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecord(soap, ns1__Fk_USCOREgetAllRecord*) serialize to a stream
class ns1__Fk_USCOREgetAllRecord : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element fk of type "http://ws.abx/":abxFK.
    ns1__abxFK*                          fk                             0;	///< Optional element.
/// Element numTotRecord of type xs:int.
    int                                  numTotRecord                   1;	///< Required element.
/// Element orderBy of type xs:string.
    char*                                orderBy                        0;	///< Optional element.
/// Element directionDesc of type xs:boolean.
    bool                                 directionDesc                  1;	///< Required element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":Fk_getAllRecordResponse is a complexType.
/// class ns1__Fk_USCOREgetAllRecordResponse operations:
/// - soap_new_ns1__Fk_USCOREgetAllRecordResponse(soap*) allocate
/// - soap_new_ns1__Fk_USCOREgetAllRecordResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__Fk_USCOREgetAllRecordResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Fk_USCOREgetAllRecordResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Fk_USCOREgetAllRecordResponse(soap*, ns1__Fk_USCOREgetAllRecordResponse*) deserialize from a stream
/// - int soap_write_ns1__Fk_USCOREgetAllRecordResponse(soap, ns1__Fk_USCOREgetAllRecordResponse*) serialize to a stream
class ns1__Fk_USCOREgetAllRecordResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFKResult.
    ns1__abxFKResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":StartSDKTask is a complexType.
/// class ns1__StartSDKTask operations:
/// - soap_new_ns1__StartSDKTask(soap*) allocate
/// - soap_new_ns1__StartSDKTask(soap*, int num) allocate array
/// - soap_new_req_ns1__StartSDKTask(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__StartSDKTask(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__StartSDKTask(soap*, ns1__StartSDKTask*) deserialize from a stream
/// - int soap_write_ns1__StartSDKTask(soap, ns1__StartSDKTask*) serialize to a stream
class ns1__StartSDKTask : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element taskId of type xs:string.
    char*                                taskId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteContainer is a complexType.
/// class ns1__DeleteContainer operations:
/// - soap_new_ns1__DeleteContainer(soap*) allocate
/// - soap_new_ns1__DeleteContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteContainer(soap*, ns1__DeleteContainer*) deserialize from a stream
/// - int soap_write_ns1__DeleteContainer(soap, ns1__DeleteContainer*) serialize to a stream
class ns1__DeleteContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ContainerName of type xs:string.
    char*                                ContainerName                  0;	///< Optional element.
};

/// "http://ws.abx/":DeleteContainerResponse is a complexType.
/// class ns1__DeleteContainerResponse operations:
/// - soap_new_ns1__DeleteContainerResponse(soap*) allocate
/// - soap_new_ns1__DeleteContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteContainerResponse(soap*, ns1__DeleteContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteContainerResponse(soap, ns1__DeleteContainerResponse*) serialize to a stream
class ns1__DeleteContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxContainerResult.
    ns1__abxContainerResult*             return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileVersion is a complexType.
/// class ns1__DeleteFileVersion operations:
/// - soap_new_ns1__DeleteFileVersion(soap*) allocate
/// - soap_new_ns1__DeleteFileVersion(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileVersion(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileVersion(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileVersion(soap*, ns1__DeleteFileVersion*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileVersion(soap, ns1__DeleteFileVersion*) serialize to a stream
class ns1__DeleteFileVersion : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element versionNumber of type xs:string.
    char*                                versionNumber                  0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileVersionResponse is a complexType.
/// class ns1__DeleteFileVersionResponse operations:
/// - soap_new_ns1__DeleteFileVersionResponse(soap*) allocate
/// - soap_new_ns1__DeleteFileVersionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileVersionResponse(soap*, ns1__DeleteFileVersionResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileVersionResponse(soap, ns1__DeleteFileVersionResponse*) serialize to a stream
class ns1__DeleteFileVersionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyFile is a complexType.
/// class ns1__CanModifyFile operations:
/// - soap_new_ns1__CanModifyFile(soap*) allocate
/// - soap_new_ns1__CanModifyFile(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyFile(soap*, ns1__CanModifyFile*) deserialize from a stream
/// - int soap_write_ns1__CanModifyFile(soap, ns1__CanModifyFile*) serialize to a stream
class ns1__CanModifyFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
};

/// "http://ws.abx/":CanModifyFileResponse is a complexType.
/// class ns1__CanModifyFileResponse operations:
/// - soap_new_ns1__CanModifyFileResponse(soap*) allocate
/// - soap_new_ns1__CanModifyFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CanModifyFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CanModifyFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CanModifyFileResponse(soap*, ns1__CanModifyFileResponse*) deserialize from a stream
/// - int soap_write_ns1__CanModifyFileResponse(soap, ns1__CanModifyFileResponse*) serialize to a stream
class ns1__CanModifyFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxCan":abxCan.
    ns4__abxCan*                         return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DelUserSettings is a complexType.
/// class ns1__DelUserSettings operations:
/// - soap_new_ns1__DelUserSettings(soap*) allocate
/// - soap_new_ns1__DelUserSettings(soap*, int num) allocate array
/// - soap_new_req_ns1__DelUserSettings(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelUserSettings(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelUserSettings(soap*, ns1__DelUserSettings*) deserialize from a stream
/// - int soap_write_ns1__DelUserSettings(soap, ns1__DelUserSettings*) serialize to a stream
class ns1__DelUserSettings : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element aw of type "http://ws.abx/":abxWorkflow.
    ns1__abxWorkflow*                    aw                             0;	///< Optional element.
};

/// "http://ws.abx/":DelUserSettingsResponse is a complexType.
/// class ns1__DelUserSettingsResponse operations:
/// - soap_new_ns1__DelUserSettingsResponse(soap*) allocate
/// - soap_new_ns1__DelUserSettingsResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DelUserSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DelUserSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DelUserSettingsResponse(soap*, ns1__DelUserSettingsResponse*) deserialize from a stream
/// - int soap_write_ns1__DelUserSettingsResponse(soap, ns1__DelUserSettingsResponse*) serialize to a stream
class ns1__DelUserSettingsResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxWorkflowResult.
    ns1__abxWorkflowResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_document is a complexType.
/// class ns1__CheckIn_USCOREdocument operations:
/// - soap_new_ns1__CheckIn_USCOREdocument(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREdocument(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREdocument(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREdocument(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREdocument(soap*, ns1__CheckIn_USCOREdocument*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREdocument(soap, ns1__CheckIn_USCOREdocument*) serialize to a stream
class ns1__CheckIn_USCOREdocument : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element InstanceName of type xs:string.
    char*                                InstanceName                   0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_documentResponse is a complexType.
/// class ns1__CheckIn_USCOREdocumentResponse operations:
/// - soap_new_ns1__CheckIn_USCOREdocumentResponse(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREdocumentResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREdocumentResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREdocumentResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREdocumentResponse(soap*, ns1__CheckIn_USCOREdocumentResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREdocumentResponse(soap, ns1__CheckIn_USCOREdocumentResponse*) serialize to a stream
class ns1__CheckIn_USCOREdocumentResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":ShowProtocol is a complexType.
/// class ns1__ShowProtocol operations:
/// - soap_new_ns1__ShowProtocol(soap*) allocate
/// - soap_new_ns1__ShowProtocol(soap*, int num) allocate array
/// - soap_new_req_ns1__ShowProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ShowProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ShowProtocol(soap*, ns1__ShowProtocol*) deserialize from a stream
/// - int soap_write_ns1__ShowProtocol(soap, ns1__ShowProtocol*) serialize to a stream
class ns1__ShowProtocol : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element protocolData of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocol.
    ns2__abxProtocol*                    protocolData                   0;	///< Optional element.
};

/// "http://ws.abx/":ShowProtocolResponse is a complexType.
/// class ns1__ShowProtocolResponse operations:
/// - soap_new_ns1__ShowProtocolResponse(soap*) allocate
/// - soap_new_ns1__ShowProtocolResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ShowProtocolResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ShowProtocolResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ShowProtocolResponse(soap*, ns1__ShowProtocolResponse*) deserialize from a stream
/// - int soap_write_ns1__ShowProtocolResponse(soap, ns1__ShowProtocolResponse*) serialize to a stream
class ns1__ShowProtocolResponse : public xsd__anyType
{ public:
/// Element return of type "http://xml.netbeans.org/schema/abxProtocol":abxProtocolResult.
    ns2__abxProtocolResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpWFDownloadPath is a complexType.
/// class ns1__SetTmpWFDownloadPath operations:
/// - soap_new_ns1__SetTmpWFDownloadPath(soap*) allocate
/// - soap_new_ns1__SetTmpWFDownloadPath(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpWFDownloadPath(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpWFDownloadPath(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpWFDownloadPath(soap*, ns1__SetTmpWFDownloadPath*) deserialize from a stream
/// - int soap_write_ns1__SetTmpWFDownloadPath(soap, ns1__SetTmpWFDownloadPath*) serialize to a stream
class ns1__SetTmpWFDownloadPath : public xsd__anyType
{ public:
/// Element path of type xs:string.
    char*                                path                           0;	///< Optional element.
};

/// "http://ws.abx/":SetTmpWFDownloadPathResponse is a complexType.
/// class ns1__SetTmpWFDownloadPathResponse operations:
/// - soap_new_ns1__SetTmpWFDownloadPathResponse(soap*) allocate
/// - soap_new_ns1__SetTmpWFDownloadPathResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__SetTmpWFDownloadPathResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__SetTmpWFDownloadPathResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__SetTmpWFDownloadPathResponse(soap*, ns1__SetTmpWFDownloadPathResponse*) deserialize from a stream
/// - int soap_write_ns1__SetTmpWFDownloadPathResponse(soap, ns1__SetTmpWFDownloadPathResponse*) serialize to a stream
class ns1__SetTmpWFDownloadPathResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteData is a complexType.
/// class ns1__DeleteData operations:
/// - soap_new_ns1__DeleteData(soap*) allocate
/// - soap_new_ns1__DeleteData(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteData(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteData(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteData(soap*, ns1__DeleteData*) deserialize from a stream
/// - int soap_write_ns1__DeleteData(soap, ns1__DeleteData*) serialize to a stream
class ns1__DeleteData : public xsd__anyType
{ public:
/// Element IDtype_SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         IDtype_USCORESessionId         0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element dataId of type xs:string.
    char*                                dataId                         0;	///< Optional element.
};

/// "http://ws.abx/":DeleteDataResponse is a complexType.
/// class ns1__DeleteDataResponse operations:
/// - soap_new_ns1__DeleteDataResponse(soap*) allocate
/// - soap_new_ns1__DeleteDataResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteDataResponse(soap*, ns1__DeleteDataResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteDataResponse(soap, ns1__DeleteDataResponse*) serialize to a stream
class ns1__DeleteDataResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxDataResult.
    ns1__abxDataResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetObject is a complexType.
/// class ns1__GetObject operations:
/// - soap_new_ns1__GetObject(soap*) allocate
/// - soap_new_ns1__GetObject(soap*, int num) allocate array
/// - soap_new_req_ns1__GetObject(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetObject(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetObject(soap*, ns1__GetObject*) deserialize from a stream
/// - int soap_write_ns1__GetObject(soap, ns1__GetObject*) serialize to a stream
class ns1__GetObject : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetObjectResponse is a complexType.
/// class ns1__GetObjectResponse operations:
/// - soap_new_ns1__GetObjectResponse(soap*) allocate
/// - soap_new_ns1__GetObjectResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetObjectResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetObjectResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetObjectResponse(soap*, ns1__GetObjectResponse*) deserialize from a stream
/// - int soap_write_ns1__GetObjectResponse(soap, ns1__GetObjectResponse*) serialize to a stream
class ns1__GetObjectResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGoResult.
    ns1__abxGoResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":abxGoResult is a complexType.
/// class ns1__abxGoResult operations:
/// - soap_new_ns1__abxGoResult(soap*) allocate
/// - soap_new_ns1__abxGoResult(soap*, int num) allocate array
/// - soap_new_req_ns1__abxGoResult(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxGoResult(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxGoResult(soap*, ns1__abxGoResult*) deserialize from a stream
/// - int soap_write_ns1__abxGoResult(soap, ns1__abxGoResult*) serialize to a stream
class ns1__abxGoResult : public xsd__anyType
{ public:
/// Element result of type xs:unsignedInt.
    unsigned int                         result                         1;	///< Required element.
/// Element object of type "http://ws.abx/":abxObjDef.
    ns1__abxObjDef*                      object                         1;	///< Required element.
};

/// "http://ws.abx/":abxObjDef is a complexType.
/// class ns1__abxObjDef operations:
/// - soap_new_ns1__abxObjDef(soap*) allocate
/// - soap_new_ns1__abxObjDef(soap*, int num) allocate array
/// - soap_new_req_ns1__abxObjDef(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__abxObjDef(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__abxObjDef(soap*, ns1__abxObjDef*) deserialize from a stream
/// - int soap_write_ns1__abxObjDef(soap, ns1__abxObjDef*) serialize to a stream
class ns1__abxObjDef : public xsd__anyType
{ public:
/// Size of elobj array is 1..unbounded
   $int                                  __sizeelobj                    1;
/// class _ns1__abxObjDef_elobj operations:
/// - soap_new__ns1__abxObjDef_elobj(soap*) allocate
/// - soap_new__ns1__abxObjDef_elobj(soap*, int num) allocate array
/// - soap_new_req__ns1__abxObjDef_elobj(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxObjDef_elobj(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxObjDef_elobj(soap*, _ns1__abxObjDef_elobj*) deserialize from a stream
/// - int soap_write__ns1__abxObjDef_elobj(soap, _ns1__abxObjDef_elobj*) serialize to a stream
    class _ns1__abxObjDef_elobj
    {
/// Element objName of type xs:string.
    char*                                objName                        1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Size of methods array is 1..unbounded
   $int                                  __sizemethods                  1;
/// class _ns1__abxObjDef_elobj_methods operations:
/// - soap_new__ns1__abxObjDef_elobj_methods(soap*) allocate
/// - soap_new__ns1__abxObjDef_elobj_methods(soap*, int num) allocate array
/// - soap_new_req__ns1__abxObjDef_elobj_methods(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__abxObjDef_elobj_methods(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__abxObjDef_elobj_methods(soap*, _ns1__abxObjDef_elobj_methods*) deserialize from a stream
/// - int soap_write__ns1__abxObjDef_elobj_methods(soap, _ns1__abxObjDef_elobj_methods*) serialize to a stream
    class _ns1__abxObjDef_elobj_methods
    {
/// Element methodName of type xs:string.
    char*                                methodName                     1;	///< Required element.
    }                                   *methods                        1;
    }                                   *elobj                          1;
/// Element xxx of type xs:anyType.
    xsd__anyType*                        xxx                            1;	///< Required element.
};

/// "http://ws.abx/":StoreSDKVariable is a complexType.
/// class ns1__StoreSDKVariable operations:
/// - soap_new_ns1__StoreSDKVariable(soap*) allocate
/// - soap_new_ns1__StoreSDKVariable(soap*, int num) allocate array
/// - soap_new_req_ns1__StoreSDKVariable(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__StoreSDKVariable(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__StoreSDKVariable(soap*, ns1__StoreSDKVariable*) deserialize from a stream
/// - int soap_write_ns1__StoreSDKVariable(soap, ns1__StoreSDKVariable*) serialize to a stream
class ns1__StoreSDKVariable : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element variableKey of type xs:string.
    char*                                variableKey                    0;	///< Optional element.
/// Element variableValue of type xs:string.
    char*                                variableValue                  0;	///< Optional element.
};

/// "http://ws.abx/":StoreSDKVariableResponse is a complexType.
/// class ns1__StoreSDKVariableResponse operations:
/// - soap_new_ns1__StoreSDKVariableResponse(soap*) allocate
/// - soap_new_ns1__StoreSDKVariableResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__StoreSDKVariableResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__StoreSDKVariableResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__StoreSDKVariableResponse(soap*, ns1__StoreSDKVariableResponse*) deserialize from a stream
/// - int soap_write_ns1__StoreSDKVariableResponse(soap, ns1__StoreSDKVariableResponse*) serialize to a stream
class ns1__StoreSDKVariableResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxSDKResult.
    ns1__abxSDKResult*                   return_                        0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_attachContainer is a complexType.
/// class ns1__CheckIn_USCOREattachContainer operations:
/// - soap_new_ns1__CheckIn_USCOREattachContainer(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREattachContainer(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREattachContainer(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREattachContainer(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREattachContainer(soap*, ns1__CheckIn_USCOREattachContainer*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREattachContainer(soap, ns1__CheckIn_USCOREattachContainer*) serialize to a stream
class ns1__CheckIn_USCOREattachContainer : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element ObjName of type xs:string.
    char*                                ObjName                        0;	///< Optional element.
/// Element Path of type xs:string.
    char*                                Path                           0;	///< Optional element.
};

/// "http://ws.abx/":CheckIn_attachContainerResponse is a complexType.
/// class ns1__CheckIn_USCOREattachContainerResponse operations:
/// - soap_new_ns1__CheckIn_USCOREattachContainerResponse(soap*) allocate
/// - soap_new_ns1__CheckIn_USCOREattachContainerResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__CheckIn_USCOREattachContainerResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__CheckIn_USCOREattachContainerResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__CheckIn_USCOREattachContainerResponse(soap*, ns1__CheckIn_USCOREattachContainerResponse*) deserialize from a stream
/// - int soap_write_ns1__CheckIn_USCOREattachContainerResponse(soap, ns1__CheckIn_USCOREattachContainerResponse*) serialize to a stream
class ns1__CheckIn_USCOREattachContainerResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxCheckinResult.
    ns1__abxCheckinResult*               return_                        0;	///< Optional element.
};

/// "http://ws.abx/":AddUser is a complexType.
/// class ns1__AddUser operations:
/// - soap_new_ns1__AddUser(soap*) allocate
/// - soap_new_ns1__AddUser(soap*, int num) allocate array
/// - soap_new_req_ns1__AddUser(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddUser(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddUser(soap*, ns1__AddUser*) deserialize from a stream
/// - int soap_write_ns1__AddUser(soap, ns1__AddUser*) serialize to a stream
class ns1__AddUser : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element user of type "http://ws.abx/":abxUser.
    ns1__abxUser*                        user                           0;	///< Optional element.
};

/// "http://ws.abx/":AddUserResponse is a complexType.
/// class ns1__AddUserResponse operations:
/// - soap_new_ns1__AddUserResponse(soap*) allocate
/// - soap_new_ns1__AddUserResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__AddUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AddUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AddUserResponse(soap*, ns1__AddUserResponse*) deserialize from a stream
/// - int soap_write_ns1__AddUserResponse(soap, ns1__AddUserResponse*) serialize to a stream
class ns1__AddUserResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxUserListResult.
    ns1__abxUserListResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetTemplateProperties is a complexType.
/// class ns1__GetTemplateProperties operations:
/// - soap_new_ns1__GetTemplateProperties(soap*) allocate
/// - soap_new_ns1__GetTemplateProperties(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTemplateProperties(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTemplateProperties(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTemplateProperties(soap*, ns1__GetTemplateProperties*) deserialize from a stream
/// - int soap_write_ns1__GetTemplateProperties(soap, ns1__GetTemplateProperties*) serialize to a stream
class ns1__GetTemplateProperties : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element TemplateName of type xs:string.
    char*                                TemplateName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetTemplatePropertiesResponse is a complexType.
/// class ns1__GetTemplatePropertiesResponse operations:
/// - soap_new_ns1__GetTemplatePropertiesResponse(soap*) allocate
/// - soap_new_ns1__GetTemplatePropertiesResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetTemplatePropertiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetTemplatePropertiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetTemplatePropertiesResponse(soap*, ns1__GetTemplatePropertiesResponse*) deserialize from a stream
/// - int soap_write_ns1__GetTemplatePropertiesResponse(soap, ns1__GetTemplatePropertiesResponse*) serialize to a stream
class ns1__GetTemplatePropertiesResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxTemplateResult.
    ns1__abxTemplateResult*              return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWFFileDetail is a complexType.
/// class ns1__GetDataWFFileDetail operations:
/// - soap_new_ns1__GetDataWFFileDetail(soap*) allocate
/// - soap_new_ns1__GetDataWFFileDetail(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWFFileDetail(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWFFileDetail(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWFFileDetail(soap*, ns1__GetDataWFFileDetail*) deserialize from a stream
/// - int soap_write_ns1__GetDataWFFileDetail(soap, ns1__GetDataWFFileDetail*) serialize to a stream
class ns1__GetDataWFFileDetail : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element attachmentId of type xs:string.
    char*                                attachmentId                   0;	///< Optional element.
};

/// "http://ws.abx/":GetDataWFFileDetailResponse is a complexType.
/// class ns1__GetDataWFFileDetailResponse operations:
/// - soap_new_ns1__GetDataWFFileDetailResponse(soap*) allocate
/// - soap_new_ns1__GetDataWFFileDetailResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetDataWFFileDetailResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetDataWFFileDetailResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetDataWFFileDetailResponse(soap*, ns1__GetDataWFFileDetailResponse*) deserialize from a stream
/// - int soap_write_ns1__GetDataWFFileDetailResponse(soap, ns1__GetDataWFFileDetailResponse*) serialize to a stream
class ns1__GetDataWFFileDetailResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetAllObjectWithSystem is a complexType.
/// class ns1__GetAllObjectWithSystem operations:
/// - soap_new_ns1__GetAllObjectWithSystem(soap*) allocate
/// - soap_new_ns1__GetAllObjectWithSystem(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllObjectWithSystem(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllObjectWithSystem(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllObjectWithSystem(soap*, ns1__GetAllObjectWithSystem*) deserialize from a stream
/// - int soap_write_ns1__GetAllObjectWithSystem(soap, ns1__GetAllObjectWithSystem*) serialize to a stream
class ns1__GetAllObjectWithSystem : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
};

/// "http://ws.abx/":GetAllObjectWithSystemResponse is a complexType.
/// class ns1__GetAllObjectWithSystemResponse operations:
/// - soap_new_ns1__GetAllObjectWithSystemResponse(soap*) allocate
/// - soap_new_ns1__GetAllObjectWithSystemResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetAllObjectWithSystemResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetAllObjectWithSystemResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetAllObjectWithSystemResponse(soap*, ns1__GetAllObjectWithSystemResponse*) deserialize from a stream
/// - int soap_write_ns1__GetAllObjectWithSystemResponse(soap, ns1__GetAllObjectWithSystemResponse*) serialize to a stream
class ns1__GetAllObjectWithSystemResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxGoResult.
    ns1__abxGoResult*                    return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileWA is a complexType.
/// class ns1__DeleteFileWA operations:
/// - soap_new_ns1__DeleteFileWA(soap*) allocate
/// - soap_new_ns1__DeleteFileWA(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileWA(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileWA(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileWA(soap*, ns1__DeleteFileWA*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileWA(soap, ns1__DeleteFileWA*) serialize to a stream
class ns1__DeleteFileWA : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileWAResponse is a complexType.
/// class ns1__DeleteFileWAResponse operations:
/// - soap_new_ns1__DeleteFileWAResponse(soap*) allocate
/// - soap_new_ns1__DeleteFileWAResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileWAResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileWAResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileWAResponse(soap*, ns1__DeleteFileWAResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileWAResponse(soap, ns1__DeleteFileWAResponse*) serialize to a stream
class ns1__DeleteFileWAResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileContainerVersion is a complexType.
/// class ns1__DeleteFileContainerVersion operations:
/// - soap_new_ns1__DeleteFileContainerVersion(soap*) allocate
/// - soap_new_ns1__DeleteFileContainerVersion(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileContainerVersion(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileContainerVersion(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileContainerVersion(soap*, ns1__DeleteFileContainerVersion*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileContainerVersion(soap, ns1__DeleteFileContainerVersion*) serialize to a stream
class ns1__DeleteFileContainerVersion : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element fileCode of type xs:string.
    char*                                fileCode                       0;	///< Optional element.
/// Element versionNumber of type xs:string.
    char*                                versionNumber                  0;	///< Optional element.
};

/// "http://ws.abx/":DeleteFileContainerVersionResponse is a complexType.
/// class ns1__DeleteFileContainerVersionResponse operations:
/// - soap_new_ns1__DeleteFileContainerVersionResponse(soap*) allocate
/// - soap_new_ns1__DeleteFileContainerVersionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__DeleteFileContainerVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DeleteFileContainerVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DeleteFileContainerVersionResponse(soap*, ns1__DeleteFileContainerVersionResponse*) deserialize from a stream
/// - int soap_write_ns1__DeleteFileContainerVersionResponse(soap, ns1__DeleteFileContainerVersionResponse*) serialize to a stream
class ns1__DeleteFileContainerVersionResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":InsertFile is a complexType.
/// class ns1__InsertFile operations:
/// - soap_new_ns1__InsertFile(soap*) allocate
/// - soap_new_ns1__InsertFile(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFile(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFile(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFile(soap*, ns1__InsertFile*) deserialize from a stream
/// - int soap_write_ns1__InsertFile(soap, ns1__InsertFile*) serialize to a stream
class ns1__InsertFile : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
/// Element objName of type xs:string.
    char*                                objName                        0;	///< Optional element.
/// Element dataListInput of type "http://ws.abx/":abxFileList.
    ns1__abxFileList*                    dataListInput                  0;	///< Optional element.
/// Element retrieveCodeIfMissing of type xs:boolean.
    bool                                 retrieveCodeIfMissing          1;	///< Required element.
};

/// "http://ws.abx/":InsertFileResponse is a complexType.
/// class ns1__InsertFileResponse operations:
/// - soap_new_ns1__InsertFileResponse(soap*) allocate
/// - soap_new_ns1__InsertFileResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__InsertFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__InsertFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__InsertFileResponse(soap*, ns1__InsertFileResponse*) deserialize from a stream
/// - int soap_write_ns1__InsertFileResponse(soap, ns1__InsertFileResponse*) serialize to a stream
class ns1__InsertFileResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxFileResult.
    ns1__abxFileResult*                  return_                        0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceReplication is a complexType.
/// class ns1__GetInstanceReplication operations:
/// - soap_new_ns1__GetInstanceReplication(soap*) allocate
/// - soap_new_ns1__GetInstanceReplication(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceReplication(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceReplication(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceReplication(soap*, ns1__GetInstanceReplication*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceReplication(soap, ns1__GetInstanceReplication*) serialize to a stream
class ns1__GetInstanceReplication : public xsd__anyType
{ public:
/// Element SessionId of type "http://ws.abx/":IDtype.
    ns1__IDtype*                         SessionId                      0;	///< Optional element.
/// Element instanceName of type xs:string.
    char*                                instanceName                   0;	///< Optional element.
};

/// "http://ws.abx/":GetInstanceReplicationResponse is a complexType.
/// class ns1__GetInstanceReplicationResponse operations:
/// - soap_new_ns1__GetInstanceReplicationResponse(soap*) allocate
/// - soap_new_ns1__GetInstanceReplicationResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__GetInstanceReplicationResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__GetInstanceReplicationResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__GetInstanceReplicationResponse(soap*, ns1__GetInstanceReplicationResponse*) deserialize from a stream
/// - int soap_write_ns1__GetInstanceReplicationResponse(soap, ns1__GetInstanceReplicationResponse*) serialize to a stream
class ns1__GetInstanceReplicationResponse : public xsd__anyType
{ public:
/// Element return of type "http://ws.abx/":abxReplicationResult.
    ns1__abxReplicationResult*           return_                        0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xml.netbeans.org/schema/abxProtocol                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xml.netbeans.org/schema/abxProtocol                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xml.netbeans.org/schema/abxDynaminorg                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xml.netbeans.org/schema/abxDynaminorg                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xml.netbeans.org/schema/abxCan                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://xml.netbeans.org/schema/abxCan":AbxCan of type "http://xml.netbeans.org/schema/abxCan":abxCan.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xml.netbeans.org/schema/abxCan                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://ws.abx/                                                           *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://ws.abx/":AddDefaultProcess of type "http://ws.abx/":AddDefaultProcess.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddDefaultProcessResponse of type "http://ws.abx/":AddDefaultProcessResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddExpression of type "http://ws.abx/":AddExpression.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddExpressionResponse of type "http://ws.abx/":AddExpressionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddFileToSyncByArcCue of type "http://ws.abx/":AddFileToSyncByArcCue.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddFileToSyncByArcCueResponse of type "http://ws.abx/":AddFileToSyncByArcCueResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddLogSDK of type "http://ws.abx/":AddLogSDK.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddLogSDKResponse of type "http://ws.abx/":AddLogSDKResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddMarker of type "http://ws.abx/":AddMarker.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddMarkerResponse of type "http://ws.abx/":AddMarkerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddSign of type "http://ws.abx/":AddSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddSignResponse of type "http://ws.abx/":AddSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddUser of type "http://ws.abx/":AddUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddUserResponse of type "http://ws.abx/":AddUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddUserSettings of type "http://ws.abx/":AddUserSettings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":AddUserSettingsResponse of type "http://ws.abx/":AddUserSettingsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddDigitalSignature of type "http://ws.abx/":CanAddDigitalSignature.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddDigitalSignatureResponse of type "http://ws.abx/":CanAddDigitalSignatureResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddNewDate of type "http://ws.abx/":CanAddNewDate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddNewDateResponse of type "http://ws.abx/":CanAddNewDateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddNewYear of type "http://ws.abx/":CanAddNewYear.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanAddNewYearResponse of type "http://ws.abx/":CanAddNewYearResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteData of type "http://ws.abx/":CanDeleteData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteDataResponse of type "http://ws.abx/":CanDeleteDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteFile of type "http://ws.abx/":CanDeleteFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteFileContainer of type "http://ws.abx/":CanDeleteFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteFileContainerResponse of type "http://ws.abx/":CanDeleteFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteFileResponse of type "http://ws.abx/":CanDeleteFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteLinkFromContainer of type "http://ws.abx/":CanDeleteLinkFromContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteLinkFromContainerResponse of type "http://ws.abx/":CanDeleteLinkFromContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteProtocol of type "http://ws.abx/":CanDeleteProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanDeleteProtocolResponse of type "http://ws.abx/":CanDeleteProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanEditProtocol of type "http://ws.abx/":CanEditProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanEditProtocolResponse of type "http://ws.abx/":CanEditProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertData of type "http://ws.abx/":CanInsertData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertDataResponse of type "http://ws.abx/":CanInsertDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertFile of type "http://ws.abx/":CanInsertFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertFileContainer of type "http://ws.abx/":CanInsertFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertFileContainerResponse of type "http://ws.abx/":CanInsertFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertFileResponse of type "http://ws.abx/":CanInsertFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkContainerToContainer of type "http://ws.abx/":CanInsertLinkContainerToContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkContainerToContainerResponse of type "http://ws.abx/":CanInsertLinkContainerToContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkContainerToDocument of type "http://ws.abx/":CanInsertLinkContainerToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkContainerToDocumentResponse of type "http://ws.abx/":CanInsertLinkContainerToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkDocumentToDocument of type "http://ws.abx/":CanInsertLinkDocumentToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertLinkDocumentToDocumentResponse of type "http://ws.abx/":CanInsertLinkDocumentToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertProtocol of type "http://ws.abx/":CanInsertProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanInsertProtocolResponse of type "http://ws.abx/":CanInsertProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyData of type "http://ws.abx/":CanModifyData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyDataResponse of type "http://ws.abx/":CanModifyDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyFile of type "http://ws.abx/":CanModifyFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyFileResponse of type "http://ws.abx/":CanModifyFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyLinkContainerToContainer of type "http://ws.abx/":CanModifyLinkContainerToContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyLinkContainerToContainerResponse of type "http://ws.abx/":CanModifyLinkContainerToContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyLinkContainerToDocument of type "http://ws.abx/":CanModifyLinkContainerToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanModifyLinkContainerToDocumentResponse of type "http://ws.abx/":CanModifyLinkContainerToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanShowFile of type "http://ws.abx/":CanShowFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanShowFileResponse of type "http://ws.abx/":CanShowFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanUseProtocol of type "http://ws.abx/":CanUseProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CanUseProtocolResponse of type "http://ws.abx/":CanUseProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ChangeSDKTaskStatus of type "http://ws.abx/":ChangeSDKTaskStatus.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ChangeSDKTaskStatusResponse of type "http://ws.abx/":ChangeSDKTaskStatusResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ChangeSchedulerTaskScheduleStatus of type "http://ws.abx/":ChangeSchedulerTaskScheduleStatus.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ChangeSchedulerTaskScheduleStatusResponse of type "http://ws.abx/":ChangeSchedulerTaskScheduleStatusResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_attach of type "http://ws.abx/":CheckIn_attach.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_attachContainer of type "http://ws.abx/":CheckIn_attachContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_attachContainerResponse of type "http://ws.abx/":CheckIn_attachContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_attachResponse of type "http://ws.abx/":CheckIn_attachResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_document of type "http://ws.abx/":CheckIn_document.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckIn_documentResponse of type "http://ws.abx/":CheckIn_documentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_attach of type "http://ws.abx/":CheckOut_attach.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_attachContainer of type "http://ws.abx/":CheckOut_attachContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_attachContainerResponse of type "http://ws.abx/":CheckOut_attachContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_attachResponse of type "http://ws.abx/":CheckOut_attachResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_document of type "http://ws.abx/":CheckOut_document.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CheckOut_documentResponse of type "http://ws.abx/":CheckOut_documentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_getAll of type "http://ws.abx/":Combo_getAll.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_getAllResponse of type "http://ws.abx/":Combo_getAllResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_insert of type "http://ws.abx/":Combo_insert.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_insertResponse of type "http://ws.abx/":Combo_insertResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_isCombo of type "http://ws.abx/":Combo_isCombo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_isComboResponse of type "http://ws.abx/":Combo_isComboResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_modify of type "http://ws.abx/":Combo_modify.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_modifyResponse of type "http://ws.abx/":Combo_modifyResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_removeAll of type "http://ws.abx/":Combo_removeAll.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_removeAllResponse of type "http://ws.abx/":Combo_removeAllResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_removeItem of type "http://ws.abx/":Combo_removeItem.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Combo_removeItemResponse of type "http://ws.abx/":Combo_removeItemResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CopyData of type "http://ws.abx/":CopyData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CopyDataResponse of type "http://ws.abx/":CopyDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CopyFile of type "http://ws.abx/":CopyFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CopyFileResponse of type "http://ws.abx/":CopyFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateContainer of type "http://ws.abx/":CreateContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateContainerResponse of type "http://ws.abx/":CreateContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateDynorg of type "http://ws.abx/":CreateDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateDynorgResponse of type "http://ws.abx/":CreateDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateField of type "http://ws.abx/":CreateField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateFieldResponse of type "http://ws.abx/":CreateFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateRaccoglitore of type "http://ws.abx/":CreateRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateRaccoglitoreResponse of type "http://ws.abx/":CreateRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTask of type "http://ws.abx/":CreateSDKTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTaskFieldMapping of type "http://ws.abx/":CreateSDKTaskFieldMapping.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTaskFieldMappingResponse of type "http://ws.abx/":CreateSDKTaskFieldMappingResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTaskResponse of type "http://ws.abx/":CreateSDKTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTaskWatchFolder of type "http://ws.abx/":CreateSDKTaskWatchFolder.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateSDKTaskWatchFolderResponse of type "http://ws.abx/":CreateSDKTaskWatchFolderResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateTemplate of type "http://ws.abx/":CreateTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":CreateTemplateResponse of type "http://ws.abx/":CreateTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelDefaultProcess of type "http://ws.abx/":DelDefaultProcess.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelDefaultProcessResponse of type "http://ws.abx/":DelDefaultProcessResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelExpression of type "http://ws.abx/":DelExpression.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelExpressionResponse of type "http://ws.abx/":DelExpressionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelMarker of type "http://ws.abx/":DelMarker.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelMarkerResponse of type "http://ws.abx/":DelMarkerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelSign of type "http://ws.abx/":DelSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelSignResponse of type "http://ws.abx/":DelSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelUserSettings of type "http://ws.abx/":DelUserSettings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DelUserSettingsResponse of type "http://ws.abx/":DelUserSettingsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteArchSostRule of type "http://ws.abx/":DeleteArchSostRule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteArchSostRuleResponse of type "http://ws.abx/":DeleteArchSostRuleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteClasseDocumentale of type "http://ws.abx/":DeleteClasseDocumentale.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteClasseDocumentaleResponse of type "http://ws.abx/":DeleteClasseDocumentaleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteContainer of type "http://ws.abx/":DeleteContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteContainerResponse of type "http://ws.abx/":DeleteContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteData of type "http://ws.abx/":DeleteData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteDataResponse of type "http://ws.abx/":DeleteDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteDataWA of type "http://ws.abx/":DeleteDataWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteDataWAResponse of type "http://ws.abx/":DeleteDataWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteDynorg of type "http://ws.abx/":DeleteDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteDynorgResponse of type "http://ws.abx/":DeleteDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteField of type "http://ws.abx/":DeleteField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFieldResponse of type "http://ws.abx/":DeleteFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFile of type "http://ws.abx/":DeleteFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileContainer of type "http://ws.abx/":DeleteFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileContainerResponse of type "http://ws.abx/":DeleteFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileContainerVersion of type "http://ws.abx/":DeleteFileContainerVersion.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileContainerVersionResponse of type "http://ws.abx/":DeleteFileContainerVersionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileResponse of type "http://ws.abx/":DeleteFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileVersion of type "http://ws.abx/":DeleteFileVersion.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileVersionResponse of type "http://ws.abx/":DeleteFileVersionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileWA of type "http://ws.abx/":DeleteFileWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFileWAResponse of type "http://ws.abx/":DeleteFileWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFilter of type "http://ws.abx/":DeleteFilter.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteFilterResponse of type "http://ws.abx/":DeleteFilterResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteGroup of type "http://ws.abx/":DeleteGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteGroupResponse of type "http://ws.abx/":DeleteGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteLink of type "http://ws.abx/":DeleteLink.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteLinkResponse of type "http://ws.abx/":DeleteLinkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteProtocol of type "http://ws.abx/":DeleteProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteProtocolResponse of type "http://ws.abx/":DeleteProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteRaccoglitore of type "http://ws.abx/":DeleteRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteRaccoglitoreResponse of type "http://ws.abx/":DeleteRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKLog of type "http://ws.abx/":DeleteSDKLog.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKLogResponse of type "http://ws.abx/":DeleteSDKLogResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKTask of type "http://ws.abx/":DeleteSDKTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKTaskFieldMapping of type "http://ws.abx/":DeleteSDKTaskFieldMapping.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKTaskFieldMappingResponse of type "http://ws.abx/":DeleteSDKTaskFieldMappingResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSDKTaskResponse of type "http://ws.abx/":DeleteSDKTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSchedulerTask of type "http://ws.abx/":DeleteSchedulerTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSchedulerTaskResponse of type "http://ws.abx/":DeleteSchedulerTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSchedulerTaskSchedule of type "http://ws.abx/":DeleteSchedulerTaskSchedule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteSchedulerTaskScheduleResponse of type "http://ws.abx/":DeleteSchedulerTaskScheduleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTPFileByCode of type "http://ws.abx/":DeleteTPFileByCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTPFileByCodeResponse of type "http://ws.abx/":DeleteTPFileByCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTPFileById of type "http://ws.abx/":DeleteTPFileById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTPFileByIdResponse of type "http://ws.abx/":DeleteTPFileByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTemplate of type "http://ws.abx/":DeleteTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTemplateResponse of type "http://ws.abx/":DeleteTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTranslation of type "http://ws.abx/":DeleteTranslation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTranslationByCode of type "http://ws.abx/":DeleteTranslationByCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTranslationByCodeResponse of type "http://ws.abx/":DeleteTranslationByCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteTranslationResponse of type "http://ws.abx/":DeleteTranslationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUSFileByCode of type "http://ws.abx/":DeleteUSFileByCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUSFileByCodeResponse of type "http://ws.abx/":DeleteUSFileByCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUSFileById of type "http://ws.abx/":DeleteUSFileById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUSFileByIdResponse of type "http://ws.abx/":DeleteUSFileByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUserByUsername of type "http://ws.abx/":DeleteUserByUsername.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteUserByUsernameResponse of type "http://ws.abx/":DeleteUserByUsernameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteWFFileByCode of type "http://ws.abx/":DeleteWFFileByCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteWFFileByCodeResponse of type "http://ws.abx/":DeleteWFFileByCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteWFFileById of type "http://ws.abx/":DeleteWFFileById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DeleteWFFileByIdResponse of type "http://ws.abx/":DeleteWFFileByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DestroyContainer of type "http://ws.abx/":DestroyContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DestroyContainerResponse of type "http://ws.abx/":DestroyContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DestroyRaccoglitore of type "http://ws.abx/":DestroyRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DestroyRaccoglitoreResponse of type "http://ws.abx/":DestroyRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DigitalSign of type "http://ws.abx/":DigitalSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DigitalSignResponse of type "http://ws.abx/":DigitalSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadEndFileWA of type "http://ws.abx/":DownloadEndFileWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadEndFileWAResponse of type "http://ws.abx/":DownloadEndFileWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFile of type "http://ws.abx/":DownloadFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileByFileUniqueCode of type "http://ws.abx/":DownloadFileByFileUniqueCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileByFileUniqueCodeResponse of type "http://ws.abx/":DownloadFileByFileUniqueCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileContainer of type "http://ws.abx/":DownloadFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileContainerResponse of type "http://ws.abx/":DownloadFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileContainerUnc of type "http://ws.abx/":DownloadFileContainerUnc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileContainerUncResponse of type "http://ws.abx/":DownloadFileContainerUncResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFilePreview of type "http://ws.abx/":DownloadFilePreview.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFilePreviewResponse of type "http://ws.abx/":DownloadFilePreviewResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileResponse of type "http://ws.abx/":DownloadFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileUnc of type "http://ws.abx/":DownloadFileUnc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileUncResponse of type "http://ws.abx/":DownloadFileUncResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileWA of type "http://ws.abx/":DownloadFileWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileWAByFileUniqueCode of type "http://ws.abx/":DownloadFileWAByFileUniqueCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileWAByFileUniqueCodeResponse of type "http://ws.abx/":DownloadFileWAByFileUniqueCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadFileWAResponse of type "http://ws.abx/":DownloadFileWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetChunk of type "http://ws.abx/":DownloadGetChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetChunkResponse of type "http://ws.abx/":DownloadGetChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetChunkWA of type "http://ws.abx/":DownloadGetChunkWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetChunkWAResponse of type "http://ws.abx/":DownloadGetChunkWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetNext of type "http://ws.abx/":DownloadGetNext.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetNextResponse of type "http://ws.abx/":DownloadGetNextResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetNextWA of type "http://ws.abx/":DownloadGetNextWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadGetNextWAResponse of type "http://ws.abx/":DownloadGetNextWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadTPEndFile of type "http://ws.abx/":DownloadTPEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadTPEndFileResponse of type "http://ws.abx/":DownloadTPEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadTPFile of type "http://ws.abx/":DownloadTPFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadTPFileResponse of type "http://ws.abx/":DownloadTPFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSFile of type "http://ws.abx/":DownloadUSFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSFileResponse of type "http://ws.abx/":DownloadUSFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSGetChunk of type "http://ws.abx/":DownloadUSGetChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSGetChunkResponse of type "http://ws.abx/":DownloadUSGetChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSGetNext of type "http://ws.abx/":DownloadUSGetNext.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadUSGetNextResponse of type "http://ws.abx/":DownloadUSGetNextResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadWFEndFile of type "http://ws.abx/":DownloadWFEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadWFEndFileResponse of type "http://ws.abx/":DownloadWFEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadWFFile of type "http://ws.abx/":DownloadWFFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":DownloadWFFileResponse of type "http://ws.abx/":DownloadWFFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":EditProtocol of type "http://ws.abx/":EditProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":EditProtocolResponse of type "http://ws.abx/":EditProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":EndPermissionSettings of type "http://ws.abx/":EndPermissionSettings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":EndPermissionSettingsResponse of type "http://ws.abx/":EndPermissionSettingsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ExistUserByUsername of type "http://ws.abx/":ExistUserByUsername.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ExistUserByUsernameResponse of type "http://ws.abx/":ExistUserByUsernameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ExtractSDKPDFTemplateTextByArea of type "http://ws.abx/":ExtractSDKPDFTemplateTextByArea.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ExtractSDKPDFTemplateTextByAreaResponse of type "http://ws.abx/":ExtractSDKPDFTemplateTextByAreaResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_delete of type "http://ws.abx/":Fk_DB_delete.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_deleteResponse of type "http://ws.abx/":Fk_DB_deleteResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_modify of type "http://ws.abx/":Fk_DB_modify.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_modifyResponse of type "http://ws.abx/":Fk_DB_modifyResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_testConnection of type "http://ws.abx/":Fk_DB_testConnection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_DB_testConnectionResponse of type "http://ws.abx/":Fk_DB_testConnectionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_WS_insert of type "http://ws.abx/":Fk_WS_insert.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_WS_insertResponse of type "http://ws.abx/":Fk_WS_insertResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_create of type "http://ws.abx/":Fk_create.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_createResponse of type "http://ws.abx/":Fk_createResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecord of type "http://ws.abx/":Fk_getAllRecord.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByDesc of type "http://ws.abx/":Fk_getAllRecordByDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByDescResponse of type "http://ws.abx/":Fk_getAllRecordByDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByIndex of type "http://ws.abx/":Fk_getAllRecordByIndex.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByIndexDesc of type "http://ws.abx/":Fk_getAllRecordByIndexDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByIndexDescResponse of type "http://ws.abx/":Fk_getAllRecordByIndexDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordByIndexResponse of type "http://ws.abx/":Fk_getAllRecordByIndexResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getAllRecordResponse of type "http://ws.abx/":Fk_getAllRecordResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getColumnsName of type "http://ws.abx/":Fk_getColumnsName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getColumnsNameResponse of type "http://ws.abx/":Fk_getColumnsNameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecord of type "http://ws.abx/":Fk_getCountAllRecord.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecordByDesc of type "http://ws.abx/":Fk_getCountAllRecordByDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecordByDescResponse of type "http://ws.abx/":Fk_getCountAllRecordByDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecordByIndexDesc of type "http://ws.abx/":Fk_getCountAllRecordByIndexDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecordByIndexDescResponse of type "http://ws.abx/":Fk_getCountAllRecordByIndexDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getCountAllRecordResponse of type "http://ws.abx/":Fk_getCountAllRecordResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getLocalFieldList of type "http://ws.abx/":Fk_getLocalFieldList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getLocalFieldListResponse of type "http://ws.abx/":Fk_getLocalFieldListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getPars of type "http://ws.abx/":Fk_getPars.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getParsAllFk of type "http://ws.abx/":Fk_getParsAllFk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getParsAllFkResponse of type "http://ws.abx/":Fk_getParsAllFkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getParsResponse of type "http://ws.abx/":Fk_getParsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteDatabaseList of type "http://ws.abx/":Fk_getRemoteDatabaseList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteDatabaseListResponse of type "http://ws.abx/":Fk_getRemoteDatabaseListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteFieldList of type "http://ws.abx/":Fk_getRemoteFieldList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteFieldListResponse of type "http://ws.abx/":Fk_getRemoteFieldListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteTableList of type "http://ws.abx/":Fk_getRemoteTableList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteTableListResponse of type "http://ws.abx/":Fk_getRemoteTableListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteViewList of type "http://ws.abx/":Fk_getRemoteViewList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Fk_getRemoteViewListResponse of type "http://ws.abx/":Fk_getRemoteViewListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":FullTreePathName of type "http://ws.abx/":FullTreePathName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":FullTreePathNameResponse of type "http://ws.abx/":FullTreePathNameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAdjacentArchiBox of type "http://ws.abx/":GetAdjacentArchiBox.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAdjacentArchiBoxResponse of type "http://ws.abx/":GetAdjacentArchiBoxResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllContainerExpressions of type "http://ws.abx/":GetAllContainerExpressions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllContainerExpressionsResponse of type "http://ws.abx/":GetAllContainerExpressionsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllFilter of type "http://ws.abx/":GetAllFilter.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllFilterResponse of type "http://ws.abx/":GetAllFilterResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllObjectWithSystem of type "http://ws.abx/":GetAllObjectWithSystem.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetAllObjectWithSystemResponse of type "http://ws.abx/":GetAllObjectWithSystemResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchSostRules of type "http://ws.abx/":GetArchSostRules.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchSostRulesResponse of type "http://ws.abx/":GetArchSostRulesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInDomain of type "http://ws.abx/":GetArchiBoxInDomain.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInDomainByMatricola of type "http://ws.abx/":GetArchiBoxInDomainByMatricola.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInDomainByMatricolaResponse of type "http://ws.abx/":GetArchiBoxInDomainByMatricolaResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInDomainResponse of type "http://ws.abx/":GetArchiBoxInDomainResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInfo of type "http://ws.abx/":GetArchiBoxInfo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetArchiBoxInfoResponse of type "http://ws.abx/":GetArchiBoxInfoResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetClasseDocumentale of type "http://ws.abx/":GetClasseDocumentale.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetClasseDocumentaleResponse of type "http://ws.abx/":GetClasseDocumentaleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContSign of type "http://ws.abx/":GetContSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContSignByUser of type "http://ws.abx/":GetContSignByUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContSignByUserResponse of type "http://ws.abx/":GetContSignByUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContSignResponse of type "http://ws.abx/":GetContSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContainerLinks of type "http://ws.abx/":GetContainerLinks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetContainerLinksResponse of type "http://ws.abx/":GetContainerLinksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountDocumentLinks of type "http://ws.abx/":GetCountDocumentLinks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountDocumentLinksResponse of type "http://ws.abx/":GetCountDocumentLinksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountFileList of type "http://ws.abx/":GetCountFileList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountFileListResponse of type "http://ws.abx/":GetCountFileListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountLinksToDocument of type "http://ws.abx/":GetCountLinksToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetCountLinksToDocumentResponse of type "http://ws.abx/":GetCountLinksToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetData of type "http://ws.abx/":GetData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataById of type "http://ws.abx/":GetDataById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataByIdForSecurity of type "http://ws.abx/":GetDataByIdForSecurity.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataByIdForSecurityResponse of type "http://ws.abx/":GetDataByIdForSecurityResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataByIdResponse of type "http://ws.abx/":GetDataByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataCountWithPermission of type "http://ws.abx/":GetDataCountWithPermission.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataCountWithPermissionResponse of type "http://ws.abx/":GetDataCountWithPermissionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataCountWithoutPermission of type "http://ws.abx/":GetDataCountWithoutPermission.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataCountWithoutPermissionResponse of type "http://ws.abx/":GetDataCountWithoutPermissionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileContainerDetail of type "http://ws.abx/":GetDataFileContainerDetail.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileContainerDetailResponse of type "http://ws.abx/":GetDataFileContainerDetailResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileDetail of type "http://ws.abx/":GetDataFileDetail.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileDetailResponse of type "http://ws.abx/":GetDataFileDetailResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileList of type "http://ws.abx/":GetDataFileList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListContainer of type "http://ws.abx/":GetDataFileListContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListContainerResponse of type "http://ws.abx/":GetDataFileListContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListForSecurity of type "http://ws.abx/":GetDataFileListForSecurity.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListForSecurityResponse of type "http://ws.abx/":GetDataFileListForSecurityResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListOnlyLastVersion of type "http://ws.abx/":GetDataFileListOnlyLastVersion.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListOnlyLastVersionResponse of type "http://ws.abx/":GetDataFileListOnlyLastVersionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListResponse of type "http://ws.abx/":GetDataFileListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListWA of type "http://ws.abx/":GetDataFileListWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataFileListWAResponse of type "http://ws.abx/":GetDataFileListWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataLimit of type "http://ws.abx/":GetDataLimit.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataLimitResponse of type "http://ws.abx/":GetDataLimitResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataResponse of type "http://ws.abx/":GetDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileDetail of type "http://ws.abx/":GetDataTPFileDetail.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileDetailResponse of type "http://ws.abx/":GetDataTPFileDetailResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileList of type "http://ws.abx/":GetDataTPFileList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByContainer of type "http://ws.abx/":GetDataTPFileListByContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByContainerResponse of type "http://ws.abx/":GetDataTPFileListByContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByDocument of type "http://ws.abx/":GetDataTPFileListByDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByDocumentResponse of type "http://ws.abx/":GetDataTPFileListByDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByName of type "http://ws.abx/":GetDataTPFileListByName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByNameResponse of type "http://ws.abx/":GetDataTPFileListByNameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByUsername of type "http://ws.abx/":GetDataTPFileListByUsername.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListByUsernameResponse of type "http://ws.abx/":GetDataTPFileListByUsernameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataTPFileListResponse of type "http://ws.abx/":GetDataTPFileListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileDetail of type "http://ws.abx/":GetDataUSFileDetail.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileDetailResponse of type "http://ws.abx/":GetDataUSFileDetailResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileList of type "http://ws.abx/":GetDataUSFileList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileListByUsername of type "http://ws.abx/":GetDataUSFileListByUsername.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileListByUsernameResponse of type "http://ws.abx/":GetDataUSFileListByUsernameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataUSFileListResponse of type "http://ws.abx/":GetDataUSFileListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWAById of type "http://ws.abx/":GetDataWAById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWAByIdResponse of type "http://ws.abx/":GetDataWAByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWFFileDetail of type "http://ws.abx/":GetDataWFFileDetail.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWFFileDetailResponse of type "http://ws.abx/":GetDataWFFileDetailResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWFFileList of type "http://ws.abx/":GetDataWFFileList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDataWFFileListResponse of type "http://ws.abx/":GetDataWFFileListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDefaultObjActList of type "http://ws.abx/":GetDefaultObjActList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDefaultObjActListResponse of type "http://ws.abx/":GetDefaultObjActListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDefaultProcess of type "http://ws.abx/":GetDefaultProcess.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDefaultProcessResponse of type "http://ws.abx/":GetDefaultProcessResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDocumentLinks of type "http://ws.abx/":GetDocumentLinks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDocumentLinksResponse of type "http://ws.abx/":GetDocumentLinksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDomainList of type "http://ws.abx/":GetDomainList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDomainListResponse of type "http://ws.abx/":GetDomainListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByCont of type "http://ws.abx/":GetDownloadDetailByCont.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByContId of type "http://ws.abx/":GetDownloadDetailByContId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByContIdResponse of type "http://ws.abx/":GetDownloadDetailByContIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByContResponse of type "http://ws.abx/":GetDownloadDetailByContResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByData of type "http://ws.abx/":GetDownloadDetailByData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByDataId of type "http://ws.abx/":GetDownloadDetailByDataId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByDataIdResponse of type "http://ws.abx/":GetDownloadDetailByDataIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByDataResponse of type "http://ws.abx/":GetDownloadDetailByDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByFilecode of type "http://ws.abx/":GetDownloadDetailByFilecode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDownloadDetailByFilecodeResponse of type "http://ws.abx/":GetDownloadDetailByFilecodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDynorgList of type "http://ws.abx/":GetDynorgList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDynorgListResponse of type "http://ws.abx/":GetDynorgListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDynorgTypeList of type "http://ws.abx/":GetDynorgTypeList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetDynorgTypeListResponse of type "http://ws.abx/":GetDynorgTypeListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetExpression of type "http://ws.abx/":GetExpression.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetExpressionResponse of type "http://ws.abx/":GetExpressionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetExpressionValue of type "http://ws.abx/":GetExpressionValue.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetExpressionValueResponse of type "http://ws.abx/":GetExpressionValueResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldList of type "http://ws.abx/":GetFieldList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldListResponse of type "http://ws.abx/":GetFieldListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldProperties of type "http://ws.abx/":GetFieldProperties.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldPropertiesResponse of type "http://ws.abx/":GetFieldPropertiesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldsPropertiesFromTemplate of type "http://ws.abx/":GetFieldsPropertiesFromTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFieldsPropertiesFromTemplateResponse of type "http://ws.abx/":GetFieldsPropertiesFromTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileAvailable of type "http://ws.abx/":GetFileAvailable.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileAvailableResponse of type "http://ws.abx/":GetFileAvailableResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileListByCode of type "http://ws.abx/":GetFileListByCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileListByCodeForSecurity of type "http://ws.abx/":GetFileListByCodeForSecurity.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileListByCodeForSecurityResponse of type "http://ws.abx/":GetFileListByCodeForSecurityResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetFileListByCodeResponse of type "http://ws.abx/":GetFileListByCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetGroupList of type "http://ws.abx/":GetGroupList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetGroupListResponse of type "http://ws.abx/":GetGroupListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetGroupsListByUser of type "http://ws.abx/":GetGroupsListByUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetGroupsListByUserResponse of type "http://ws.abx/":GetGroupsListByUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceId of type "http://ws.abx/":GetInstanceId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceIdResponse of type "http://ws.abx/":GetInstanceIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceNameFromLinks of type "http://ws.abx/":GetInstanceNameFromLinks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceNameFromLinksResponse of type "http://ws.abx/":GetInstanceNameFromLinksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstancePathname of type "http://ws.abx/":GetInstancePathname.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstancePathnameResponse of type "http://ws.abx/":GetInstancePathnameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceReplication of type "http://ws.abx/":GetInstanceReplication.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceReplicationResponse of type "http://ws.abx/":GetInstanceReplicationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceReplicationStatus of type "http://ws.abx/":GetInstanceReplicationStatus.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetInstanceReplicationStatusResponse of type "http://ws.abx/":GetInstanceReplicationStatusResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLanguages of type "http://ws.abx/":GetLanguages.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLanguagesResponse of type "http://ws.abx/":GetLanguagesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLinksToDocument of type "http://ws.abx/":GetLinksToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLinksToDocumentFiltered of type "http://ws.abx/":GetLinksToDocumentFiltered.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLinksToDocumentFilteredResponse of type "http://ws.abx/":GetLinksToDocumentFilteredResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetLinksToDocumentResponse of type "http://ws.abx/":GetLinksToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetListDataWA of type "http://ws.abx/":GetListDataWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetListDataWAResponse of type "http://ws.abx/":GetListDataWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetListMarker of type "http://ws.abx/":GetListMarker.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetListMarkerResponse of type "http://ws.abx/":GetListMarkerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetMethod of type "http://ws.abx/":GetMethod.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetMethodResponse of type "http://ws.abx/":GetMethodResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetNewProtocolNumber of type "http://ws.abx/":GetNewProtocolNumber.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetNewProtocolNumberResponse of type "http://ws.abx/":GetNewProtocolNumberResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetObject of type "http://ws.abx/":GetObject.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetObjectResponse of type "http://ws.abx/":GetObjectResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByDesc of type "http://ws.abx/":GetProtocolByDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByDescResponse of type "http://ws.abx/":GetProtocolByDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolById of type "http://ws.abx/":GetProtocolById.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByIdResponse of type "http://ws.abx/":GetProtocolByIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByName of type "http://ws.abx/":GetProtocolByName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByNameDesc of type "http://ws.abx/":GetProtocolByNameDesc.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByNameDescResponse of type "http://ws.abx/":GetProtocolByNameDescResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolByNameResponse of type "http://ws.abx/":GetProtocolByNameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolList of type "http://ws.abx/":GetProtocolList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetProtocolListResponse of type "http://ws.abx/":GetProtocolListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetQueryParam of type "http://ws.abx/":GetQueryParam.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetQueryParamResponse of type "http://ws.abx/":GetQueryParamResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetRootId of type "http://ws.abx/":GetRootId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetRootIdResponse of type "http://ws.abx/":GetRootIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKImagesFromPDFTemplate of type "http://ws.abx/":GetSDKImagesFromPDFTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKImagesFromPDFTemplateResponse of type "http://ws.abx/":GetSDKImagesFromPDFTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKLogList of type "http://ws.abx/":GetSDKLogList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKLogListResponse of type "http://ws.abx/":GetSDKLogListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKRules of type "http://ws.abx/":GetSDKRules.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKRulesResponse of type "http://ws.abx/":GetSDKRulesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskExcelPreview of type "http://ws.abx/":GetSDKTaskExcelPreview.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskExcelPreviewResponse of type "http://ws.abx/":GetSDKTaskExcelPreviewResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskFieldMapping of type "http://ws.abx/":GetSDKTaskFieldMapping.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskFieldMappingResponse of type "http://ws.abx/":GetSDKTaskFieldMappingResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskWatchFolder of type "http://ws.abx/":GetSDKTaskWatchFolder.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTaskWatchFolderResponse of type "http://ws.abx/":GetSDKTaskWatchFolderResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTasks of type "http://ws.abx/":GetSDKTasks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTasksResponse of type "http://ws.abx/":GetSDKTasksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTextFromTemplate of type "http://ws.abx/":GetSDKTextFromTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKTextFromTemplateResponse of type "http://ws.abx/":GetSDKTextFromTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKVariables of type "http://ws.abx/":GetSDKVariables.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKVariablesResponse of type "http://ws.abx/":GetSDKVariablesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKWatchFolderDirectories of type "http://ws.abx/":GetSDKWatchFolderDirectories.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSDKWatchFolderDirectoriesResponse of type "http://ws.abx/":GetSDKWatchFolderDirectoriesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTaskByTaskTypeId of type "http://ws.abx/":GetSchedulerTaskByTaskTypeId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTaskByTaskTypeIdResponse of type "http://ws.abx/":GetSchedulerTaskByTaskTypeIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTasks of type "http://ws.abx/":GetSchedulerTasks.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTasksResponse of type "http://ws.abx/":GetSchedulerTasksResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTasksToRun of type "http://ws.abx/":GetSchedulerTasksToRun.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSchedulerTasksToRunResponse of type "http://ws.abx/":GetSchedulerTasksToRunResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSign of type "http://ws.abx/":GetSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetSignResponse of type "http://ws.abx/":GetSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTemplateList of type "http://ws.abx/":GetTemplateList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTemplateListResponse of type "http://ws.abx/":GetTemplateListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTemplateProperties of type "http://ws.abx/":GetTemplateProperties.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTemplatePropertiesResponse of type "http://ws.abx/":GetTemplatePropertiesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByLabelCode of type "http://ws.abx/":GetTranslationByLabelCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByLabelCodeResponse of type "http://ws.abx/":GetTranslationByLabelCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByMessageId of type "http://ws.abx/":GetTranslationByMessageId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByMessageIdResponse of type "http://ws.abx/":GetTranslationByMessageIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByRangeLabelCode of type "http://ws.abx/":GetTranslationByRangeLabelCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationByRangeLabelCodeResponse of type "http://ws.abx/":GetTranslationByRangeLabelCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationBySourceSuffix of type "http://ws.abx/":GetTranslationBySourceSuffix.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTranslationBySourceSuffixResponse of type "http://ws.abx/":GetTranslationBySourceSuffixResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTree of type "http://ws.abx/":GetTree.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTreeForSecurity of type "http://ws.abx/":GetTreeForSecurity.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTreeForSecurityResponse of type "http://ws.abx/":GetTreeForSecurityResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetTreeResponse of type "http://ws.abx/":GetTreeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByCont of type "http://ws.abx/":GetUploadDetailByCont.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByContId of type "http://ws.abx/":GetUploadDetailByContId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByContIdResponse of type "http://ws.abx/":GetUploadDetailByContIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByContResponse of type "http://ws.abx/":GetUploadDetailByContResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByData of type "http://ws.abx/":GetUploadDetailByData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByDataId of type "http://ws.abx/":GetUploadDetailByDataId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByDataIdResponse of type "http://ws.abx/":GetUploadDetailByDataIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByDataResponse of type "http://ws.abx/":GetUploadDetailByDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByFilecode of type "http://ws.abx/":GetUploadDetailByFilecode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUploadDetailByFilecodeResponse of type "http://ws.abx/":GetUploadDetailByFilecodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserDetailByUserId of type "http://ws.abx/":GetUserDetailByUserId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserDetailByUserIdResponse of type "http://ws.abx/":GetUserDetailByUserIdResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserDetailByUsername of type "http://ws.abx/":GetUserDetailByUsername.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserDetailByUsernameResponse of type "http://ws.abx/":GetUserDetailByUsernameResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserList of type "http://ws.abx/":GetUserList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserListActiveDirectory of type "http://ws.abx/":GetUserListActiveDirectory.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserListActiveDirectoryResponse of type "http://ws.abx/":GetUserListActiveDirectoryResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserListResponse of type "http://ws.abx/":GetUserListResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserSettings of type "http://ws.abx/":GetUserSettings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUserSettingsResponse of type "http://ws.abx/":GetUserSettingsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUsersListByGroup of type "http://ws.abx/":GetUsersListByGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetUsersListByGroupResponse of type "http://ws.abx/":GetUsersListByGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetWorkflowVariables of type "http://ws.abx/":GetWorkflowVariables.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetWorkflowVariablesResponse of type "http://ws.abx/":GetWorkflowVariablesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetWsdlVersion of type "http://ws.abx/":GetWsdlVersion.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":GetWsdlVersionResponse of type "http://ws.abx/":GetWsdlVersionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":IfFileExist of type "http://ws.abx/":IfFileExist.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":IfFileExistResponse of type "http://ws.abx/":IfFileExistResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertArchSostRule of type "http://ws.abx/":InsertArchSostRule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertArchSostRuleResponse of type "http://ws.abx/":InsertArchSostRuleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertClasseDocumentale of type "http://ws.abx/":InsertClasseDocumentale.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertClasseDocumentaleResponse of type "http://ws.abx/":InsertClasseDocumentaleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertData of type "http://ws.abx/":InsertData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertDataResponse of type "http://ws.abx/":InsertDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertDataWA of type "http://ws.abx/":InsertDataWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertDataWAResponse of type "http://ws.abx/":InsertDataWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFile of type "http://ws.abx/":InsertFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFileContainer of type "http://ws.abx/":InsertFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFileContainerResponse of type "http://ws.abx/":InsertFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFileResponse of type "http://ws.abx/":InsertFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFileWA of type "http://ws.abx/":InsertFileWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFileWAResponse of type "http://ws.abx/":InsertFileWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFilter of type "http://ws.abx/":InsertFilter.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertFilterResponse of type "http://ws.abx/":InsertFilterResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertGroup of type "http://ws.abx/":InsertGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertGroupResponse of type "http://ws.abx/":InsertGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkContainerToContainer of type "http://ws.abx/":InsertLinkContainerToContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkContainerToContainerResponse of type "http://ws.abx/":InsertLinkContainerToContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkContainerToDocument of type "http://ws.abx/":InsertLinkContainerToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkContainerToDocumentResponse of type "http://ws.abx/":InsertLinkContainerToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkDocumentToDocument of type "http://ws.abx/":InsertLinkDocumentToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertLinkDocumentToDocumentResponse of type "http://ws.abx/":InsertLinkDocumentToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertProtocol of type "http://ws.abx/":InsertProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertProtocolResponse of type "http://ws.abx/":InsertProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertSchedulerTask of type "http://ws.abx/":InsertSchedulerTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertSchedulerTaskResponse of type "http://ws.abx/":InsertSchedulerTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTPFile of type "http://ws.abx/":InsertTPFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTPFileResponse of type "http://ws.abx/":InsertTPFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslation of type "http://ws.abx/":InsertTranslation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslationCode of type "http://ws.abx/":InsertTranslationCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslationCodeResponse of type "http://ws.abx/":InsertTranslationCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslationDecimalCode of type "http://ws.abx/":InsertTranslationDecimalCode.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslationDecimalCodeResponse of type "http://ws.abx/":InsertTranslationDecimalCodeResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertTranslationResponse of type "http://ws.abx/":InsertTranslationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUSFile of type "http://ws.abx/":InsertUSFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUSFileResponse of type "http://ws.abx/":InsertUSFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUSFileWithUser of type "http://ws.abx/":InsertUSFileWithUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUSFileWithUserResponse of type "http://ws.abx/":InsertUSFileWithUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUser of type "http://ws.abx/":InsertUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUserConfig of type "http://ws.abx/":InsertUserConfig.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUserConfigResponse of type "http://ws.abx/":InsertUserConfigResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUserInGroup of type "http://ws.abx/":InsertUserInGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUserInGroupResponse of type "http://ws.abx/":InsertUserInGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertUserResponse of type "http://ws.abx/":InsertUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertWFFile of type "http://ws.abx/":InsertWFFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":InsertWFFileResponse of type "http://ws.abx/":InsertWFFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Login of type "http://ws.abx/":Login.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":LoginResponse of type "http://ws.abx/":LoginResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Logout of type "http://ws.abx/":Logout.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":LogoutResponse of type "http://ws.abx/":LogoutResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModDefaultProcess of type "http://ws.abx/":ModDefaultProcess.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModDefaultProcessResponse of type "http://ws.abx/":ModDefaultProcessResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModExpression of type "http://ws.abx/":ModExpression.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModExpressionResponse of type "http://ws.abx/":ModExpressionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModSign of type "http://ws.abx/":ModSign.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModSignResponse of type "http://ws.abx/":ModSignResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModUser of type "http://ws.abx/":ModUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModUserResponse of type "http://ws.abx/":ModUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModUserSettings of type "http://ws.abx/":ModUserSettings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModUserSettingsResponse of type "http://ws.abx/":ModUserSettingsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyArchSostRule of type "http://ws.abx/":ModifyArchSostRule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyArchSostRuleResponse of type "http://ws.abx/":ModifyArchSostRuleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyContainer of type "http://ws.abx/":ModifyContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyContainerResponse of type "http://ws.abx/":ModifyContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyData of type "http://ws.abx/":ModifyData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyDataResponse of type "http://ws.abx/":ModifyDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyDataWA of type "http://ws.abx/":ModifyDataWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyDataWAResponse of type "http://ws.abx/":ModifyDataWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyDynorg of type "http://ws.abx/":ModifyDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyDynorgResponse of type "http://ws.abx/":ModifyDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyField of type "http://ws.abx/":ModifyField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyFieldResponse of type "http://ws.abx/":ModifyFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyFileDescription of type "http://ws.abx/":ModifyFileDescription.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyFileDescriptionResponse of type "http://ws.abx/":ModifyFileDescriptionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyFilter of type "http://ws.abx/":ModifyFilter.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyFilterResponse of type "http://ws.abx/":ModifyFilterResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyGroup of type "http://ws.abx/":ModifyGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyGroupResponse of type "http://ws.abx/":ModifyGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyLinkContainerToContainer of type "http://ws.abx/":ModifyLinkContainerToContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyLinkContainerToContainerResponse of type "http://ws.abx/":ModifyLinkContainerToContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyLinkContainerToDocument of type "http://ws.abx/":ModifyLinkContainerToDocument.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyLinkContainerToDocumentResponse of type "http://ws.abx/":ModifyLinkContainerToDocumentResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyRaccoglitore of type "http://ws.abx/":ModifyRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyRaccoglitoreResponse of type "http://ws.abx/":ModifyRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySDKTask of type "http://ws.abx/":ModifySDKTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySDKTaskResponse of type "http://ws.abx/":ModifySDKTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySDKTaskWatchFolder of type "http://ws.abx/":ModifySDKTaskWatchFolder.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySDKTaskWatchFolderResponse of type "http://ws.abx/":ModifySDKTaskWatchFolderResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySchedulerTaskSchedule of type "http://ws.abx/":ModifySchedulerTaskSchedule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifySchedulerTaskScheduleResponse of type "http://ws.abx/":ModifySchedulerTaskScheduleResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyTemplate of type "http://ws.abx/":ModifyTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyTemplateResponse of type "http://ws.abx/":ModifyTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyTranslation of type "http://ws.abx/":ModifyTranslation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyTranslationResponse of type "http://ws.abx/":ModifyTranslationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUser of type "http://ws.abx/":ModifyUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUserConfig of type "http://ws.abx/":ModifyUserConfig.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUserConfigResponse of type "http://ws.abx/":ModifyUserConfigResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUserPassword of type "http://ws.abx/":ModifyUserPassword.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUserPasswordResponse of type "http://ws.abx/":ModifyUserPasswordResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ModifyUserResponse of type "http://ws.abx/":ModifyUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":MoveData of type "http://ws.abx/":MoveData.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":MoveDataResponse of type "http://ws.abx/":MoveDataResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Ping of type "http://ws.abx/":Ping.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":PingResponse of type "http://ws.abx/":PingResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":Query of type "http://ws.abx/":Query.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":QueryHeader of type "http://ws.abx/":QueryHeader.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":QueryHeaderResponse of type "http://ws.abx/":QueryHeaderResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":QueryResponse of type "http://ws.abx/":QueryResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":QueryTotAttach of type "http://ws.abx/":QueryTotAttach.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":QueryTotAttachResponse of type "http://ws.abx/":QueryTotAttachResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RegenerateDynOrg of type "http://ws.abx/":RegenerateDynOrg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RegenerateDynOrgResponse of type "http://ws.abx/":RegenerateDynOrgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RemoveUserByAllGroups of type "http://ws.abx/":RemoveUserByAllGroups.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RemoveUserByAllGroupsResponse of type "http://ws.abx/":RemoveUserByAllGroupsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RemoveUserByGroup of type "http://ws.abx/":RemoveUserByGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":RemoveUserByGroupResponse of type "http://ws.abx/":RemoveUserByGroupResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ResetUserSessions of type "http://ws.abx/":ResetUserSessions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ResetUserSessionsResponse of type "http://ws.abx/":ResetUserSessionsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SaveChars of type "http://ws.abx/":SaveChars.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SaveCharsResponse of type "http://ws.abx/":SaveCharsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SchedulerTaskScheduleProcessed of type "http://ws.abx/":SchedulerTaskScheduleProcessed.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SchedulerTaskScheduleProcessedResponse of type "http://ws.abx/":SchedulerTaskScheduleProcessedResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetFileAvailable of type "http://ws.abx/":SetFileAvailable.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetFileAvailableResponse of type "http://ws.abx/":SetFileAvailableResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetInstanceReplication of type "http://ws.abx/":SetInstanceReplication.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetInstanceReplicationResponse of type "http://ws.abx/":SetInstanceReplicationResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpDownloadPath of type "http://ws.abx/":SetTmpDownloadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpDownloadPathResponse of type "http://ws.abx/":SetTmpDownloadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpTPDownloadPath of type "http://ws.abx/":SetTmpTPDownloadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpTPDownloadPathResponse of type "http://ws.abx/":SetTmpTPDownloadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpTPUploadPath of type "http://ws.abx/":SetTmpTPUploadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpTPUploadPathResponse of type "http://ws.abx/":SetTmpTPUploadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUSDownloadPath of type "http://ws.abx/":SetTmpUSDownloadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUSDownloadPathResponse of type "http://ws.abx/":SetTmpUSDownloadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUSUploadPath of type "http://ws.abx/":SetTmpUSUploadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUSUploadPathResponse of type "http://ws.abx/":SetTmpUSUploadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUploadPath of type "http://ws.abx/":SetTmpUploadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpUploadPathResponse of type "http://ws.abx/":SetTmpUploadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpWFDownloadPath of type "http://ws.abx/":SetTmpWFDownloadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpWFDownloadPathResponse of type "http://ws.abx/":SetTmpWFDownloadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpWFUploadPath of type "http://ws.abx/":SetTmpWFUploadPath.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":SetTmpWFUploadPathResponse of type "http://ws.abx/":SetTmpWFUploadPathResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ShowProtocol of type "http://ws.abx/":ShowProtocol.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ShowProtocolResponse of type "http://ws.abx/":ShowProtocolResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":StartSDKTask of type "http://ws.abx/":StartSDKTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":StoreSDKVariable of type "http://ws.abx/":StoreSDKVariable.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":StoreSDKVariableResponse of type "http://ws.abx/":StoreSDKVariableResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":TestLettura of type "http://ws.abx/":TestLettura.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":TestLetturaResponse of type "http://ws.abx/":TestLetturaResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":TestScritturaLettura of type "http://ws.abx/":TestScritturaLettura.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":TestScritturaLetturaResponse of type "http://ws.abx/":TestScritturaLetturaResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFile of type "http://ws.abx/":UploadEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFileContainer of type "http://ws.abx/":UploadEndFileContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFileContainerResponse of type "http://ws.abx/":UploadEndFileContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFileResponse of type "http://ws.abx/":UploadEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFileWA of type "http://ws.abx/":UploadEndFileWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadEndFileWAResponse of type "http://ws.abx/":UploadEndFileWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadPreviewFile of type "http://ws.abx/":UploadPreviewFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadPreviewFileResponse of type "http://ws.abx/":UploadPreviewFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadSendChunk of type "http://ws.abx/":UploadSendChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadSendChunkResponse of type "http://ws.abx/":UploadSendChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadSendChunkWA of type "http://ws.abx/":UploadSendChunkWA.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadSendChunkWAResponse of type "http://ws.abx/":UploadSendChunkWAResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadTPEndFile of type "http://ws.abx/":UploadTPEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadTPEndFileResponse of type "http://ws.abx/":UploadTPEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadTPSendChunk of type "http://ws.abx/":UploadTPSendChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadTPSendChunkResponse of type "http://ws.abx/":UploadTPSendChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSEndFile of type "http://ws.abx/":UploadUSEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSEndFileResponse of type "http://ws.abx/":UploadUSEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSEndFileWithUser of type "http://ws.abx/":UploadUSEndFileWithUser.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSEndFileWithUserResponse of type "http://ws.abx/":UploadUSEndFileWithUserResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSSendChunk of type "http://ws.abx/":UploadUSSendChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadUSSendChunkResponse of type "http://ws.abx/":UploadUSSendChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadWFEndFile of type "http://ws.abx/":UploadWFEndFile.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadWFEndFileResponse of type "http://ws.abx/":UploadWFEndFileResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadWFSendChunk of type "http://ws.abx/":UploadWFSendChunk.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":UploadWFSendChunkResponse of type "http://ws.abx/":UploadWFSendChunkResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ValidateSDKTask of type "http://ws.abx/":ValidateSDKTask.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ValidateSDKTaskResponse of type "http://ws.abx/":ValidateSDKTaskResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ValidateSession of type "http://ws.abx/":ValidateSession.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":ValidateSessionResponse of type "http://ws.abx/":ValidateSessionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":VerifyExpression of type "http://ws.abx/":VerifyExpression.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":VerifyExpressionResponse of type "http://ws.abx/":VerifyExpressionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":VerifySDKTaskNameExists of type "http://ws.abx/":VerifySDKTaskNameExists.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":VerifySDKTaskNameExistsResponse of type "http://ws.abx/":VerifySDKTaskNameExistsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateContainer of type "http://ws.abx/":canCreateContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateContainerResponse of type "http://ws.abx/":canCreateContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateDynorg of type "http://ws.abx/":canCreateDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateDynorgResponse of type "http://ws.abx/":canCreateDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateField of type "http://ws.abx/":canCreateField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateFieldResponse of type "http://ws.abx/":canCreateFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateRaccoglitore of type "http://ws.abx/":canCreateRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateRaccoglitoreResponse of type "http://ws.abx/":canCreateRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateTemplate of type "http://ws.abx/":canCreateTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canCreateTemplateResponse of type "http://ws.abx/":canCreateTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteContainer of type "http://ws.abx/":canDeleteContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteContainerResponse of type "http://ws.abx/":canDeleteContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteDynorg of type "http://ws.abx/":canDeleteDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteDynorgResponse of type "http://ws.abx/":canDeleteDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteField of type "http://ws.abx/":canDeleteField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteFieldResponse of type "http://ws.abx/":canDeleteFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteRaccoglitore of type "http://ws.abx/":canDeleteRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteRaccoglitoreResponse of type "http://ws.abx/":canDeleteRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteTemplate of type "http://ws.abx/":canDeleteTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canDeleteTemplateResponse of type "http://ws.abx/":canDeleteTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyContainer of type "http://ws.abx/":canModifyContainer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyContainerResponse of type "http://ws.abx/":canModifyContainerResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyDynorg of type "http://ws.abx/":canModifyDynorg.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyDynorgResponse of type "http://ws.abx/":canModifyDynorgResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyField of type "http://ws.abx/":canModifyField.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyFieldResponse of type "http://ws.abx/":canModifyFieldResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyRaccoglitore of type "http://ws.abx/":canModifyRaccoglitore.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyRaccoglitoreResponse of type "http://ws.abx/":canModifyRaccoglitoreResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyTemplate of type "http://ws.abx/":canModifyTemplate.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ws.abx/":canModifyTemplateResponse of type "http://ws.abx/":canModifyTemplateResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://ws.abx/                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	abxWsGestPortBinding 
//gsoap ns1  service type:	abxWsGest 
//gsoap ns1  service port:	http://iabx000002.iabx.net:80/abxWsGestService/abxWsGest 
//gsoap ns1  service namespace:	http://ws.abx/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage abxWsGestService Definitions

@section abxWsGestService_bindings Service Bindings

  - @ref abxWsGestPortBinding

@section abxWsGestService_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page abxWsGestPortBinding Binding "abxWsGestPortBinding"

@section abxWsGestPortBinding_operations Operations of Binding  "abxWsGestPortBinding"

  - @ref __ns1__GetWsdlVersion

  - @ref __ns1__GetMethod

  - @ref __ns1__DestroyContainer

  - @ref __ns1__GetRootId

  - @ref __ns1__GetInstancePathname

  - @ref __ns1__GetObject

  - @ref __ns1__GetAllObjectWithSystem

  - @ref __ns1__FullTreePathName

  - @ref __ns1__GetTreeForSecurity

  - @ref __ns1__GetTree

  - @ref __ns1__CreateRaccoglitore

  - @ref __ns1__DeleteRaccoglitore

  - @ref __ns1__DestroyRaccoglitore

  - @ref __ns1__ModifyRaccoglitore

  - @ref __ns1__canCreateRaccoglitore

  - @ref __ns1__canDeleteRaccoglitore

  - @ref __ns1__canModifyRaccoglitore

  - @ref __ns1__GetTemplateList

  - @ref __ns1__GetLinksToDocumentFiltered

  - @ref __ns1__CheckIn_USCOREattach

  - @ref __ns1__CheckIn_USCOREattachContainer

  - @ref __ns1__CheckIn_USCOREdocument

  - @ref __ns1__CheckOut_USCOREattach

  - @ref __ns1__CheckOut_USCOREattachContainer

  - @ref __ns1__CheckOut_USCOREdocument

  - @ref __ns1__Combo_USCOREinsert

  - @ref __ns1__Combo_USCOREremoveItem

  - @ref __ns1__Combo_USCOREremoveAll

  - @ref __ns1__Combo_USCOREgetAll

  - @ref __ns1__Combo_USCOREisCombo

  - @ref __ns1__Combo_USCOREmodify

  - @ref __ns1__DeleteFile

  - @ref __ns1__DeleteFileContainer

  - @ref __ns1__CanDeleteFile

  - @ref __ns1__CanDeleteFileContainer

  - @ref __ns1__DeleteFileVersion

  - @ref __ns1__DeleteFileContainerVersion

  - @ref __ns1__InsertFile

  - @ref __ns1__InsertFileContainer

  - @ref __ns1__CanInsertFile

  - @ref __ns1__CanInsertFileContainer

  - @ref __ns1__CanModifyFile

  - @ref __ns1__CanShowFile

  - @ref __ns1__GetFileListByCode

  - @ref __ns1__GetFileListByCodeForSecurity

  - @ref __ns1__Query

  - @ref __ns1__GetAdjacentArchiBox

  - @ref __ns1__GetInstanceReplication

  - @ref __ns1__Login

  - @ref __ns1__Logout

  - @ref __ns1__CanModifyLinkContainerToContainer

  - @ref __ns1__ModifyLinkContainerToDocument

  - @ref __ns1__CanModifyLinkContainerToDocument

  - @ref __ns1__DeleteLink

  - @ref __ns1__CanDeleteLinkFromContainer

  - @ref __ns1__GetDocumentLinks

  - @ref __ns1__GetCountLinksToDocument

  - @ref __ns1__GetLinksToDocument

  - @ref __ns1__GetInstanceNameFromLinks

  - @ref __ns1__GetContainerLinks

  - @ref __ns1__RegenerateDynOrg

  - @ref __ns1__GetClasseDocumentale

  - @ref __ns1__DeleteClasseDocumentale

  - @ref __ns1__InsertClasseDocumentale

  - @ref __ns1__InsertDataWA

  - @ref __ns1__Ping

  - @ref __ns1__SetInstanceReplication

  - @ref __ns1__ModifyContainer

  - @ref __ns1__ModifyTemplate

  - @ref __ns1__DeleteTemplate

  - @ref __ns1__DeleteContainer

  - @ref __ns1__canModifyContainer

  - @ref __ns1__canModifyTemplate

  - @ref __ns1__canDeleteContainer

  - @ref __ns1__canDeleteTemplate

  - @ref __ns1__canCreateContainer

  - @ref __ns1__canCreateTemplate

  - @ref __ns1__GetDynorgList

  - @ref __ns1__ModifyDynorg

  - @ref __ns1__DeleteDynorg

  - @ref __ns1__CanEditProtocol

  - @ref __ns1__CanDeleteProtocol

  - @ref __ns1__GetNewProtocolNumber

  - @ref __ns1__SetTmpUSDownloadPath

  - @ref __ns1__SetTmpUSUploadPath

  - @ref __ns1__UploadUSEndFile

  - @ref __ns1__UploadUSEndFileWithUser

  - @ref __ns1__UploadUSSendChunk

  - @ref __ns1__DownloadUSGetNext

  - @ref __ns1__DownloadUSGetChunk

  - @ref __ns1__DownloadUSFile

  - @ref __ns1__GetDataUSFileDetail

  - @ref __ns1__GetDataUSFileList

  - @ref __ns1__GetDataUSFileListByUsername

  - @ref __ns1__InsertUSFileWithUser

  - @ref __ns1__DeleteUSFileById

  - @ref __ns1__DeleteUSFileByCode

  - @ref __ns1__SetTmpWFDownloadPath

  - @ref __ns1__SetTmpWFUploadPath

  - @ref __ns1__UploadWFEndFile

  - @ref __ns1__UploadWFSendChunk

  - @ref __ns1__DownloadWFEndFile

  - @ref __ns1__DownloadWFFile

  - @ref __ns1__GetDataWFFileDetail

  - @ref __ns1__GetDataWFFileList

  - @ref __ns1__InsertWFFile

  - @ref __ns1__DeleteWFFileById

  - @ref __ns1__DeleteWFFileByCode

  - @ref __ns1__TestLettura

  - @ref __ns1__TestScritturaLettura

  - @ref __ns1__SaveChars

  - @ref __ns1__AddUser

  - @ref __ns1__ModUser

  - @ref __ns1__VerifyExpression

  - @ref __ns1__AddExpression

  - @ref __ns1__ModExpression

  - @ref __ns1__DelExpression

  - @ref __ns1__GetExpression

  - @ref __ns1__GetAllContainerExpressions

  - @ref __ns1__GetExpressionValue

  - @ref __ns1__SetTmpTPDownloadPath

  - @ref __ns1__SetTmpTPUploadPath

  - @ref __ns1__UploadTPEndFile

  - @ref __ns1__UploadTPSendChunk

  - @ref __ns1__DownloadTPEndFile

  - @ref __ns1__DownloadTPFile

  - @ref __ns1__GetDataTPFileDetail

  - @ref __ns1__GetDataTPFileList

  - @ref __ns1__InsertTPFile

  - @ref __ns1__DeleteTPFileById

  - @ref __ns1__DeleteTPFileByCode

  - @ref __ns1__GetDataTPFileListByUsername

  - @ref __ns1__GetDataTPFileListByContainer

  - @ref __ns1__GetDataTPFileListByDocument

  - @ref __ns1__GetDataTPFileListByName

  - @ref __ns1__GetDefaultObjActList

  - @ref __ns1__EndPermissionSettings

  - @ref __ns1__DownloadGetChunkWA

  - @ref __ns1__GetSchedulerTaskByTaskTypeId

  - @ref __ns1__GetAllFilter

  - @ref __ns1__CanAddDigitalSignature

  - @ref __ns1__GetSDKTasks

  - @ref __ns1__GetSDKTaskWatchFolder

  - @ref __ns1__GetSDKRules

  - @ref __ns1__CreateSDKTask

  - @ref __ns1__ModifySDKTask

  - @ref __ns1__GetSDKTaskFieldMapping

  - @ref __ns1__CreateSDKTaskFieldMapping

  - @ref __ns1__DeleteSDKTaskFieldMapping

  - @ref __ns1__StoreSDKVariable

  - @ref __ns1__GetSDKVariables

  - @ref __ns1__GetSDKTaskExcelPreview

  - @ref __ns1__ValidateSDKTask

  - @ref __ns1__VerifySDKTaskNameExists

  - @ref __ns1__UploadPreviewFile

  - @ref __ns1__CreateSDKTaskWatchFolder

  - @ref __ns1__ModifySDKTaskWatchFolder

  - @ref __ns1__GetSDKWatchFolderDirectories

  - @ref __ns1__GetSDKImagesFromPDFTemplate

  - @ref __ns1__ExtractSDKPDFTemplateTextByArea

  - @ref __ns1__GetSDKTextFromTemplate

  - @ref __ns1__ChangeSDKTaskStatus

  - @ref __ns1__StartSDKTask

  - @ref __ns1__DeleteSDKTask

  - @ref __ns1__ModifyUserPassword

  - @ref __ns1__QueryHeader

  - @ref __ns1__QueryTotAttach

  - @ref __ns1__GetDynorgTypeList

  - @ref __ns1__canModifyDynorg

  - @ref __ns1__canDeleteDynorg

  - @ref __ns1__canCreateDynorg

  - @ref __ns1__InsertSchedulerTask

  - @ref __ns1__GetSchedulerTasks

  - @ref __ns1__DeleteSchedulerTask

  - @ref __ns1__GetSchedulerTasksToRun

  - @ref __ns1__SchedulerTaskScheduleProcessed

  - @ref __ns1__ModifySchedulerTaskSchedule

  - @ref __ns1__DeleteSchedulerTaskSchedule

  - @ref __ns1__ChangeSchedulerTaskScheduleStatus

  - @ref __ns1__GetDomainList

  - @ref __ns1__DigitalSign

  - @ref __ns1__DeleteGroup

  - @ref __ns1__GetDataById

  - @ref __ns1__DeleteField

  - @ref __ns1__CreateField

  - @ref __ns1__canModifyField

  - @ref __ns1__canDeleteField

  - @ref __ns1__canCreateField

  - @ref __ns1__GetFieldsPropertiesFromTemplate

  - @ref __ns1__GetDataWAById

  - @ref __ns1__InsertFileWA

  - @ref __ns1__UploadSendChunkWA

  - @ref __ns1__UploadEndFileWA

  - @ref __ns1__GetDataFileListWA

  - @ref __ns1__DownloadFileWAByFileUniqueCode

  - @ref __ns1__DownloadFileWA

  - @ref __ns1__DownloadGetNextWA

  - @ref __ns1__DownloadEndFileWA

  - @ref __ns1__DeleteFileWA

  - @ref __ns1__GetCountDocumentLinks

  - @ref __ns1__GetArchSostRules

  - @ref __ns1__GetDataFileListContainer

  - @ref __ns1__GetDataFileListOnlyLastVersion

  - @ref __ns1__GetDataFileList

  - @ref __ns1__GetDataFileListForSecurity

  - @ref __ns1__GetDataFileDetail

  - @ref __ns1__GetDataFileContainerDetail

  - @ref __ns1__DownloadFile

  - @ref __ns1__DownloadFileByFileUniqueCode

  - @ref __ns1__DownloadFileUnc

  - @ref __ns1__DownloadFileContainerUnc

  - @ref __ns1__DownloadGetChunk

  - @ref __ns1__DownloadGetNext

  - @ref __ns1__UploadSendChunk

  - @ref __ns1__DownloadFileContainer

  - @ref __ns1__DownloadFilePreview

  - @ref __ns1__GetUploadDetailByFilecode

  - @ref __ns1__GetUploadDetailByDataId

  - @ref __ns1__GetUploadDetailByData

  - @ref __ns1__GetUploadDetailByContId

  - @ref __ns1__GetUploadDetailByCont

  - @ref __ns1__UploadEndFile

  - @ref __ns1__UploadEndFileContainer

  - @ref __ns1__SetTmpUploadPath

  - @ref __ns1__SetTmpDownloadPath

  - @ref __ns1__GetDownloadDetailByFilecode

  - @ref __ns1__GetDownloadDetailByDataId

  - @ref __ns1__GetDownloadDetailByData

  - @ref __ns1__GetDownloadDetailByContId

  - @ref __ns1__GetDownloadDetailByCont

  - @ref __ns1__GetCountFileList

  - @ref __ns1__ModifyFileDescription

  - @ref __ns1__CopyFile

  - @ref __ns1__IfFileExist

  - @ref __ns1__SetFileAvailable

  - @ref __ns1__GetFileAvailable

  - @ref __ns1__AddFileToSyncByArcCue

  - @ref __ns1__Fk_USCOREDB_USCOREtestConnection

  - @ref __ns1__Fk_USCOREWS_USCOREinsert

  - @ref __ns1__Fk_USCOREDB_USCOREmodify

  - @ref __ns1__Fk_USCOREDB_USCOREdelete

  - @ref __ns1__Fk_USCOREgetParsAllFk

  - @ref __ns1__Fk_USCOREgetPars

  - @ref __ns1__Fk_USCOREcreate

  - @ref __ns1__GetLanguages

  - @ref __ns1__AddLogSDK

  - @ref __ns1__GetSDKLogList

  - @ref __ns1__DeleteSDKLog

  - @ref __ns1__ResetUserSessions

  - @ref __ns1__ValidateSession

  - @ref __ns1__GetUserList

  - @ref __ns1__GetUserListActiveDirectory

  - @ref __ns1__InsertUser

  - @ref __ns1__ModifyUser

  - @ref __ns1__InsertUserConfig

  - @ref __ns1__ModifyUserConfig

  - @ref __ns1__GetUserDetailByUsername

  - @ref __ns1__GetUserDetailByUserId

  - @ref __ns1__ExistUserByUsername

  - @ref __ns1__DeleteUserByUsername

  - @ref __ns1__InsertGroup

  - @ref __ns1__ModifyGroup

  - @ref __ns1__GetGroupList

  - @ref __ns1__InsertUserInGroup

  - @ref __ns1__RemoveUserByAllGroups

  - @ref __ns1__RemoveUserByGroup

  - @ref __ns1__GetGroupsListByUser

  - @ref __ns1__GetUsersListByGroup

  - @ref __ns1__ModifyTranslation

  - @ref __ns1__DeleteTranslation

  - @ref __ns1__InsertTranslation

  - @ref __ns1__InsertTranslationCode

  - @ref __ns1__InsertTranslationDecimalCode

  - @ref __ns1__GetTranslationByMessageId

  - @ref __ns1__GetTranslationByLabelCode

  - @ref __ns1__GetTranslationByRangeLabelCode

  - @ref __ns1__GetTranslationBySourceSuffix

  - @ref __ns1__DeleteTranslationByCode

  - @ref __ns1__AddDefaultProcess

  - @ref __ns1__ModDefaultProcess

  - @ref __ns1__DelDefaultProcess

  - @ref __ns1__GetDefaultProcess

  - @ref __ns1__AddMarker

  - @ref __ns1__DelMarker

  - @ref __ns1__GetListMarker

  - @ref __ns1__GetWorkflowVariables

  - @ref __ns1__AddSign

  - @ref __ns1__DelSign

  - @ref __ns1__GetSign

  - @ref __ns1__GetContSign

  - @ref __ns1__GetContSignByUser

  - @ref __ns1__ModSign

  - @ref __ns1__AddUserSettings

  - @ref __ns1__ModUserSettings

  - @ref __ns1__DelUserSettings

  - @ref __ns1__GetUserSettings

  - @ref __ns1__InsertData

  - @ref __ns1__CanInsertData

  - @ref __ns1__CopyData

  - @ref __ns1__MoveData

  - @ref __ns1__ModifyData

  - @ref __ns1__CanModifyData

  - @ref __ns1__DeleteData

  - @ref __ns1__CanDeleteData

  - @ref __ns1__GetData

  - @ref __ns1__GetDataLimit

  - @ref __ns1__GetDataByIdForSecurity

  - @ref __ns1__GetDataCountWithoutPermission

  - @ref __ns1__GetDataCountWithPermission

  - @ref __ns1__InsertProtocol

  - @ref __ns1__EditProtocol

  - @ref __ns1__DeleteProtocol

  - @ref __ns1__ShowProtocol

  - @ref __ns1__GetProtocolList

  - @ref __ns1__GetProtocolById

  - @ref __ns1__GetProtocolByName

  - @ref __ns1__GetProtocolByDesc

  - @ref __ns1__GetProtocolByNameDesc

  - @ref __ns1__CanUseProtocol

  - @ref __ns1__CanAddNewYear

  - @ref __ns1__CanAddNewDate

  - @ref __ns1__CanInsertProtocol

  - @ref __ns1__InsertUSFile

  - @ref __ns1__InsertArchSostRule

  - @ref __ns1__DeleteArchSostRule

  - @ref __ns1__ModifyArchSostRule

  - @ref __ns1__Fk_USCOREgetAllRecord

  - @ref __ns1__Fk_USCOREgetCountAllRecord

  - @ref __ns1__Fk_USCOREgetAllRecordByIndex

  - @ref __ns1__Fk_USCOREgetAllRecordByDesc

  - @ref __ns1__Fk_USCOREgetCountAllRecordByDesc

  - @ref __ns1__Fk_USCOREgetCountAllRecordByIndexDesc

  - @ref __ns1__Fk_USCOREgetAllRecordByIndexDesc

  - @ref __ns1__Fk_USCOREgetColumnsName

  - @ref __ns1__Fk_USCOREgetRemoteDatabaseList

  - @ref __ns1__Fk_USCOREgetRemoteTableList

  - @ref __ns1__Fk_USCOREgetRemoteViewList

  - @ref __ns1__Fk_USCOREgetRemoteFieldList

  - @ref __ns1__Fk_USCOREgetLocalFieldList

  - @ref __ns1__DeleteFilter

  - @ref __ns1__ModifyFilter

  - @ref __ns1__InsertFilter

  - @ref __ns1__GetInstanceId

  - @ref __ns1__GetTemplateProperties

  - @ref __ns1__GetQueryParam

  - @ref __ns1__InsertLinkContainerToContainer

  - @ref __ns1__CanInsertLinkContainerToContainer

  - @ref __ns1__InsertLinkContainerToDocument

  - @ref __ns1__CanInsertLinkContainerToDocument

  - @ref __ns1__InsertLinkDocumentToDocument

  - @ref __ns1__CanInsertLinkDocumentToDocument

  - @ref __ns1__ModifyLinkContainerToContainer

  - @ref __ns1__CreateContainer

  - @ref __ns1__CreateTemplate

  - @ref __ns1__CreateDynorg

  - @ref __ns1__GetInstanceReplicationStatus

  - @ref __ns1__ModifyDataWA

  - @ref __ns1__DeleteDataWA

  - @ref __ns1__GetListDataWA

  - @ref __ns1__GetFieldList

  - @ref __ns1__GetFieldProperties

  - @ref __ns1__ModifyField

  - @ref __ns1__GetArchiBoxInDomainByMatricola

  - @ref __ns1__GetArchiBoxInfo

  - @ref __ns1__GetArchiBoxInDomain

@section abxWsGestPortBinding_ports Endpoints of Binding  "abxWsGestPortBinding"

  - http://iabx000002.iabx.net:80/abxWsGestService/abxWsGest

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   abxWsGestPortBinding                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetWsdlVersion                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetWsdlVersion" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetWsdlVersionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetWsdlVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetWsdlVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetWsdlVersion*                ns1__GetWsdlVersion_,
    // output parameters:
    ns1__GetWsdlVersionResponse*        ns1__GetWsdlVersionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetWsdlVersion(
    struct soap *soap,
    // input parameters:
    ns1__GetWsdlVersion*                ns1__GetWsdlVersion_,
    // output parameters:
    ns1__GetWsdlVersionResponse*        ns1__GetWsdlVersionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetWsdlVersion SOAP
//gsoap ns1  service method-style:	GetWsdlVersion document
//gsoap ns1  service method-encoding:	GetWsdlVersion literal
//gsoap ns1  service method-input-action:	GetWsdlVersion http://ws.abx/abxWsGest/GetWsdlVersionRequest
//gsoap ns1  service method-output-action:	GetWsdlVersion http://ws.abx/abxWsGest/GetWsdlVersionResponse
int __ns1__GetWsdlVersion(
    ns1__GetWsdlVersion*                ns1__GetWsdlVersion_,	///< Input parameter
    ns1__GetWsdlVersionResponse*        ns1__GetWsdlVersionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetMethod                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetMethod" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetMethodRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetMethodResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetMethod(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetMethod*                     ns1__GetMethod_,
    // output parameters:
    ns1__GetMethodResponse*             ns1__GetMethodResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetMethod(
    struct soap *soap,
    // input parameters:
    ns1__GetMethod*                     ns1__GetMethod_,
    // output parameters:
    ns1__GetMethodResponse*             ns1__GetMethodResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetMethod SOAP
//gsoap ns1  service method-style:	GetMethod document
//gsoap ns1  service method-encoding:	GetMethod literal
//gsoap ns1  service method-input-action:	GetMethod http://ws.abx/abxWsGest/GetMethodRequest
//gsoap ns1  service method-output-action:	GetMethod http://ws.abx/abxWsGest/GetMethodResponse
int __ns1__GetMethod(
    ns1__GetMethod*                     ns1__GetMethod_,	///< Input parameter
    ns1__GetMethodResponse*             ns1__GetMethodResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DestroyContainer                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DestroyContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DestroyContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DestroyContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DestroyContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DestroyContainer*              ns1__DestroyContainer_,
    // output parameters:
    ns1__DestroyContainerResponse*      ns1__DestroyContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DestroyContainer(
    struct soap *soap,
    // input parameters:
    ns1__DestroyContainer*              ns1__DestroyContainer_,
    // output parameters:
    ns1__DestroyContainerResponse*      ns1__DestroyContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DestroyContainer SOAP
//gsoap ns1  service method-style:	DestroyContainer document
//gsoap ns1  service method-encoding:	DestroyContainer literal
//gsoap ns1  service method-input-action:	DestroyContainer http://ws.abx/abxWsGest/DestroyContainerRequest
//gsoap ns1  service method-output-action:	DestroyContainer http://ws.abx/abxWsGest/DestroyContainerResponse
int __ns1__DestroyContainer(
    ns1__DestroyContainer*              ns1__DestroyContainer_,	///< Input parameter
    ns1__DestroyContainerResponse*      ns1__DestroyContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetRootId                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetRootId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetRootIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetRootIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetRootId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetRootId*                     ns1__GetRootId_,
    // output parameters:
    ns1__GetRootIdResponse*             ns1__GetRootIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetRootId(
    struct soap *soap,
    // input parameters:
    ns1__GetRootId*                     ns1__GetRootId_,
    // output parameters:
    ns1__GetRootIdResponse*             ns1__GetRootIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetRootId SOAP
//gsoap ns1  service method-style:	GetRootId document
//gsoap ns1  service method-encoding:	GetRootId literal
//gsoap ns1  service method-input-action:	GetRootId http://ws.abx/abxWsGest/GetRootIdRequest
//gsoap ns1  service method-output-action:	GetRootId http://ws.abx/abxWsGest/GetRootIdResponse
int __ns1__GetRootId(
    ns1__GetRootId*                     ns1__GetRootId_,	///< Input parameter
    ns1__GetRootIdResponse*             ns1__GetRootIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInstancePathname                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInstancePathname" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetInstancePathnameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetInstancePathnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInstancePathname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetInstancePathname*           ns1__GetInstancePathname_,
    // output parameters:
    ns1__GetInstancePathnameResponse*   ns1__GetInstancePathnameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInstancePathname(
    struct soap *soap,
    // input parameters:
    ns1__GetInstancePathname*           ns1__GetInstancePathname_,
    // output parameters:
    ns1__GetInstancePathnameResponse*   ns1__GetInstancePathnameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInstancePathname SOAP
//gsoap ns1  service method-style:	GetInstancePathname document
//gsoap ns1  service method-encoding:	GetInstancePathname literal
//gsoap ns1  service method-input-action:	GetInstancePathname http://ws.abx/abxWsGest/GetInstancePathnameRequest
//gsoap ns1  service method-output-action:	GetInstancePathname http://ws.abx/abxWsGest/GetInstancePathnameResponse
int __ns1__GetInstancePathname(
    ns1__GetInstancePathname*           ns1__GetInstancePathname_,	///< Input parameter
    ns1__GetInstancePathnameResponse*   ns1__GetInstancePathnameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetObject                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetObject" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetObjectRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetObject*                     ns1__GetObject_,
    // output parameters:
    ns1__GetObjectResponse*             ns1__GetObjectResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetObject(
    struct soap *soap,
    // input parameters:
    ns1__GetObject*                     ns1__GetObject_,
    // output parameters:
    ns1__GetObjectResponse*             ns1__GetObjectResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetObject SOAP
//gsoap ns1  service method-style:	GetObject document
//gsoap ns1  service method-encoding:	GetObject literal
//gsoap ns1  service method-input-action:	GetObject http://ws.abx/abxWsGest/GetObjectRequest
//gsoap ns1  service method-output-action:	GetObject http://ws.abx/abxWsGest/GetObjectResponse
int __ns1__GetObject(
    ns1__GetObject*                     ns1__GetObject_,	///< Input parameter
    ns1__GetObjectResponse*             ns1__GetObjectResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllObjectWithSystem                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllObjectWithSystem" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetAllObjectWithSystemRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetAllObjectWithSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllObjectWithSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetAllObjectWithSystem*        ns1__GetAllObjectWithSystem_,
    // output parameters:
    ns1__GetAllObjectWithSystemResponse* ns1__GetAllObjectWithSystemResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllObjectWithSystem(
    struct soap *soap,
    // input parameters:
    ns1__GetAllObjectWithSystem*        ns1__GetAllObjectWithSystem_,
    // output parameters:
    ns1__GetAllObjectWithSystemResponse* ns1__GetAllObjectWithSystemResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllObjectWithSystem SOAP
//gsoap ns1  service method-style:	GetAllObjectWithSystem document
//gsoap ns1  service method-encoding:	GetAllObjectWithSystem literal
//gsoap ns1  service method-input-action:	GetAllObjectWithSystem http://ws.abx/abxWsGest/GetAllObjectWithSystemRequest
//gsoap ns1  service method-output-action:	GetAllObjectWithSystem http://ws.abx/abxWsGest/GetAllObjectWithSystemResponse
int __ns1__GetAllObjectWithSystem(
    ns1__GetAllObjectWithSystem*        ns1__GetAllObjectWithSystem_,	///< Input parameter
    ns1__GetAllObjectWithSystemResponse* ns1__GetAllObjectWithSystemResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__FullTreePathName                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__FullTreePathName" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/FullTreePathNameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/FullTreePathNameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__FullTreePathName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__FullTreePathName*              ns1__FullTreePathName_,
    // output parameters:
    ns1__FullTreePathNameResponse*      ns1__FullTreePathNameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__FullTreePathName(
    struct soap *soap,
    // input parameters:
    ns1__FullTreePathName*              ns1__FullTreePathName_,
    // output parameters:
    ns1__FullTreePathNameResponse*      ns1__FullTreePathNameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	FullTreePathName SOAP
//gsoap ns1  service method-style:	FullTreePathName document
//gsoap ns1  service method-encoding:	FullTreePathName literal
//gsoap ns1  service method-input-action:	FullTreePathName http://ws.abx/abxWsGest/FullTreePathNameRequest
//gsoap ns1  service method-output-action:	FullTreePathName http://ws.abx/abxWsGest/FullTreePathNameResponse
int __ns1__FullTreePathName(
    ns1__FullTreePathName*              ns1__FullTreePathName_,	///< Input parameter
    ns1__FullTreePathNameResponse*      ns1__FullTreePathNameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTreeForSecurity                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTreeForSecurity" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTreeForSecurityRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTreeForSecurityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTreeForSecurity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTreeForSecurity*            ns1__GetTreeForSecurity_,
    // output parameters:
    ns1__GetTreeForSecurityResponse*    ns1__GetTreeForSecurityResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTreeForSecurity(
    struct soap *soap,
    // input parameters:
    ns1__GetTreeForSecurity*            ns1__GetTreeForSecurity_,
    // output parameters:
    ns1__GetTreeForSecurityResponse*    ns1__GetTreeForSecurityResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTreeForSecurity SOAP
//gsoap ns1  service method-style:	GetTreeForSecurity document
//gsoap ns1  service method-encoding:	GetTreeForSecurity literal
//gsoap ns1  service method-input-action:	GetTreeForSecurity http://ws.abx/abxWsGest/GetTreeForSecurityRequest
//gsoap ns1  service method-output-action:	GetTreeForSecurity http://ws.abx/abxWsGest/GetTreeForSecurityResponse
int __ns1__GetTreeForSecurity(
    ns1__GetTreeForSecurity*            ns1__GetTreeForSecurity_,	///< Input parameter
    ns1__GetTreeForSecurityResponse*    ns1__GetTreeForSecurityResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTree                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTree" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTreeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTreeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTree(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTree*                       ns1__GetTree_,
    // output parameters:
    ns1__GetTreeResponse*               ns1__GetTreeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTree(
    struct soap *soap,
    // input parameters:
    ns1__GetTree*                       ns1__GetTree_,
    // output parameters:
    ns1__GetTreeResponse*               ns1__GetTreeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTree SOAP
//gsoap ns1  service method-style:	GetTree document
//gsoap ns1  service method-encoding:	GetTree literal
//gsoap ns1  service method-input-action:	GetTree http://ws.abx/abxWsGest/GetTreeRequest
//gsoap ns1  service method-output-action:	GetTree http://ws.abx/abxWsGest/GetTreeResponse
int __ns1__GetTree(
    ns1__GetTree*                       ns1__GetTree_,	///< Input parameter
    ns1__GetTreeResponse*               ns1__GetTreeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateRaccoglitore                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateRaccoglitore*            ns1__CreateRaccoglitore_,
    // output parameters:
    ns1__CreateRaccoglitoreResponse*    ns1__CreateRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__CreateRaccoglitore*            ns1__CreateRaccoglitore_,
    // output parameters:
    ns1__CreateRaccoglitoreResponse*    ns1__CreateRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateRaccoglitore SOAP
//gsoap ns1  service method-style:	CreateRaccoglitore document
//gsoap ns1  service method-encoding:	CreateRaccoglitore literal
//gsoap ns1  service method-input-action:	CreateRaccoglitore http://ws.abx/abxWsGest/CreateRaccoglitoreRequest
//gsoap ns1  service method-output-action:	CreateRaccoglitore http://ws.abx/abxWsGest/CreateRaccoglitoreResponse
int __ns1__CreateRaccoglitore(
    ns1__CreateRaccoglitore*            ns1__CreateRaccoglitore_,	///< Input parameter
    ns1__CreateRaccoglitoreResponse*    ns1__CreateRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteRaccoglitore                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteRaccoglitore*            ns1__DeleteRaccoglitore_,
    // output parameters:
    ns1__DeleteRaccoglitoreResponse*    ns1__DeleteRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__DeleteRaccoglitore*            ns1__DeleteRaccoglitore_,
    // output parameters:
    ns1__DeleteRaccoglitoreResponse*    ns1__DeleteRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteRaccoglitore SOAP
//gsoap ns1  service method-style:	DeleteRaccoglitore document
//gsoap ns1  service method-encoding:	DeleteRaccoglitore literal
//gsoap ns1  service method-input-action:	DeleteRaccoglitore http://ws.abx/abxWsGest/DeleteRaccoglitoreRequest
//gsoap ns1  service method-output-action:	DeleteRaccoglitore http://ws.abx/abxWsGest/DeleteRaccoglitoreResponse
int __ns1__DeleteRaccoglitore(
    ns1__DeleteRaccoglitore*            ns1__DeleteRaccoglitore_,	///< Input parameter
    ns1__DeleteRaccoglitoreResponse*    ns1__DeleteRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DestroyRaccoglitore                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DestroyRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DestroyRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DestroyRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DestroyRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DestroyRaccoglitore*           ns1__DestroyRaccoglitore_,
    // output parameters:
    ns1__DestroyRaccoglitoreResponse*   ns1__DestroyRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DestroyRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__DestroyRaccoglitore*           ns1__DestroyRaccoglitore_,
    // output parameters:
    ns1__DestroyRaccoglitoreResponse*   ns1__DestroyRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DestroyRaccoglitore SOAP
//gsoap ns1  service method-style:	DestroyRaccoglitore document
//gsoap ns1  service method-encoding:	DestroyRaccoglitore literal
//gsoap ns1  service method-input-action:	DestroyRaccoglitore http://ws.abx/abxWsGest/DestroyRaccoglitoreRequest
//gsoap ns1  service method-output-action:	DestroyRaccoglitore http://ws.abx/abxWsGest/DestroyRaccoglitoreResponse
int __ns1__DestroyRaccoglitore(
    ns1__DestroyRaccoglitore*           ns1__DestroyRaccoglitore_,	///< Input parameter
    ns1__DestroyRaccoglitoreResponse*   ns1__DestroyRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyRaccoglitore                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyRaccoglitore*            ns1__ModifyRaccoglitore_,
    // output parameters:
    ns1__ModifyRaccoglitoreResponse*    ns1__ModifyRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__ModifyRaccoglitore*            ns1__ModifyRaccoglitore_,
    // output parameters:
    ns1__ModifyRaccoglitoreResponse*    ns1__ModifyRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyRaccoglitore SOAP
//gsoap ns1  service method-style:	ModifyRaccoglitore document
//gsoap ns1  service method-encoding:	ModifyRaccoglitore literal
//gsoap ns1  service method-input-action:	ModifyRaccoglitore http://ws.abx/abxWsGest/ModifyRaccoglitoreRequest
//gsoap ns1  service method-output-action:	ModifyRaccoglitore http://ws.abx/abxWsGest/ModifyRaccoglitoreResponse
int __ns1__ModifyRaccoglitore(
    ns1__ModifyRaccoglitore*            ns1__ModifyRaccoglitore_,	///< Input parameter
    ns1__ModifyRaccoglitoreResponse*    ns1__ModifyRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canCreateRaccoglitore                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canCreateRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canCreateRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canCreateRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canCreateRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canCreateRaccoglitore*         ns1__canCreateRaccoglitore_,
    // output parameters:
    ns1__canCreateRaccoglitoreResponse* ns1__canCreateRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canCreateRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__canCreateRaccoglitore*         ns1__canCreateRaccoglitore_,
    // output parameters:
    ns1__canCreateRaccoglitoreResponse* ns1__canCreateRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canCreateRaccoglitore SOAP
//gsoap ns1  service method-style:	canCreateRaccoglitore document
//gsoap ns1  service method-encoding:	canCreateRaccoglitore literal
//gsoap ns1  service method-input-action:	canCreateRaccoglitore http://ws.abx/abxWsGest/canCreateRaccoglitoreRequest
//gsoap ns1  service method-output-action:	canCreateRaccoglitore http://ws.abx/abxWsGest/canCreateRaccoglitoreResponse
int __ns1__canCreateRaccoglitore(
    ns1__canCreateRaccoglitore*         ns1__canCreateRaccoglitore_,	///< Input parameter
    ns1__canCreateRaccoglitoreResponse* ns1__canCreateRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canDeleteRaccoglitore                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canDeleteRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canDeleteRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canDeleteRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canDeleteRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canDeleteRaccoglitore*         ns1__canDeleteRaccoglitore_,
    // output parameters:
    ns1__canDeleteRaccoglitoreResponse* ns1__canDeleteRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canDeleteRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__canDeleteRaccoglitore*         ns1__canDeleteRaccoglitore_,
    // output parameters:
    ns1__canDeleteRaccoglitoreResponse* ns1__canDeleteRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canDeleteRaccoglitore SOAP
//gsoap ns1  service method-style:	canDeleteRaccoglitore document
//gsoap ns1  service method-encoding:	canDeleteRaccoglitore literal
//gsoap ns1  service method-input-action:	canDeleteRaccoglitore http://ws.abx/abxWsGest/canDeleteRaccoglitoreRequest
//gsoap ns1  service method-output-action:	canDeleteRaccoglitore http://ws.abx/abxWsGest/canDeleteRaccoglitoreResponse
int __ns1__canDeleteRaccoglitore(
    ns1__canDeleteRaccoglitore*         ns1__canDeleteRaccoglitore_,	///< Input parameter
    ns1__canDeleteRaccoglitoreResponse* ns1__canDeleteRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canModifyRaccoglitore                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canModifyRaccoglitore" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canModifyRaccoglitoreRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canModifyRaccoglitoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canModifyRaccoglitore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canModifyRaccoglitore*         ns1__canModifyRaccoglitore_,
    // output parameters:
    ns1__canModifyRaccoglitoreResponse* ns1__canModifyRaccoglitoreResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canModifyRaccoglitore(
    struct soap *soap,
    // input parameters:
    ns1__canModifyRaccoglitore*         ns1__canModifyRaccoglitore_,
    // output parameters:
    ns1__canModifyRaccoglitoreResponse* ns1__canModifyRaccoglitoreResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canModifyRaccoglitore SOAP
//gsoap ns1  service method-style:	canModifyRaccoglitore document
//gsoap ns1  service method-encoding:	canModifyRaccoglitore literal
//gsoap ns1  service method-input-action:	canModifyRaccoglitore http://ws.abx/abxWsGest/canModifyRaccoglitoreRequest
//gsoap ns1  service method-output-action:	canModifyRaccoglitore http://ws.abx/abxWsGest/canModifyRaccoglitoreResponse
int __ns1__canModifyRaccoglitore(
    ns1__canModifyRaccoglitore*         ns1__canModifyRaccoglitore_,	///< Input parameter
    ns1__canModifyRaccoglitoreResponse* ns1__canModifyRaccoglitoreResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTemplateList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTemplateList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTemplateListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTemplateListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTemplateList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTemplateList*               ns1__GetTemplateList_,
    // output parameters:
    ns1__GetTemplateListResponse*       ns1__GetTemplateListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTemplateList(
    struct soap *soap,
    // input parameters:
    ns1__GetTemplateList*               ns1__GetTemplateList_,
    // output parameters:
    ns1__GetTemplateListResponse*       ns1__GetTemplateListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTemplateList SOAP
//gsoap ns1  service method-style:	GetTemplateList document
//gsoap ns1  service method-encoding:	GetTemplateList literal
//gsoap ns1  service method-input-action:	GetTemplateList http://ws.abx/abxWsGest/GetTemplateListRequest
//gsoap ns1  service method-output-action:	GetTemplateList http://ws.abx/abxWsGest/GetTemplateListResponse
int __ns1__GetTemplateList(
    ns1__GetTemplateList*               ns1__GetTemplateList_,	///< Input parameter
    ns1__GetTemplateListResponse*       ns1__GetTemplateListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetLinksToDocumentFiltered                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetLinksToDocumentFiltered" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetLinksToDocumentFilteredRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetLinksToDocumentFilteredResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetLinksToDocumentFiltered(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetLinksToDocumentFiltered*    ns1__GetLinksToDocumentFiltered_,
    // output parameters:
    ns1__GetLinksToDocumentFilteredResponse* ns1__GetLinksToDocumentFilteredResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetLinksToDocumentFiltered(
    struct soap *soap,
    // input parameters:
    ns1__GetLinksToDocumentFiltered*    ns1__GetLinksToDocumentFiltered_,
    // output parameters:
    ns1__GetLinksToDocumentFilteredResponse* ns1__GetLinksToDocumentFilteredResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetLinksToDocumentFiltered SOAP
//gsoap ns1  service method-style:	GetLinksToDocumentFiltered document
//gsoap ns1  service method-encoding:	GetLinksToDocumentFiltered literal
//gsoap ns1  service method-input-action:	GetLinksToDocumentFiltered http://ws.abx/abxWsGest/GetLinksToDocumentFilteredRequest
//gsoap ns1  service method-output-action:	GetLinksToDocumentFiltered http://ws.abx/abxWsGest/GetLinksToDocumentFilteredResponse
int __ns1__GetLinksToDocumentFiltered(
    ns1__GetLinksToDocumentFiltered*    ns1__GetLinksToDocumentFiltered_,	///< Input parameter
    ns1__GetLinksToDocumentFilteredResponse* ns1__GetLinksToDocumentFilteredResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckIn_USCOREattach                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckIn_USCOREattach" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckIn_attachRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckIn_attachResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckIn_USCOREattach(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckIn_USCOREattach*          ns1__CheckIn_USCOREattach_,
    // output parameters:
    ns1__CheckIn_USCOREattachResponse*  ns1__CheckIn_USCOREattachResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckIn_USCOREattach(
    struct soap *soap,
    // input parameters:
    ns1__CheckIn_USCOREattach*          ns1__CheckIn_USCOREattach_,
    // output parameters:
    ns1__CheckIn_USCOREattachResponse*  ns1__CheckIn_USCOREattachResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckIn_USCOREattach SOAP
//gsoap ns1  service method-style:	CheckIn_USCOREattach document
//gsoap ns1  service method-encoding:	CheckIn_USCOREattach literal
//gsoap ns1  service method-input-action:	CheckIn_USCOREattach http://ws.abx/abxWsGest/CheckIn_attachRequest
//gsoap ns1  service method-output-action:	CheckIn_USCOREattach http://ws.abx/abxWsGest/CheckIn_attachResponse
int __ns1__CheckIn_USCOREattach(
    ns1__CheckIn_USCOREattach*          ns1__CheckIn_USCOREattach_,	///< Input parameter
    ns1__CheckIn_USCOREattachResponse*  ns1__CheckIn_USCOREattachResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckIn_USCOREattachContainer                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckIn_USCOREattachContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckIn_attachContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckIn_attachContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckIn_USCOREattachContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckIn_USCOREattachContainer* ns1__CheckIn_USCOREattachContainer_,
    // output parameters:
    ns1__CheckIn_USCOREattachContainerResponse* ns1__CheckIn_USCOREattachContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckIn_USCOREattachContainer(
    struct soap *soap,
    // input parameters:
    ns1__CheckIn_USCOREattachContainer* ns1__CheckIn_USCOREattachContainer_,
    // output parameters:
    ns1__CheckIn_USCOREattachContainerResponse* ns1__CheckIn_USCOREattachContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckIn_USCOREattachContainer SOAP
//gsoap ns1  service method-style:	CheckIn_USCOREattachContainer document
//gsoap ns1  service method-encoding:	CheckIn_USCOREattachContainer literal
//gsoap ns1  service method-input-action:	CheckIn_USCOREattachContainer http://ws.abx/abxWsGest/CheckIn_attachContainerRequest
//gsoap ns1  service method-output-action:	CheckIn_USCOREattachContainer http://ws.abx/abxWsGest/CheckIn_attachContainerResponse
int __ns1__CheckIn_USCOREattachContainer(
    ns1__CheckIn_USCOREattachContainer* ns1__CheckIn_USCOREattachContainer_,	///< Input parameter
    ns1__CheckIn_USCOREattachContainerResponse* ns1__CheckIn_USCOREattachContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckIn_USCOREdocument                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckIn_USCOREdocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckIn_documentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckIn_documentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckIn_USCOREdocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckIn_USCOREdocument*        ns1__CheckIn_USCOREdocument_,
    // output parameters:
    ns1__CheckIn_USCOREdocumentResponse* ns1__CheckIn_USCOREdocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckIn_USCOREdocument(
    struct soap *soap,
    // input parameters:
    ns1__CheckIn_USCOREdocument*        ns1__CheckIn_USCOREdocument_,
    // output parameters:
    ns1__CheckIn_USCOREdocumentResponse* ns1__CheckIn_USCOREdocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckIn_USCOREdocument SOAP
//gsoap ns1  service method-style:	CheckIn_USCOREdocument document
//gsoap ns1  service method-encoding:	CheckIn_USCOREdocument literal
//gsoap ns1  service method-input-action:	CheckIn_USCOREdocument http://ws.abx/abxWsGest/CheckIn_documentRequest
//gsoap ns1  service method-output-action:	CheckIn_USCOREdocument http://ws.abx/abxWsGest/CheckIn_documentResponse
int __ns1__CheckIn_USCOREdocument(
    ns1__CheckIn_USCOREdocument*        ns1__CheckIn_USCOREdocument_,	///< Input parameter
    ns1__CheckIn_USCOREdocumentResponse* ns1__CheckIn_USCOREdocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckOut_USCOREattach                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckOut_USCOREattach" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckOut_attachRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckOut_attachResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckOut_USCOREattach(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckOut_USCOREattach*         ns1__CheckOut_USCOREattach_,
    // output parameters:
    ns1__CheckOut_USCOREattachResponse* ns1__CheckOut_USCOREattachResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckOut_USCOREattach(
    struct soap *soap,
    // input parameters:
    ns1__CheckOut_USCOREattach*         ns1__CheckOut_USCOREattach_,
    // output parameters:
    ns1__CheckOut_USCOREattachResponse* ns1__CheckOut_USCOREattachResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckOut_USCOREattach SOAP
//gsoap ns1  service method-style:	CheckOut_USCOREattach document
//gsoap ns1  service method-encoding:	CheckOut_USCOREattach literal
//gsoap ns1  service method-input-action:	CheckOut_USCOREattach http://ws.abx/abxWsGest/CheckOut_attachRequest
//gsoap ns1  service method-output-action:	CheckOut_USCOREattach http://ws.abx/abxWsGest/CheckOut_attachResponse
int __ns1__CheckOut_USCOREattach(
    ns1__CheckOut_USCOREattach*         ns1__CheckOut_USCOREattach_,	///< Input parameter
    ns1__CheckOut_USCOREattachResponse* ns1__CheckOut_USCOREattachResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckOut_USCOREattachContainer                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckOut_USCOREattachContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckOut_attachContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckOut_attachContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckOut_USCOREattachContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckOut_USCOREattachContainer* ns1__CheckOut_USCOREattachContainer_,
    // output parameters:
    ns1__CheckOut_USCOREattachContainerResponse* ns1__CheckOut_USCOREattachContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckOut_USCOREattachContainer(
    struct soap *soap,
    // input parameters:
    ns1__CheckOut_USCOREattachContainer* ns1__CheckOut_USCOREattachContainer_,
    // output parameters:
    ns1__CheckOut_USCOREattachContainerResponse* ns1__CheckOut_USCOREattachContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckOut_USCOREattachContainer SOAP
//gsoap ns1  service method-style:	CheckOut_USCOREattachContainer document
//gsoap ns1  service method-encoding:	CheckOut_USCOREattachContainer literal
//gsoap ns1  service method-input-action:	CheckOut_USCOREattachContainer http://ws.abx/abxWsGest/CheckOut_attachContainerRequest
//gsoap ns1  service method-output-action:	CheckOut_USCOREattachContainer http://ws.abx/abxWsGest/CheckOut_attachContainerResponse
int __ns1__CheckOut_USCOREattachContainer(
    ns1__CheckOut_USCOREattachContainer* ns1__CheckOut_USCOREattachContainer_,	///< Input parameter
    ns1__CheckOut_USCOREattachContainerResponse* ns1__CheckOut_USCOREattachContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckOut_USCOREdocument                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckOut_USCOREdocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CheckOut_documentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CheckOut_documentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckOut_USCOREdocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CheckOut_USCOREdocument*       ns1__CheckOut_USCOREdocument_,
    // output parameters:
    ns1__CheckOut_USCOREdocumentResponse* ns1__CheckOut_USCOREdocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckOut_USCOREdocument(
    struct soap *soap,
    // input parameters:
    ns1__CheckOut_USCOREdocument*       ns1__CheckOut_USCOREdocument_,
    // output parameters:
    ns1__CheckOut_USCOREdocumentResponse* ns1__CheckOut_USCOREdocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CheckOut_USCOREdocument SOAP
//gsoap ns1  service method-style:	CheckOut_USCOREdocument document
//gsoap ns1  service method-encoding:	CheckOut_USCOREdocument literal
//gsoap ns1  service method-input-action:	CheckOut_USCOREdocument http://ws.abx/abxWsGest/CheckOut_documentRequest
//gsoap ns1  service method-output-action:	CheckOut_USCOREdocument http://ws.abx/abxWsGest/CheckOut_documentResponse
int __ns1__CheckOut_USCOREdocument(
    ns1__CheckOut_USCOREdocument*       ns1__CheckOut_USCOREdocument_,	///< Input parameter
    ns1__CheckOut_USCOREdocumentResponse* ns1__CheckOut_USCOREdocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREinsert                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREinsert" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_insertRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_insertResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREinsert(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREinsert*            ns1__Combo_USCOREinsert_,
    // output parameters:
    ns1__Combo_USCOREinsertResponse*    ns1__Combo_USCOREinsertResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREinsert(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREinsert*            ns1__Combo_USCOREinsert_,
    // output parameters:
    ns1__Combo_USCOREinsertResponse*    ns1__Combo_USCOREinsertResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREinsert SOAP
//gsoap ns1  service method-style:	Combo_USCOREinsert document
//gsoap ns1  service method-encoding:	Combo_USCOREinsert literal
//gsoap ns1  service method-input-action:	Combo_USCOREinsert http://ws.abx/abxWsGest/Combo_insertRequest
//gsoap ns1  service method-output-action:	Combo_USCOREinsert http://ws.abx/abxWsGest/Combo_insertResponse
int __ns1__Combo_USCOREinsert(
    ns1__Combo_USCOREinsert*            ns1__Combo_USCOREinsert_,	///< Input parameter
    ns1__Combo_USCOREinsertResponse*    ns1__Combo_USCOREinsertResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREremoveItem                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREremoveItem" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_removeItemRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_removeItemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREremoveItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREremoveItem*        ns1__Combo_USCOREremoveItem_,
    // output parameters:
    ns1__Combo_USCOREremoveItemResponse* ns1__Combo_USCOREremoveItemResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREremoveItem(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREremoveItem*        ns1__Combo_USCOREremoveItem_,
    // output parameters:
    ns1__Combo_USCOREremoveItemResponse* ns1__Combo_USCOREremoveItemResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREremoveItem SOAP
//gsoap ns1  service method-style:	Combo_USCOREremoveItem document
//gsoap ns1  service method-encoding:	Combo_USCOREremoveItem literal
//gsoap ns1  service method-input-action:	Combo_USCOREremoveItem http://ws.abx/abxWsGest/Combo_removeItemRequest
//gsoap ns1  service method-output-action:	Combo_USCOREremoveItem http://ws.abx/abxWsGest/Combo_removeItemResponse
int __ns1__Combo_USCOREremoveItem(
    ns1__Combo_USCOREremoveItem*        ns1__Combo_USCOREremoveItem_,	///< Input parameter
    ns1__Combo_USCOREremoveItemResponse* ns1__Combo_USCOREremoveItemResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREremoveAll                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREremoveAll" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_removeAllRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_removeAllResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREremoveAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREremoveAll*         ns1__Combo_USCOREremoveAll_,
    // output parameters:
    ns1__Combo_USCOREremoveAllResponse* ns1__Combo_USCOREremoveAllResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREremoveAll(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREremoveAll*         ns1__Combo_USCOREremoveAll_,
    // output parameters:
    ns1__Combo_USCOREremoveAllResponse* ns1__Combo_USCOREremoveAllResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREremoveAll SOAP
//gsoap ns1  service method-style:	Combo_USCOREremoveAll document
//gsoap ns1  service method-encoding:	Combo_USCOREremoveAll literal
//gsoap ns1  service method-input-action:	Combo_USCOREremoveAll http://ws.abx/abxWsGest/Combo_removeAllRequest
//gsoap ns1  service method-output-action:	Combo_USCOREremoveAll http://ws.abx/abxWsGest/Combo_removeAllResponse
int __ns1__Combo_USCOREremoveAll(
    ns1__Combo_USCOREremoveAll*         ns1__Combo_USCOREremoveAll_,	///< Input parameter
    ns1__Combo_USCOREremoveAllResponse* ns1__Combo_USCOREremoveAllResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREgetAll                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREgetAll" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_getAllRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_getAllResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREgetAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREgetAll*            ns1__Combo_USCOREgetAll_,
    // output parameters:
    ns1__Combo_USCOREgetAllResponse*    ns1__Combo_USCOREgetAllResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREgetAll(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREgetAll*            ns1__Combo_USCOREgetAll_,
    // output parameters:
    ns1__Combo_USCOREgetAllResponse*    ns1__Combo_USCOREgetAllResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREgetAll SOAP
//gsoap ns1  service method-style:	Combo_USCOREgetAll document
//gsoap ns1  service method-encoding:	Combo_USCOREgetAll literal
//gsoap ns1  service method-input-action:	Combo_USCOREgetAll http://ws.abx/abxWsGest/Combo_getAllRequest
//gsoap ns1  service method-output-action:	Combo_USCOREgetAll http://ws.abx/abxWsGest/Combo_getAllResponse
int __ns1__Combo_USCOREgetAll(
    ns1__Combo_USCOREgetAll*            ns1__Combo_USCOREgetAll_,	///< Input parameter
    ns1__Combo_USCOREgetAllResponse*    ns1__Combo_USCOREgetAllResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREisCombo                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREisCombo" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_isComboRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_isComboResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREisCombo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREisCombo*           ns1__Combo_USCOREisCombo_,
    // output parameters:
    ns1__Combo_USCOREisComboResponse*   ns1__Combo_USCOREisComboResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREisCombo(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREisCombo*           ns1__Combo_USCOREisCombo_,
    // output parameters:
    ns1__Combo_USCOREisComboResponse*   ns1__Combo_USCOREisComboResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREisCombo SOAP
//gsoap ns1  service method-style:	Combo_USCOREisCombo document
//gsoap ns1  service method-encoding:	Combo_USCOREisCombo literal
//gsoap ns1  service method-input-action:	Combo_USCOREisCombo http://ws.abx/abxWsGest/Combo_isComboRequest
//gsoap ns1  service method-output-action:	Combo_USCOREisCombo http://ws.abx/abxWsGest/Combo_isComboResponse
int __ns1__Combo_USCOREisCombo(
    ns1__Combo_USCOREisCombo*           ns1__Combo_USCOREisCombo_,	///< Input parameter
    ns1__Combo_USCOREisComboResponse*   ns1__Combo_USCOREisComboResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Combo_USCOREmodify                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Combo_USCOREmodify" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Combo_modifyRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Combo_modifyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Combo_USCOREmodify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Combo_USCOREmodify*            ns1__Combo_USCOREmodify_,
    // output parameters:
    ns1__Combo_USCOREmodifyResponse*    ns1__Combo_USCOREmodifyResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Combo_USCOREmodify(
    struct soap *soap,
    // input parameters:
    ns1__Combo_USCOREmodify*            ns1__Combo_USCOREmodify_,
    // output parameters:
    ns1__Combo_USCOREmodifyResponse*    ns1__Combo_USCOREmodifyResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Combo_USCOREmodify SOAP
//gsoap ns1  service method-style:	Combo_USCOREmodify document
//gsoap ns1  service method-encoding:	Combo_USCOREmodify literal
//gsoap ns1  service method-input-action:	Combo_USCOREmodify http://ws.abx/abxWsGest/Combo_modifyRequest
//gsoap ns1  service method-output-action:	Combo_USCOREmodify http://ws.abx/abxWsGest/Combo_modifyResponse
int __ns1__Combo_USCOREmodify(
    ns1__Combo_USCOREmodify*            ns1__Combo_USCOREmodify_,	///< Input parameter
    ns1__Combo_USCOREmodifyResponse*    ns1__Combo_USCOREmodifyResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFile                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFile*                    ns1__DeleteFile_,
    // output parameters:
    ns1__DeleteFileResponse*            ns1__DeleteFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFile(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFile*                    ns1__DeleteFile_,
    // output parameters:
    ns1__DeleteFileResponse*            ns1__DeleteFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFile SOAP
//gsoap ns1  service method-style:	DeleteFile document
//gsoap ns1  service method-encoding:	DeleteFile literal
//gsoap ns1  service method-input-action:	DeleteFile http://ws.abx/abxWsGest/DeleteFileRequest
//gsoap ns1  service method-output-action:	DeleteFile http://ws.abx/abxWsGest/DeleteFileResponse
int __ns1__DeleteFile(
    ns1__DeleteFile*                    ns1__DeleteFile_,	///< Input parameter
    ns1__DeleteFileResponse*            ns1__DeleteFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFileContainer                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFileContainer*           ns1__DeleteFileContainer_,
    // output parameters:
    ns1__DeleteFileContainerResponse*   ns1__DeleteFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFileContainer*           ns1__DeleteFileContainer_,
    // output parameters:
    ns1__DeleteFileContainerResponse*   ns1__DeleteFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFileContainer SOAP
//gsoap ns1  service method-style:	DeleteFileContainer document
//gsoap ns1  service method-encoding:	DeleteFileContainer literal
//gsoap ns1  service method-input-action:	DeleteFileContainer http://ws.abx/abxWsGest/DeleteFileContainerRequest
//gsoap ns1  service method-output-action:	DeleteFileContainer http://ws.abx/abxWsGest/DeleteFileContainerResponse
int __ns1__DeleteFileContainer(
    ns1__DeleteFileContainer*           ns1__DeleteFileContainer_,	///< Input parameter
    ns1__DeleteFileContainerResponse*   ns1__DeleteFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanDeleteFile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanDeleteFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanDeleteFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanDeleteFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanDeleteFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanDeleteFile*                 ns1__CanDeleteFile_,
    // output parameters:
    ns1__CanDeleteFileResponse*         ns1__CanDeleteFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanDeleteFile(
    struct soap *soap,
    // input parameters:
    ns1__CanDeleteFile*                 ns1__CanDeleteFile_,
    // output parameters:
    ns1__CanDeleteFileResponse*         ns1__CanDeleteFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanDeleteFile SOAP
//gsoap ns1  service method-style:	CanDeleteFile document
//gsoap ns1  service method-encoding:	CanDeleteFile literal
//gsoap ns1  service method-input-action:	CanDeleteFile http://ws.abx/abxWsGest/CanDeleteFileRequest
//gsoap ns1  service method-output-action:	CanDeleteFile http://ws.abx/abxWsGest/CanDeleteFileResponse
int __ns1__CanDeleteFile(
    ns1__CanDeleteFile*                 ns1__CanDeleteFile_,	///< Input parameter
    ns1__CanDeleteFileResponse*         ns1__CanDeleteFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanDeleteFileContainer                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanDeleteFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanDeleteFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanDeleteFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanDeleteFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanDeleteFileContainer*        ns1__CanDeleteFileContainer_,
    // output parameters:
    ns1__CanDeleteFileContainerResponse* ns1__CanDeleteFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanDeleteFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__CanDeleteFileContainer*        ns1__CanDeleteFileContainer_,
    // output parameters:
    ns1__CanDeleteFileContainerResponse* ns1__CanDeleteFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanDeleteFileContainer SOAP
//gsoap ns1  service method-style:	CanDeleteFileContainer document
//gsoap ns1  service method-encoding:	CanDeleteFileContainer literal
//gsoap ns1  service method-input-action:	CanDeleteFileContainer http://ws.abx/abxWsGest/CanDeleteFileContainerRequest
//gsoap ns1  service method-output-action:	CanDeleteFileContainer http://ws.abx/abxWsGest/CanDeleteFileContainerResponse
int __ns1__CanDeleteFileContainer(
    ns1__CanDeleteFileContainer*        ns1__CanDeleteFileContainer_,	///< Input parameter
    ns1__CanDeleteFileContainerResponse* ns1__CanDeleteFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFileVersion                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFileVersion" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFileVersionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFileVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFileVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFileVersion*             ns1__DeleteFileVersion_,
    // output parameters:
    ns1__DeleteFileVersionResponse*     ns1__DeleteFileVersionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFileVersion(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFileVersion*             ns1__DeleteFileVersion_,
    // output parameters:
    ns1__DeleteFileVersionResponse*     ns1__DeleteFileVersionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFileVersion SOAP
//gsoap ns1  service method-style:	DeleteFileVersion document
//gsoap ns1  service method-encoding:	DeleteFileVersion literal
//gsoap ns1  service method-input-action:	DeleteFileVersion http://ws.abx/abxWsGest/DeleteFileVersionRequest
//gsoap ns1  service method-output-action:	DeleteFileVersion http://ws.abx/abxWsGest/DeleteFileVersionResponse
int __ns1__DeleteFileVersion(
    ns1__DeleteFileVersion*             ns1__DeleteFileVersion_,	///< Input parameter
    ns1__DeleteFileVersionResponse*     ns1__DeleteFileVersionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFileContainerVersion                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFileContainerVersion" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFileContainerVersionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFileContainerVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFileContainerVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFileContainerVersion*    ns1__DeleteFileContainerVersion_,
    // output parameters:
    ns1__DeleteFileContainerVersionResponse* ns1__DeleteFileContainerVersionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFileContainerVersion(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFileContainerVersion*    ns1__DeleteFileContainerVersion_,
    // output parameters:
    ns1__DeleteFileContainerVersionResponse* ns1__DeleteFileContainerVersionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFileContainerVersion SOAP
//gsoap ns1  service method-style:	DeleteFileContainerVersion document
//gsoap ns1  service method-encoding:	DeleteFileContainerVersion literal
//gsoap ns1  service method-input-action:	DeleteFileContainerVersion http://ws.abx/abxWsGest/DeleteFileContainerVersionRequest
//gsoap ns1  service method-output-action:	DeleteFileContainerVersion http://ws.abx/abxWsGest/DeleteFileContainerVersionResponse
int __ns1__DeleteFileContainerVersion(
    ns1__DeleteFileContainerVersion*    ns1__DeleteFileContainerVersion_,	///< Input parameter
    ns1__DeleteFileContainerVersionResponse* ns1__DeleteFileContainerVersionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertFile                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertFile*                    ns1__InsertFile_,
    // output parameters:
    ns1__InsertFileResponse*            ns1__InsertFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertFile(
    struct soap *soap,
    // input parameters:
    ns1__InsertFile*                    ns1__InsertFile_,
    // output parameters:
    ns1__InsertFileResponse*            ns1__InsertFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertFile SOAP
//gsoap ns1  service method-style:	InsertFile document
//gsoap ns1  service method-encoding:	InsertFile literal
//gsoap ns1  service method-input-action:	InsertFile http://ws.abx/abxWsGest/InsertFileRequest
//gsoap ns1  service method-output-action:	InsertFile http://ws.abx/abxWsGest/InsertFileResponse
int __ns1__InsertFile(
    ns1__InsertFile*                    ns1__InsertFile_,	///< Input parameter
    ns1__InsertFileResponse*            ns1__InsertFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertFileContainer                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertFileContainer*           ns1__InsertFileContainer_,
    // output parameters:
    ns1__InsertFileContainerResponse*   ns1__InsertFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__InsertFileContainer*           ns1__InsertFileContainer_,
    // output parameters:
    ns1__InsertFileContainerResponse*   ns1__InsertFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertFileContainer SOAP
//gsoap ns1  service method-style:	InsertFileContainer document
//gsoap ns1  service method-encoding:	InsertFileContainer literal
//gsoap ns1  service method-input-action:	InsertFileContainer http://ws.abx/abxWsGest/InsertFileContainerRequest
//gsoap ns1  service method-output-action:	InsertFileContainer http://ws.abx/abxWsGest/InsertFileContainerResponse
int __ns1__InsertFileContainer(
    ns1__InsertFileContainer*           ns1__InsertFileContainer_,	///< Input parameter
    ns1__InsertFileContainerResponse*   ns1__InsertFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertFile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertFile*                 ns1__CanInsertFile_,
    // output parameters:
    ns1__CanInsertFileResponse*         ns1__CanInsertFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertFile(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertFile*                 ns1__CanInsertFile_,
    // output parameters:
    ns1__CanInsertFileResponse*         ns1__CanInsertFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertFile SOAP
//gsoap ns1  service method-style:	CanInsertFile document
//gsoap ns1  service method-encoding:	CanInsertFile literal
//gsoap ns1  service method-input-action:	CanInsertFile http://ws.abx/abxWsGest/CanInsertFileRequest
//gsoap ns1  service method-output-action:	CanInsertFile http://ws.abx/abxWsGest/CanInsertFileResponse
int __ns1__CanInsertFile(
    ns1__CanInsertFile*                 ns1__CanInsertFile_,	///< Input parameter
    ns1__CanInsertFileResponse*         ns1__CanInsertFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertFileContainer                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertFileContainer*        ns1__CanInsertFileContainer_,
    // output parameters:
    ns1__CanInsertFileContainerResponse* ns1__CanInsertFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertFileContainer*        ns1__CanInsertFileContainer_,
    // output parameters:
    ns1__CanInsertFileContainerResponse* ns1__CanInsertFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertFileContainer SOAP
//gsoap ns1  service method-style:	CanInsertFileContainer document
//gsoap ns1  service method-encoding:	CanInsertFileContainer literal
//gsoap ns1  service method-input-action:	CanInsertFileContainer http://ws.abx/abxWsGest/CanInsertFileContainerRequest
//gsoap ns1  service method-output-action:	CanInsertFileContainer http://ws.abx/abxWsGest/CanInsertFileContainerResponse
int __ns1__CanInsertFileContainer(
    ns1__CanInsertFileContainer*        ns1__CanInsertFileContainer_,	///< Input parameter
    ns1__CanInsertFileContainerResponse* ns1__CanInsertFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanModifyFile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanModifyFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanModifyFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanModifyFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanModifyFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanModifyFile*                 ns1__CanModifyFile_,
    // output parameters:
    ns1__CanModifyFileResponse*         ns1__CanModifyFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanModifyFile(
    struct soap *soap,
    // input parameters:
    ns1__CanModifyFile*                 ns1__CanModifyFile_,
    // output parameters:
    ns1__CanModifyFileResponse*         ns1__CanModifyFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanModifyFile SOAP
//gsoap ns1  service method-style:	CanModifyFile document
//gsoap ns1  service method-encoding:	CanModifyFile literal
//gsoap ns1  service method-input-action:	CanModifyFile http://ws.abx/abxWsGest/CanModifyFileRequest
//gsoap ns1  service method-output-action:	CanModifyFile http://ws.abx/abxWsGest/CanModifyFileResponse
int __ns1__CanModifyFile(
    ns1__CanModifyFile*                 ns1__CanModifyFile_,	///< Input parameter
    ns1__CanModifyFileResponse*         ns1__CanModifyFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanShowFile                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanShowFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanShowFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanShowFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanShowFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanShowFile*                   ns1__CanShowFile_,
    // output parameters:
    ns1__CanShowFileResponse*           ns1__CanShowFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanShowFile(
    struct soap *soap,
    // input parameters:
    ns1__CanShowFile*                   ns1__CanShowFile_,
    // output parameters:
    ns1__CanShowFileResponse*           ns1__CanShowFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanShowFile SOAP
//gsoap ns1  service method-style:	CanShowFile document
//gsoap ns1  service method-encoding:	CanShowFile literal
//gsoap ns1  service method-input-action:	CanShowFile http://ws.abx/abxWsGest/CanShowFileRequest
//gsoap ns1  service method-output-action:	CanShowFile http://ws.abx/abxWsGest/CanShowFileResponse
int __ns1__CanShowFile(
    ns1__CanShowFile*                   ns1__CanShowFile_,	///< Input parameter
    ns1__CanShowFileResponse*           ns1__CanShowFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFileListByCode                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFileListByCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFileListByCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFileListByCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFileListByCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFileListByCode*             ns1__GetFileListByCode_,
    // output parameters:
    ns1__GetFileListByCodeResponse*     ns1__GetFileListByCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFileListByCode(
    struct soap *soap,
    // input parameters:
    ns1__GetFileListByCode*             ns1__GetFileListByCode_,
    // output parameters:
    ns1__GetFileListByCodeResponse*     ns1__GetFileListByCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFileListByCode SOAP
//gsoap ns1  service method-style:	GetFileListByCode document
//gsoap ns1  service method-encoding:	GetFileListByCode literal
//gsoap ns1  service method-input-action:	GetFileListByCode http://ws.abx/abxWsGest/GetFileListByCodeRequest
//gsoap ns1  service method-output-action:	GetFileListByCode http://ws.abx/abxWsGest/GetFileListByCodeResponse
int __ns1__GetFileListByCode(
    ns1__GetFileListByCode*             ns1__GetFileListByCode_,	///< Input parameter
    ns1__GetFileListByCodeResponse*     ns1__GetFileListByCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFileListByCodeForSecurity                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFileListByCodeForSecurity" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFileListByCodeForSecurityRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFileListByCodeForSecurityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFileListByCodeForSecurity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFileListByCodeForSecurity*  ns1__GetFileListByCodeForSecurity_,
    // output parameters:
    ns1__GetFileListByCodeForSecurityResponse* ns1__GetFileListByCodeForSecurityResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFileListByCodeForSecurity(
    struct soap *soap,
    // input parameters:
    ns1__GetFileListByCodeForSecurity*  ns1__GetFileListByCodeForSecurity_,
    // output parameters:
    ns1__GetFileListByCodeForSecurityResponse* ns1__GetFileListByCodeForSecurityResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFileListByCodeForSecurity SOAP
//gsoap ns1  service method-style:	GetFileListByCodeForSecurity document
//gsoap ns1  service method-encoding:	GetFileListByCodeForSecurity literal
//gsoap ns1  service method-input-action:	GetFileListByCodeForSecurity http://ws.abx/abxWsGest/GetFileListByCodeForSecurityRequest
//gsoap ns1  service method-output-action:	GetFileListByCodeForSecurity http://ws.abx/abxWsGest/GetFileListByCodeForSecurityResponse
int __ns1__GetFileListByCodeForSecurity(
    ns1__GetFileListByCodeForSecurity*  ns1__GetFileListByCodeForSecurity_,	///< Input parameter
    ns1__GetFileListByCodeForSecurityResponse* ns1__GetFileListByCodeForSecurityResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Query                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Query" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/QueryRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/QueryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Query(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Query*                         ns1__Query_,
    // output parameters:
    ns1__QueryResponse*                 ns1__QueryResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Query(
    struct soap *soap,
    // input parameters:
    ns1__Query*                         ns1__Query_,
    // output parameters:
    ns1__QueryResponse*                 ns1__QueryResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Query SOAP
//gsoap ns1  service method-style:	Query document
//gsoap ns1  service method-encoding:	Query literal
//gsoap ns1  service method-input-action:	Query http://ws.abx/abxWsGest/QueryRequest
//gsoap ns1  service method-output-action:	Query http://ws.abx/abxWsGest/QueryResponse
int __ns1__Query(
    ns1__Query*                         ns1__Query_,	///< Input parameter
    ns1__QueryResponse*                 ns1__QueryResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAdjacentArchiBox                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAdjacentArchiBox" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetAdjacentArchiBoxRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetAdjacentArchiBoxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAdjacentArchiBox(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetAdjacentArchiBox*           ns1__GetAdjacentArchiBox_,
    // output parameters:
    ns1__GetAdjacentArchiBoxResponse*   ns1__GetAdjacentArchiBoxResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAdjacentArchiBox(
    struct soap *soap,
    // input parameters:
    ns1__GetAdjacentArchiBox*           ns1__GetAdjacentArchiBox_,
    // output parameters:
    ns1__GetAdjacentArchiBoxResponse*   ns1__GetAdjacentArchiBoxResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAdjacentArchiBox SOAP
//gsoap ns1  service method-style:	GetAdjacentArchiBox document
//gsoap ns1  service method-encoding:	GetAdjacentArchiBox literal
//gsoap ns1  service method-input-action:	GetAdjacentArchiBox http://ws.abx/abxWsGest/GetAdjacentArchiBoxRequest
//gsoap ns1  service method-output-action:	GetAdjacentArchiBox http://ws.abx/abxWsGest/GetAdjacentArchiBoxResponse
int __ns1__GetAdjacentArchiBox(
    ns1__GetAdjacentArchiBox*           ns1__GetAdjacentArchiBox_,	///< Input parameter
    ns1__GetAdjacentArchiBoxResponse*   ns1__GetAdjacentArchiBoxResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInstanceReplication                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInstanceReplication" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetInstanceReplicationRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetInstanceReplicationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInstanceReplication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetInstanceReplication*        ns1__GetInstanceReplication_,
    // output parameters:
    ns1__GetInstanceReplicationResponse* ns1__GetInstanceReplicationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInstanceReplication(
    struct soap *soap,
    // input parameters:
    ns1__GetInstanceReplication*        ns1__GetInstanceReplication_,
    // output parameters:
    ns1__GetInstanceReplicationResponse* ns1__GetInstanceReplicationResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInstanceReplication SOAP
//gsoap ns1  service method-style:	GetInstanceReplication document
//gsoap ns1  service method-encoding:	GetInstanceReplication literal
//gsoap ns1  service method-input-action:	GetInstanceReplication http://ws.abx/abxWsGest/GetInstanceReplicationRequest
//gsoap ns1  service method-output-action:	GetInstanceReplication http://ws.abx/abxWsGest/GetInstanceReplicationResponse
int __ns1__GetInstanceReplication(
    ns1__GetInstanceReplication*        ns1__GetInstanceReplication_,	///< Input parameter
    ns1__GetInstanceReplicationResponse* ns1__GetInstanceReplicationResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Login                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Login" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/LoginRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/LoginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Login*                         ns1__Login_,
    // output parameters:
    ns1__LoginResponse*                 ns1__LoginResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Login(
    struct soap *soap,
    // input parameters:
    ns1__Login*                         ns1__Login_,
    // output parameters:
    ns1__LoginResponse*                 ns1__LoginResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Login SOAP
//gsoap ns1  service method-style:	Login document
//gsoap ns1  service method-encoding:	Login literal
//gsoap ns1  service method-input-action:	Login http://ws.abx/abxWsGest/LoginRequest
//gsoap ns1  service method-output-action:	Login http://ws.abx/abxWsGest/LoginResponse
int __ns1__Login(
    ns1__Login*                         ns1__Login_,	///< Input parameter
    ns1__LoginResponse*                 ns1__LoginResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Logout                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Logout" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/LogoutRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/LogoutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Logout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Logout*                        ns1__Logout_,
    // output parameters:
    ns1__LogoutResponse*                ns1__LogoutResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Logout(
    struct soap *soap,
    // input parameters:
    ns1__Logout*                        ns1__Logout_,
    // output parameters:
    ns1__LogoutResponse*                ns1__LogoutResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Logout SOAP
//gsoap ns1  service method-style:	Logout document
//gsoap ns1  service method-encoding:	Logout literal
//gsoap ns1  service method-input-action:	Logout http://ws.abx/abxWsGest/LogoutRequest
//gsoap ns1  service method-output-action:	Logout http://ws.abx/abxWsGest/LogoutResponse
int __ns1__Logout(
    ns1__Logout*                        ns1__Logout_,	///< Input parameter
    ns1__LogoutResponse*                ns1__LogoutResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanModifyLinkContainerToContainer                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanModifyLinkContainerToContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanModifyLinkContainerToContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanModifyLinkContainerToContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanModifyLinkContainerToContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanModifyLinkContainerToContainer* ns1__CanModifyLinkContainerToContainer_,
    // output parameters:
    ns1__CanModifyLinkContainerToContainerResponse* ns1__CanModifyLinkContainerToContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanModifyLinkContainerToContainer(
    struct soap *soap,
    // input parameters:
    ns1__CanModifyLinkContainerToContainer* ns1__CanModifyLinkContainerToContainer_,
    // output parameters:
    ns1__CanModifyLinkContainerToContainerResponse* ns1__CanModifyLinkContainerToContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanModifyLinkContainerToContainer SOAP
//gsoap ns1  service method-style:	CanModifyLinkContainerToContainer document
//gsoap ns1  service method-encoding:	CanModifyLinkContainerToContainer literal
//gsoap ns1  service method-input-action:	CanModifyLinkContainerToContainer http://ws.abx/abxWsGest/CanModifyLinkContainerToContainerRequest
//gsoap ns1  service method-output-action:	CanModifyLinkContainerToContainer http://ws.abx/abxWsGest/CanModifyLinkContainerToContainerResponse
int __ns1__CanModifyLinkContainerToContainer(
    ns1__CanModifyLinkContainerToContainer* ns1__CanModifyLinkContainerToContainer_,	///< Input parameter
    ns1__CanModifyLinkContainerToContainerResponse* ns1__CanModifyLinkContainerToContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyLinkContainerToDocument                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyLinkContainerToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyLinkContainerToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyLinkContainerToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyLinkContainerToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyLinkContainerToDocument* ns1__ModifyLinkContainerToDocument_,
    // output parameters:
    ns1__ModifyLinkContainerToDocumentResponse* ns1__ModifyLinkContainerToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyLinkContainerToDocument(
    struct soap *soap,
    // input parameters:
    ns1__ModifyLinkContainerToDocument* ns1__ModifyLinkContainerToDocument_,
    // output parameters:
    ns1__ModifyLinkContainerToDocumentResponse* ns1__ModifyLinkContainerToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyLinkContainerToDocument SOAP
//gsoap ns1  service method-style:	ModifyLinkContainerToDocument document
//gsoap ns1  service method-encoding:	ModifyLinkContainerToDocument literal
//gsoap ns1  service method-input-action:	ModifyLinkContainerToDocument http://ws.abx/abxWsGest/ModifyLinkContainerToDocumentRequest
//gsoap ns1  service method-output-action:	ModifyLinkContainerToDocument http://ws.abx/abxWsGest/ModifyLinkContainerToDocumentResponse
int __ns1__ModifyLinkContainerToDocument(
    ns1__ModifyLinkContainerToDocument* ns1__ModifyLinkContainerToDocument_,	///< Input parameter
    ns1__ModifyLinkContainerToDocumentResponse* ns1__ModifyLinkContainerToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanModifyLinkContainerToDocument                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanModifyLinkContainerToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanModifyLinkContainerToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanModifyLinkContainerToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanModifyLinkContainerToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanModifyLinkContainerToDocument* ns1__CanModifyLinkContainerToDocument_,
    // output parameters:
    ns1__CanModifyLinkContainerToDocumentResponse* ns1__CanModifyLinkContainerToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanModifyLinkContainerToDocument(
    struct soap *soap,
    // input parameters:
    ns1__CanModifyLinkContainerToDocument* ns1__CanModifyLinkContainerToDocument_,
    // output parameters:
    ns1__CanModifyLinkContainerToDocumentResponse* ns1__CanModifyLinkContainerToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanModifyLinkContainerToDocument SOAP
//gsoap ns1  service method-style:	CanModifyLinkContainerToDocument document
//gsoap ns1  service method-encoding:	CanModifyLinkContainerToDocument literal
//gsoap ns1  service method-input-action:	CanModifyLinkContainerToDocument http://ws.abx/abxWsGest/CanModifyLinkContainerToDocumentRequest
//gsoap ns1  service method-output-action:	CanModifyLinkContainerToDocument http://ws.abx/abxWsGest/CanModifyLinkContainerToDocumentResponse
int __ns1__CanModifyLinkContainerToDocument(
    ns1__CanModifyLinkContainerToDocument* ns1__CanModifyLinkContainerToDocument_,	///< Input parameter
    ns1__CanModifyLinkContainerToDocumentResponse* ns1__CanModifyLinkContainerToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteLink                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteLink" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteLinkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteLinkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteLink(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteLink*                    ns1__DeleteLink_,
    // output parameters:
    ns1__DeleteLinkResponse*            ns1__DeleteLinkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteLink(
    struct soap *soap,
    // input parameters:
    ns1__DeleteLink*                    ns1__DeleteLink_,
    // output parameters:
    ns1__DeleteLinkResponse*            ns1__DeleteLinkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteLink SOAP
//gsoap ns1  service method-style:	DeleteLink document
//gsoap ns1  service method-encoding:	DeleteLink literal
//gsoap ns1  service method-input-action:	DeleteLink http://ws.abx/abxWsGest/DeleteLinkRequest
//gsoap ns1  service method-output-action:	DeleteLink http://ws.abx/abxWsGest/DeleteLinkResponse
int __ns1__DeleteLink(
    ns1__DeleteLink*                    ns1__DeleteLink_,	///< Input parameter
    ns1__DeleteLinkResponse*            ns1__DeleteLinkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanDeleteLinkFromContainer                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanDeleteLinkFromContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanDeleteLinkFromContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanDeleteLinkFromContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanDeleteLinkFromContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanDeleteLinkFromContainer*    ns1__CanDeleteLinkFromContainer_,
    // output parameters:
    ns1__CanDeleteLinkFromContainerResponse* ns1__CanDeleteLinkFromContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanDeleteLinkFromContainer(
    struct soap *soap,
    // input parameters:
    ns1__CanDeleteLinkFromContainer*    ns1__CanDeleteLinkFromContainer_,
    // output parameters:
    ns1__CanDeleteLinkFromContainerResponse* ns1__CanDeleteLinkFromContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanDeleteLinkFromContainer SOAP
//gsoap ns1  service method-style:	CanDeleteLinkFromContainer document
//gsoap ns1  service method-encoding:	CanDeleteLinkFromContainer literal
//gsoap ns1  service method-input-action:	CanDeleteLinkFromContainer http://ws.abx/abxWsGest/CanDeleteLinkFromContainerRequest
//gsoap ns1  service method-output-action:	CanDeleteLinkFromContainer http://ws.abx/abxWsGest/CanDeleteLinkFromContainerResponse
int __ns1__CanDeleteLinkFromContainer(
    ns1__CanDeleteLinkFromContainer*    ns1__CanDeleteLinkFromContainer_,	///< Input parameter
    ns1__CanDeleteLinkFromContainerResponse* ns1__CanDeleteLinkFromContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDocumentLinks                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDocumentLinks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDocumentLinksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDocumentLinksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDocumentLinks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDocumentLinks*              ns1__GetDocumentLinks_,
    // output parameters:
    ns1__GetDocumentLinksResponse*      ns1__GetDocumentLinksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDocumentLinks(
    struct soap *soap,
    // input parameters:
    ns1__GetDocumentLinks*              ns1__GetDocumentLinks_,
    // output parameters:
    ns1__GetDocumentLinksResponse*      ns1__GetDocumentLinksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDocumentLinks SOAP
//gsoap ns1  service method-style:	GetDocumentLinks document
//gsoap ns1  service method-encoding:	GetDocumentLinks literal
//gsoap ns1  service method-input-action:	GetDocumentLinks http://ws.abx/abxWsGest/GetDocumentLinksRequest
//gsoap ns1  service method-output-action:	GetDocumentLinks http://ws.abx/abxWsGest/GetDocumentLinksResponse
int __ns1__GetDocumentLinks(
    ns1__GetDocumentLinks*              ns1__GetDocumentLinks_,	///< Input parameter
    ns1__GetDocumentLinksResponse*      ns1__GetDocumentLinksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetCountLinksToDocument                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetCountLinksToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetCountLinksToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetCountLinksToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetCountLinksToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetCountLinksToDocument*       ns1__GetCountLinksToDocument_,
    // output parameters:
    ns1__GetCountLinksToDocumentResponse* ns1__GetCountLinksToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetCountLinksToDocument(
    struct soap *soap,
    // input parameters:
    ns1__GetCountLinksToDocument*       ns1__GetCountLinksToDocument_,
    // output parameters:
    ns1__GetCountLinksToDocumentResponse* ns1__GetCountLinksToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetCountLinksToDocument SOAP
//gsoap ns1  service method-style:	GetCountLinksToDocument document
//gsoap ns1  service method-encoding:	GetCountLinksToDocument literal
//gsoap ns1  service method-input-action:	GetCountLinksToDocument http://ws.abx/abxWsGest/GetCountLinksToDocumentRequest
//gsoap ns1  service method-output-action:	GetCountLinksToDocument http://ws.abx/abxWsGest/GetCountLinksToDocumentResponse
int __ns1__GetCountLinksToDocument(
    ns1__GetCountLinksToDocument*       ns1__GetCountLinksToDocument_,	///< Input parameter
    ns1__GetCountLinksToDocumentResponse* ns1__GetCountLinksToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetLinksToDocument                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetLinksToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetLinksToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetLinksToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetLinksToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetLinksToDocument*            ns1__GetLinksToDocument_,
    // output parameters:
    ns1__GetLinksToDocumentResponse*    ns1__GetLinksToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetLinksToDocument(
    struct soap *soap,
    // input parameters:
    ns1__GetLinksToDocument*            ns1__GetLinksToDocument_,
    // output parameters:
    ns1__GetLinksToDocumentResponse*    ns1__GetLinksToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetLinksToDocument SOAP
//gsoap ns1  service method-style:	GetLinksToDocument document
//gsoap ns1  service method-encoding:	GetLinksToDocument literal
//gsoap ns1  service method-input-action:	GetLinksToDocument http://ws.abx/abxWsGest/GetLinksToDocumentRequest
//gsoap ns1  service method-output-action:	GetLinksToDocument http://ws.abx/abxWsGest/GetLinksToDocumentResponse
int __ns1__GetLinksToDocument(
    ns1__GetLinksToDocument*            ns1__GetLinksToDocument_,	///< Input parameter
    ns1__GetLinksToDocumentResponse*    ns1__GetLinksToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInstanceNameFromLinks                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInstanceNameFromLinks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetInstanceNameFromLinksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetInstanceNameFromLinksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInstanceNameFromLinks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetInstanceNameFromLinks*      ns1__GetInstanceNameFromLinks_,
    // output parameters:
    ns1__GetInstanceNameFromLinksResponse* ns1__GetInstanceNameFromLinksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInstanceNameFromLinks(
    struct soap *soap,
    // input parameters:
    ns1__GetInstanceNameFromLinks*      ns1__GetInstanceNameFromLinks_,
    // output parameters:
    ns1__GetInstanceNameFromLinksResponse* ns1__GetInstanceNameFromLinksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInstanceNameFromLinks SOAP
//gsoap ns1  service method-style:	GetInstanceNameFromLinks document
//gsoap ns1  service method-encoding:	GetInstanceNameFromLinks literal
//gsoap ns1  service method-input-action:	GetInstanceNameFromLinks http://ws.abx/abxWsGest/GetInstanceNameFromLinksRequest
//gsoap ns1  service method-output-action:	GetInstanceNameFromLinks http://ws.abx/abxWsGest/GetInstanceNameFromLinksResponse
int __ns1__GetInstanceNameFromLinks(
    ns1__GetInstanceNameFromLinks*      ns1__GetInstanceNameFromLinks_,	///< Input parameter
    ns1__GetInstanceNameFromLinksResponse* ns1__GetInstanceNameFromLinksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetContainerLinks                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetContainerLinks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetContainerLinksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetContainerLinksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetContainerLinks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetContainerLinks*             ns1__GetContainerLinks_,
    // output parameters:
    ns1__GetContainerLinksResponse*     ns1__GetContainerLinksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetContainerLinks(
    struct soap *soap,
    // input parameters:
    ns1__GetContainerLinks*             ns1__GetContainerLinks_,
    // output parameters:
    ns1__GetContainerLinksResponse*     ns1__GetContainerLinksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetContainerLinks SOAP
//gsoap ns1  service method-style:	GetContainerLinks document
//gsoap ns1  service method-encoding:	GetContainerLinks literal
//gsoap ns1  service method-input-action:	GetContainerLinks http://ws.abx/abxWsGest/GetContainerLinksRequest
//gsoap ns1  service method-output-action:	GetContainerLinks http://ws.abx/abxWsGest/GetContainerLinksResponse
int __ns1__GetContainerLinks(
    ns1__GetContainerLinks*             ns1__GetContainerLinks_,	///< Input parameter
    ns1__GetContainerLinksResponse*     ns1__GetContainerLinksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RegenerateDynOrg                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RegenerateDynOrg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/RegenerateDynOrgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/RegenerateDynOrgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RegenerateDynOrg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__RegenerateDynOrg*              ns1__RegenerateDynOrg_,
    // output parameters:
    ns1__RegenerateDynOrgResponse*      ns1__RegenerateDynOrgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RegenerateDynOrg(
    struct soap *soap,
    // input parameters:
    ns1__RegenerateDynOrg*              ns1__RegenerateDynOrg_,
    // output parameters:
    ns1__RegenerateDynOrgResponse*      ns1__RegenerateDynOrgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RegenerateDynOrg SOAP
//gsoap ns1  service method-style:	RegenerateDynOrg document
//gsoap ns1  service method-encoding:	RegenerateDynOrg literal
//gsoap ns1  service method-input-action:	RegenerateDynOrg http://ws.abx/abxWsGest/RegenerateDynOrgRequest
//gsoap ns1  service method-output-action:	RegenerateDynOrg http://ws.abx/abxWsGest/RegenerateDynOrgResponse
int __ns1__RegenerateDynOrg(
    ns1__RegenerateDynOrg*              ns1__RegenerateDynOrg_,	///< Input parameter
    ns1__RegenerateDynOrgResponse*      ns1__RegenerateDynOrgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetClasseDocumentale                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetClasseDocumentale" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetClasseDocumentaleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetClasseDocumentaleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetClasseDocumentale(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetClasseDocumentale*          ns1__GetClasseDocumentale_,
    // output parameters:
    ns1__GetClasseDocumentaleResponse*  ns1__GetClasseDocumentaleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetClasseDocumentale(
    struct soap *soap,
    // input parameters:
    ns1__GetClasseDocumentale*          ns1__GetClasseDocumentale_,
    // output parameters:
    ns1__GetClasseDocumentaleResponse*  ns1__GetClasseDocumentaleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetClasseDocumentale SOAP
//gsoap ns1  service method-style:	GetClasseDocumentale document
//gsoap ns1  service method-encoding:	GetClasseDocumentale literal
//gsoap ns1  service method-input-action:	GetClasseDocumentale http://ws.abx/abxWsGest/GetClasseDocumentaleRequest
//gsoap ns1  service method-output-action:	GetClasseDocumentale http://ws.abx/abxWsGest/GetClasseDocumentaleResponse
int __ns1__GetClasseDocumentale(
    ns1__GetClasseDocumentale*          ns1__GetClasseDocumentale_,	///< Input parameter
    ns1__GetClasseDocumentaleResponse*  ns1__GetClasseDocumentaleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteClasseDocumentale                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteClasseDocumentale" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteClasseDocumentaleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteClasseDocumentaleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteClasseDocumentale(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteClasseDocumentale*       ns1__DeleteClasseDocumentale_,
    // output parameters:
    ns1__DeleteClasseDocumentaleResponse* ns1__DeleteClasseDocumentaleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteClasseDocumentale(
    struct soap *soap,
    // input parameters:
    ns1__DeleteClasseDocumentale*       ns1__DeleteClasseDocumentale_,
    // output parameters:
    ns1__DeleteClasseDocumentaleResponse* ns1__DeleteClasseDocumentaleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteClasseDocumentale SOAP
//gsoap ns1  service method-style:	DeleteClasseDocumentale document
//gsoap ns1  service method-encoding:	DeleteClasseDocumentale literal
//gsoap ns1  service method-input-action:	DeleteClasseDocumentale http://ws.abx/abxWsGest/DeleteClasseDocumentaleRequest
//gsoap ns1  service method-output-action:	DeleteClasseDocumentale http://ws.abx/abxWsGest/DeleteClasseDocumentaleResponse
int __ns1__DeleteClasseDocumentale(
    ns1__DeleteClasseDocumentale*       ns1__DeleteClasseDocumentale_,	///< Input parameter
    ns1__DeleteClasseDocumentaleResponse* ns1__DeleteClasseDocumentaleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertClasseDocumentale                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertClasseDocumentale" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertClasseDocumentaleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertClasseDocumentaleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertClasseDocumentale(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertClasseDocumentale*       ns1__InsertClasseDocumentale_,
    // output parameters:
    ns1__InsertClasseDocumentaleResponse* ns1__InsertClasseDocumentaleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertClasseDocumentale(
    struct soap *soap,
    // input parameters:
    ns1__InsertClasseDocumentale*       ns1__InsertClasseDocumentale_,
    // output parameters:
    ns1__InsertClasseDocumentaleResponse* ns1__InsertClasseDocumentaleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertClasseDocumentale SOAP
//gsoap ns1  service method-style:	InsertClasseDocumentale document
//gsoap ns1  service method-encoding:	InsertClasseDocumentale literal
//gsoap ns1  service method-input-action:	InsertClasseDocumentale http://ws.abx/abxWsGest/InsertClasseDocumentaleRequest
//gsoap ns1  service method-output-action:	InsertClasseDocumentale http://ws.abx/abxWsGest/InsertClasseDocumentaleResponse
int __ns1__InsertClasseDocumentale(
    ns1__InsertClasseDocumentale*       ns1__InsertClasseDocumentale_,	///< Input parameter
    ns1__InsertClasseDocumentaleResponse* ns1__InsertClasseDocumentaleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertDataWA                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertDataWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertDataWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertDataWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertDataWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertDataWA*                  ns1__InsertDataWA_,
    // output parameters:
    ns1__InsertDataWAResponse*          ns1__InsertDataWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertDataWA(
    struct soap *soap,
    // input parameters:
    ns1__InsertDataWA*                  ns1__InsertDataWA_,
    // output parameters:
    ns1__InsertDataWAResponse*          ns1__InsertDataWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertDataWA SOAP
//gsoap ns1  service method-style:	InsertDataWA document
//gsoap ns1  service method-encoding:	InsertDataWA literal
//gsoap ns1  service method-input-action:	InsertDataWA http://ws.abx/abxWsGest/InsertDataWARequest
//gsoap ns1  service method-output-action:	InsertDataWA http://ws.abx/abxWsGest/InsertDataWAResponse
int __ns1__InsertDataWA(
    ns1__InsertDataWA*                  ns1__InsertDataWA_,	///< Input parameter
    ns1__InsertDataWAResponse*          ns1__InsertDataWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Ping                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Ping" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/PingRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/PingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Ping(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Ping*                          ns1__Ping_,
    // output parameters:
    ns1__PingResponse*                  ns1__PingResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Ping(
    struct soap *soap,
    // input parameters:
    ns1__Ping*                          ns1__Ping_,
    // output parameters:
    ns1__PingResponse*                  ns1__PingResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Ping SOAP
//gsoap ns1  service method-style:	Ping document
//gsoap ns1  service method-encoding:	Ping literal
//gsoap ns1  service method-input-action:	Ping http://ws.abx/abxWsGest/PingRequest
//gsoap ns1  service method-output-action:	Ping http://ws.abx/abxWsGest/PingResponse
int __ns1__Ping(
    ns1__Ping*                          ns1__Ping_,	///< Input parameter
    ns1__PingResponse*                  ns1__PingResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetInstanceReplication                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetInstanceReplication" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetInstanceReplicationRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetInstanceReplicationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetInstanceReplication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetInstanceReplication*        ns1__SetInstanceReplication_,
    // output parameters:
    ns1__SetInstanceReplicationResponse* ns1__SetInstanceReplicationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetInstanceReplication(
    struct soap *soap,
    // input parameters:
    ns1__SetInstanceReplication*        ns1__SetInstanceReplication_,
    // output parameters:
    ns1__SetInstanceReplicationResponse* ns1__SetInstanceReplicationResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetInstanceReplication SOAP
//gsoap ns1  service method-style:	SetInstanceReplication document
//gsoap ns1  service method-encoding:	SetInstanceReplication literal
//gsoap ns1  service method-input-action:	SetInstanceReplication http://ws.abx/abxWsGest/SetInstanceReplicationRequest
//gsoap ns1  service method-output-action:	SetInstanceReplication http://ws.abx/abxWsGest/SetInstanceReplicationResponse
int __ns1__SetInstanceReplication(
    ns1__SetInstanceReplication*        ns1__SetInstanceReplication_,	///< Input parameter
    ns1__SetInstanceReplicationResponse* ns1__SetInstanceReplicationResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyContainer                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyContainer*               ns1__ModifyContainer_,
    // output parameters:
    ns1__ModifyContainerResponse*       ns1__ModifyContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyContainer(
    struct soap *soap,
    // input parameters:
    ns1__ModifyContainer*               ns1__ModifyContainer_,
    // output parameters:
    ns1__ModifyContainerResponse*       ns1__ModifyContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyContainer SOAP
//gsoap ns1  service method-style:	ModifyContainer document
//gsoap ns1  service method-encoding:	ModifyContainer literal
//gsoap ns1  service method-input-action:	ModifyContainer http://ws.abx/abxWsGest/ModifyContainerRequest
//gsoap ns1  service method-output-action:	ModifyContainer http://ws.abx/abxWsGest/ModifyContainerResponse
int __ns1__ModifyContainer(
    ns1__ModifyContainer*               ns1__ModifyContainer_,	///< Input parameter
    ns1__ModifyContainerResponse*       ns1__ModifyContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyTemplate                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyTemplate*                ns1__ModifyTemplate_,
    // output parameters:
    ns1__ModifyTemplateResponse*        ns1__ModifyTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyTemplate(
    struct soap *soap,
    // input parameters:
    ns1__ModifyTemplate*                ns1__ModifyTemplate_,
    // output parameters:
    ns1__ModifyTemplateResponse*        ns1__ModifyTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyTemplate SOAP
//gsoap ns1  service method-style:	ModifyTemplate document
//gsoap ns1  service method-encoding:	ModifyTemplate literal
//gsoap ns1  service method-input-action:	ModifyTemplate http://ws.abx/abxWsGest/ModifyTemplateRequest
//gsoap ns1  service method-output-action:	ModifyTemplate http://ws.abx/abxWsGest/ModifyTemplateResponse
int __ns1__ModifyTemplate(
    ns1__ModifyTemplate*                ns1__ModifyTemplate_,	///< Input parameter
    ns1__ModifyTemplateResponse*        ns1__ModifyTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteTemplate                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteTemplate*                ns1__DeleteTemplate_,
    // output parameters:
    ns1__DeleteTemplateResponse*        ns1__DeleteTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteTemplate(
    struct soap *soap,
    // input parameters:
    ns1__DeleteTemplate*                ns1__DeleteTemplate_,
    // output parameters:
    ns1__DeleteTemplateResponse*        ns1__DeleteTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteTemplate SOAP
//gsoap ns1  service method-style:	DeleteTemplate document
//gsoap ns1  service method-encoding:	DeleteTemplate literal
//gsoap ns1  service method-input-action:	DeleteTemplate http://ws.abx/abxWsGest/DeleteTemplateRequest
//gsoap ns1  service method-output-action:	DeleteTemplate http://ws.abx/abxWsGest/DeleteTemplateResponse
int __ns1__DeleteTemplate(
    ns1__DeleteTemplate*                ns1__DeleteTemplate_,	///< Input parameter
    ns1__DeleteTemplateResponse*        ns1__DeleteTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteContainer                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteContainer*               ns1__DeleteContainer_,
    // output parameters:
    ns1__DeleteContainerResponse*       ns1__DeleteContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteContainer(
    struct soap *soap,
    // input parameters:
    ns1__DeleteContainer*               ns1__DeleteContainer_,
    // output parameters:
    ns1__DeleteContainerResponse*       ns1__DeleteContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteContainer SOAP
//gsoap ns1  service method-style:	DeleteContainer document
//gsoap ns1  service method-encoding:	DeleteContainer literal
//gsoap ns1  service method-input-action:	DeleteContainer http://ws.abx/abxWsGest/DeleteContainerRequest
//gsoap ns1  service method-output-action:	DeleteContainer http://ws.abx/abxWsGest/DeleteContainerResponse
int __ns1__DeleteContainer(
    ns1__DeleteContainer*               ns1__DeleteContainer_,	///< Input parameter
    ns1__DeleteContainerResponse*       ns1__DeleteContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canModifyContainer                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canModifyContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canModifyContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canModifyContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canModifyContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canModifyContainer*            ns1__canModifyContainer_,
    // output parameters:
    ns1__canModifyContainerResponse*    ns1__canModifyContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canModifyContainer(
    struct soap *soap,
    // input parameters:
    ns1__canModifyContainer*            ns1__canModifyContainer_,
    // output parameters:
    ns1__canModifyContainerResponse*    ns1__canModifyContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canModifyContainer SOAP
//gsoap ns1  service method-style:	canModifyContainer document
//gsoap ns1  service method-encoding:	canModifyContainer literal
//gsoap ns1  service method-input-action:	canModifyContainer http://ws.abx/abxWsGest/canModifyContainerRequest
//gsoap ns1  service method-output-action:	canModifyContainer http://ws.abx/abxWsGest/canModifyContainerResponse
int __ns1__canModifyContainer(
    ns1__canModifyContainer*            ns1__canModifyContainer_,	///< Input parameter
    ns1__canModifyContainerResponse*    ns1__canModifyContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canModifyTemplate                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canModifyTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canModifyTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canModifyTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canModifyTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canModifyTemplate*             ns1__canModifyTemplate_,
    // output parameters:
    ns1__canModifyTemplateResponse*     ns1__canModifyTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canModifyTemplate(
    struct soap *soap,
    // input parameters:
    ns1__canModifyTemplate*             ns1__canModifyTemplate_,
    // output parameters:
    ns1__canModifyTemplateResponse*     ns1__canModifyTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canModifyTemplate SOAP
//gsoap ns1  service method-style:	canModifyTemplate document
//gsoap ns1  service method-encoding:	canModifyTemplate literal
//gsoap ns1  service method-input-action:	canModifyTemplate http://ws.abx/abxWsGest/canModifyTemplateRequest
//gsoap ns1  service method-output-action:	canModifyTemplate http://ws.abx/abxWsGest/canModifyTemplateResponse
int __ns1__canModifyTemplate(
    ns1__canModifyTemplate*             ns1__canModifyTemplate_,	///< Input parameter
    ns1__canModifyTemplateResponse*     ns1__canModifyTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canDeleteContainer                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canDeleteContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canDeleteContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canDeleteContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canDeleteContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canDeleteContainer*            ns1__canDeleteContainer_,
    // output parameters:
    ns1__canDeleteContainerResponse*    ns1__canDeleteContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canDeleteContainer(
    struct soap *soap,
    // input parameters:
    ns1__canDeleteContainer*            ns1__canDeleteContainer_,
    // output parameters:
    ns1__canDeleteContainerResponse*    ns1__canDeleteContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canDeleteContainer SOAP
//gsoap ns1  service method-style:	canDeleteContainer document
//gsoap ns1  service method-encoding:	canDeleteContainer literal
//gsoap ns1  service method-input-action:	canDeleteContainer http://ws.abx/abxWsGest/canDeleteContainerRequest
//gsoap ns1  service method-output-action:	canDeleteContainer http://ws.abx/abxWsGest/canDeleteContainerResponse
int __ns1__canDeleteContainer(
    ns1__canDeleteContainer*            ns1__canDeleteContainer_,	///< Input parameter
    ns1__canDeleteContainerResponse*    ns1__canDeleteContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canDeleteTemplate                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canDeleteTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canDeleteTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canDeleteTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canDeleteTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canDeleteTemplate*             ns1__canDeleteTemplate_,
    // output parameters:
    ns1__canDeleteTemplateResponse*     ns1__canDeleteTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canDeleteTemplate(
    struct soap *soap,
    // input parameters:
    ns1__canDeleteTemplate*             ns1__canDeleteTemplate_,
    // output parameters:
    ns1__canDeleteTemplateResponse*     ns1__canDeleteTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canDeleteTemplate SOAP
//gsoap ns1  service method-style:	canDeleteTemplate document
//gsoap ns1  service method-encoding:	canDeleteTemplate literal
//gsoap ns1  service method-input-action:	canDeleteTemplate http://ws.abx/abxWsGest/canDeleteTemplateRequest
//gsoap ns1  service method-output-action:	canDeleteTemplate http://ws.abx/abxWsGest/canDeleteTemplateResponse
int __ns1__canDeleteTemplate(
    ns1__canDeleteTemplate*             ns1__canDeleteTemplate_,	///< Input parameter
    ns1__canDeleteTemplateResponse*     ns1__canDeleteTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canCreateContainer                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canCreateContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canCreateContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canCreateContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canCreateContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canCreateContainer*            ns1__canCreateContainer_,
    // output parameters:
    ns1__canCreateContainerResponse*    ns1__canCreateContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canCreateContainer(
    struct soap *soap,
    // input parameters:
    ns1__canCreateContainer*            ns1__canCreateContainer_,
    // output parameters:
    ns1__canCreateContainerResponse*    ns1__canCreateContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canCreateContainer SOAP
//gsoap ns1  service method-style:	canCreateContainer document
//gsoap ns1  service method-encoding:	canCreateContainer literal
//gsoap ns1  service method-input-action:	canCreateContainer http://ws.abx/abxWsGest/canCreateContainerRequest
//gsoap ns1  service method-output-action:	canCreateContainer http://ws.abx/abxWsGest/canCreateContainerResponse
int __ns1__canCreateContainer(
    ns1__canCreateContainer*            ns1__canCreateContainer_,	///< Input parameter
    ns1__canCreateContainerResponse*    ns1__canCreateContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canCreateTemplate                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canCreateTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canCreateTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canCreateTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canCreateTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canCreateTemplate*             ns1__canCreateTemplate_,
    // output parameters:
    ns1__canCreateTemplateResponse*     ns1__canCreateTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canCreateTemplate(
    struct soap *soap,
    // input parameters:
    ns1__canCreateTemplate*             ns1__canCreateTemplate_,
    // output parameters:
    ns1__canCreateTemplateResponse*     ns1__canCreateTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canCreateTemplate SOAP
//gsoap ns1  service method-style:	canCreateTemplate document
//gsoap ns1  service method-encoding:	canCreateTemplate literal
//gsoap ns1  service method-input-action:	canCreateTemplate http://ws.abx/abxWsGest/canCreateTemplateRequest
//gsoap ns1  service method-output-action:	canCreateTemplate http://ws.abx/abxWsGest/canCreateTemplateResponse
int __ns1__canCreateTemplate(
    ns1__canCreateTemplate*             ns1__canCreateTemplate_,	///< Input parameter
    ns1__canCreateTemplateResponse*     ns1__canCreateTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDynorgList                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDynorgList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDynorgListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDynorgListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDynorgList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDynorgList*                 ns1__GetDynorgList_,
    // output parameters:
    ns1__GetDynorgListResponse*         ns1__GetDynorgListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDynorgList(
    struct soap *soap,
    // input parameters:
    ns1__GetDynorgList*                 ns1__GetDynorgList_,
    // output parameters:
    ns1__GetDynorgListResponse*         ns1__GetDynorgListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDynorgList SOAP
//gsoap ns1  service method-style:	GetDynorgList document
//gsoap ns1  service method-encoding:	GetDynorgList literal
//gsoap ns1  service method-input-action:	GetDynorgList http://ws.abx/abxWsGest/GetDynorgListRequest
//gsoap ns1  service method-output-action:	GetDynorgList http://ws.abx/abxWsGest/GetDynorgListResponse
int __ns1__GetDynorgList(
    ns1__GetDynorgList*                 ns1__GetDynorgList_,	///< Input parameter
    ns1__GetDynorgListResponse*         ns1__GetDynorgListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyDynorg                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyDynorg*                  ns1__ModifyDynorg_,
    // output parameters:
    ns1__ModifyDynorgResponse*          ns1__ModifyDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyDynorg(
    struct soap *soap,
    // input parameters:
    ns1__ModifyDynorg*                  ns1__ModifyDynorg_,
    // output parameters:
    ns1__ModifyDynorgResponse*          ns1__ModifyDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyDynorg SOAP
//gsoap ns1  service method-style:	ModifyDynorg document
//gsoap ns1  service method-encoding:	ModifyDynorg literal
//gsoap ns1  service method-input-action:	ModifyDynorg http://ws.abx/abxWsGest/ModifyDynorgRequest
//gsoap ns1  service method-output-action:	ModifyDynorg http://ws.abx/abxWsGest/ModifyDynorgResponse
int __ns1__ModifyDynorg(
    ns1__ModifyDynorg*                  ns1__ModifyDynorg_,	///< Input parameter
    ns1__ModifyDynorgResponse*          ns1__ModifyDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteDynorg                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteDynorg*                  ns1__DeleteDynorg_,
    // output parameters:
    ns1__DeleteDynorgResponse*          ns1__DeleteDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteDynorg(
    struct soap *soap,
    // input parameters:
    ns1__DeleteDynorg*                  ns1__DeleteDynorg_,
    // output parameters:
    ns1__DeleteDynorgResponse*          ns1__DeleteDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteDynorg SOAP
//gsoap ns1  service method-style:	DeleteDynorg document
//gsoap ns1  service method-encoding:	DeleteDynorg literal
//gsoap ns1  service method-input-action:	DeleteDynorg http://ws.abx/abxWsGest/DeleteDynorgRequest
//gsoap ns1  service method-output-action:	DeleteDynorg http://ws.abx/abxWsGest/DeleteDynorgResponse
int __ns1__DeleteDynorg(
    ns1__DeleteDynorg*                  ns1__DeleteDynorg_,	///< Input parameter
    ns1__DeleteDynorgResponse*          ns1__DeleteDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanEditProtocol                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanEditProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanEditProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanEditProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanEditProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanEditProtocol*               ns1__CanEditProtocol_,
    // output parameters:
    ns1__CanEditProtocolResponse*       ns1__CanEditProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanEditProtocol(
    struct soap *soap,
    // input parameters:
    ns1__CanEditProtocol*               ns1__CanEditProtocol_,
    // output parameters:
    ns1__CanEditProtocolResponse*       ns1__CanEditProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanEditProtocol SOAP
//gsoap ns1  service method-style:	CanEditProtocol document
//gsoap ns1  service method-encoding:	CanEditProtocol literal
//gsoap ns1  service method-input-action:	CanEditProtocol http://ws.abx/abxWsGest/CanEditProtocolRequest
//gsoap ns1  service method-output-action:	CanEditProtocol http://ws.abx/abxWsGest/CanEditProtocolResponse
int __ns1__CanEditProtocol(
    ns1__CanEditProtocol*               ns1__CanEditProtocol_,	///< Input parameter
    ns1__CanEditProtocolResponse*       ns1__CanEditProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanDeleteProtocol                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanDeleteProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanDeleteProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanDeleteProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanDeleteProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanDeleteProtocol*             ns1__CanDeleteProtocol_,
    // output parameters:
    ns1__CanDeleteProtocolResponse*     ns1__CanDeleteProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanDeleteProtocol(
    struct soap *soap,
    // input parameters:
    ns1__CanDeleteProtocol*             ns1__CanDeleteProtocol_,
    // output parameters:
    ns1__CanDeleteProtocolResponse*     ns1__CanDeleteProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanDeleteProtocol SOAP
//gsoap ns1  service method-style:	CanDeleteProtocol document
//gsoap ns1  service method-encoding:	CanDeleteProtocol literal
//gsoap ns1  service method-input-action:	CanDeleteProtocol http://ws.abx/abxWsGest/CanDeleteProtocolRequest
//gsoap ns1  service method-output-action:	CanDeleteProtocol http://ws.abx/abxWsGest/CanDeleteProtocolResponse
int __ns1__CanDeleteProtocol(
    ns1__CanDeleteProtocol*             ns1__CanDeleteProtocol_,	///< Input parameter
    ns1__CanDeleteProtocolResponse*     ns1__CanDeleteProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetNewProtocolNumber                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetNewProtocolNumber" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetNewProtocolNumberRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetNewProtocolNumberResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetNewProtocolNumber(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetNewProtocolNumber*          ns1__GetNewProtocolNumber_,
    // output parameters:
    ns1__GetNewProtocolNumberResponse*  ns1__GetNewProtocolNumberResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetNewProtocolNumber(
    struct soap *soap,
    // input parameters:
    ns1__GetNewProtocolNumber*          ns1__GetNewProtocolNumber_,
    // output parameters:
    ns1__GetNewProtocolNumberResponse*  ns1__GetNewProtocolNumberResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetNewProtocolNumber SOAP
//gsoap ns1  service method-style:	GetNewProtocolNumber document
//gsoap ns1  service method-encoding:	GetNewProtocolNumber literal
//gsoap ns1  service method-input-action:	GetNewProtocolNumber http://ws.abx/abxWsGest/GetNewProtocolNumberRequest
//gsoap ns1  service method-output-action:	GetNewProtocolNumber http://ws.abx/abxWsGest/GetNewProtocolNumberResponse
int __ns1__GetNewProtocolNumber(
    ns1__GetNewProtocolNumber*          ns1__GetNewProtocolNumber_,	///< Input parameter
    ns1__GetNewProtocolNumberResponse*  ns1__GetNewProtocolNumberResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpUSDownloadPath                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpUSDownloadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpUSDownloadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpUSDownloadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpUSDownloadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpUSDownloadPath*          ns1__SetTmpUSDownloadPath_,
    // output parameters:
    ns1__SetTmpUSDownloadPathResponse*  ns1__SetTmpUSDownloadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpUSDownloadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpUSDownloadPath*          ns1__SetTmpUSDownloadPath_,
    // output parameters:
    ns1__SetTmpUSDownloadPathResponse*  ns1__SetTmpUSDownloadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpUSDownloadPath SOAP
//gsoap ns1  service method-style:	SetTmpUSDownloadPath document
//gsoap ns1  service method-encoding:	SetTmpUSDownloadPath literal
//gsoap ns1  service method-input-action:	SetTmpUSDownloadPath http://ws.abx/abxWsGest/SetTmpUSDownloadPathRequest
//gsoap ns1  service method-output-action:	SetTmpUSDownloadPath http://ws.abx/abxWsGest/SetTmpUSDownloadPathResponse
int __ns1__SetTmpUSDownloadPath(
    ns1__SetTmpUSDownloadPath*          ns1__SetTmpUSDownloadPath_,	///< Input parameter
    ns1__SetTmpUSDownloadPathResponse*  ns1__SetTmpUSDownloadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpUSUploadPath                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpUSUploadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpUSUploadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpUSUploadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpUSUploadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpUSUploadPath*            ns1__SetTmpUSUploadPath_,
    // output parameters:
    ns1__SetTmpUSUploadPathResponse*    ns1__SetTmpUSUploadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpUSUploadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpUSUploadPath*            ns1__SetTmpUSUploadPath_,
    // output parameters:
    ns1__SetTmpUSUploadPathResponse*    ns1__SetTmpUSUploadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpUSUploadPath SOAP
//gsoap ns1  service method-style:	SetTmpUSUploadPath document
//gsoap ns1  service method-encoding:	SetTmpUSUploadPath literal
//gsoap ns1  service method-input-action:	SetTmpUSUploadPath http://ws.abx/abxWsGest/SetTmpUSUploadPathRequest
//gsoap ns1  service method-output-action:	SetTmpUSUploadPath http://ws.abx/abxWsGest/SetTmpUSUploadPathResponse
int __ns1__SetTmpUSUploadPath(
    ns1__SetTmpUSUploadPath*            ns1__SetTmpUSUploadPath_,	///< Input parameter
    ns1__SetTmpUSUploadPathResponse*    ns1__SetTmpUSUploadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadUSEndFile                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadUSEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadUSEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadUSEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadUSEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadUSEndFile*               ns1__UploadUSEndFile_,
    // output parameters:
    ns1__UploadUSEndFileResponse*       ns1__UploadUSEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadUSEndFile(
    struct soap *soap,
    // input parameters:
    ns1__UploadUSEndFile*               ns1__UploadUSEndFile_,
    // output parameters:
    ns1__UploadUSEndFileResponse*       ns1__UploadUSEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadUSEndFile SOAP
//gsoap ns1  service method-style:	UploadUSEndFile document
//gsoap ns1  service method-encoding:	UploadUSEndFile literal
//gsoap ns1  service method-input-action:	UploadUSEndFile http://ws.abx/abxWsGest/UploadUSEndFileRequest
//gsoap ns1  service method-output-action:	UploadUSEndFile http://ws.abx/abxWsGest/UploadUSEndFileResponse
int __ns1__UploadUSEndFile(
    ns1__UploadUSEndFile*               ns1__UploadUSEndFile_,	///< Input parameter
    ns1__UploadUSEndFileResponse*       ns1__UploadUSEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadUSEndFileWithUser                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadUSEndFileWithUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadUSEndFileWithUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadUSEndFileWithUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadUSEndFileWithUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadUSEndFileWithUser*       ns1__UploadUSEndFileWithUser_,
    // output parameters:
    ns1__UploadUSEndFileWithUserResponse* ns1__UploadUSEndFileWithUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadUSEndFileWithUser(
    struct soap *soap,
    // input parameters:
    ns1__UploadUSEndFileWithUser*       ns1__UploadUSEndFileWithUser_,
    // output parameters:
    ns1__UploadUSEndFileWithUserResponse* ns1__UploadUSEndFileWithUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadUSEndFileWithUser SOAP
//gsoap ns1  service method-style:	UploadUSEndFileWithUser document
//gsoap ns1  service method-encoding:	UploadUSEndFileWithUser literal
//gsoap ns1  service method-input-action:	UploadUSEndFileWithUser http://ws.abx/abxWsGest/UploadUSEndFileWithUserRequest
//gsoap ns1  service method-output-action:	UploadUSEndFileWithUser http://ws.abx/abxWsGest/UploadUSEndFileWithUserResponse
int __ns1__UploadUSEndFileWithUser(
    ns1__UploadUSEndFileWithUser*       ns1__UploadUSEndFileWithUser_,	///< Input parameter
    ns1__UploadUSEndFileWithUserResponse* ns1__UploadUSEndFileWithUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadUSSendChunk                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadUSSendChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadUSSendChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadUSSendChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadUSSendChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadUSSendChunk*             ns1__UploadUSSendChunk_,
    // output parameters:
    ns1__UploadUSSendChunkResponse*     ns1__UploadUSSendChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadUSSendChunk(
    struct soap *soap,
    // input parameters:
    ns1__UploadUSSendChunk*             ns1__UploadUSSendChunk_,
    // output parameters:
    ns1__UploadUSSendChunkResponse*     ns1__UploadUSSendChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadUSSendChunk SOAP
//gsoap ns1  service method-style:	UploadUSSendChunk document
//gsoap ns1  service method-encoding:	UploadUSSendChunk literal
//gsoap ns1  service method-input-action:	UploadUSSendChunk http://ws.abx/abxWsGest/UploadUSSendChunkRequest
//gsoap ns1  service method-output-action:	UploadUSSendChunk http://ws.abx/abxWsGest/UploadUSSendChunkResponse
int __ns1__UploadUSSendChunk(
    ns1__UploadUSSendChunk*             ns1__UploadUSSendChunk_,	///< Input parameter
    ns1__UploadUSSendChunkResponse*     ns1__UploadUSSendChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadUSGetNext                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadUSGetNext" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadUSGetNextRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadUSGetNextResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadUSGetNext(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadUSGetNext*             ns1__DownloadUSGetNext_,
    // output parameters:
    ns1__DownloadUSGetNextResponse*     ns1__DownloadUSGetNextResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadUSGetNext(
    struct soap *soap,
    // input parameters:
    ns1__DownloadUSGetNext*             ns1__DownloadUSGetNext_,
    // output parameters:
    ns1__DownloadUSGetNextResponse*     ns1__DownloadUSGetNextResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadUSGetNext SOAP
//gsoap ns1  service method-style:	DownloadUSGetNext document
//gsoap ns1  service method-encoding:	DownloadUSGetNext literal
//gsoap ns1  service method-input-action:	DownloadUSGetNext http://ws.abx/abxWsGest/DownloadUSGetNextRequest
//gsoap ns1  service method-output-action:	DownloadUSGetNext http://ws.abx/abxWsGest/DownloadUSGetNextResponse
int __ns1__DownloadUSGetNext(
    ns1__DownloadUSGetNext*             ns1__DownloadUSGetNext_,	///< Input parameter
    ns1__DownloadUSGetNextResponse*     ns1__DownloadUSGetNextResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadUSGetChunk                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadUSGetChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadUSGetChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadUSGetChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadUSGetChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadUSGetChunk*            ns1__DownloadUSGetChunk_,
    // output parameters:
    ns1__DownloadUSGetChunkResponse*    ns1__DownloadUSGetChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadUSGetChunk(
    struct soap *soap,
    // input parameters:
    ns1__DownloadUSGetChunk*            ns1__DownloadUSGetChunk_,
    // output parameters:
    ns1__DownloadUSGetChunkResponse*    ns1__DownloadUSGetChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadUSGetChunk SOAP
//gsoap ns1  service method-style:	DownloadUSGetChunk document
//gsoap ns1  service method-encoding:	DownloadUSGetChunk literal
//gsoap ns1  service method-input-action:	DownloadUSGetChunk http://ws.abx/abxWsGest/DownloadUSGetChunkRequest
//gsoap ns1  service method-output-action:	DownloadUSGetChunk http://ws.abx/abxWsGest/DownloadUSGetChunkResponse
int __ns1__DownloadUSGetChunk(
    ns1__DownloadUSGetChunk*            ns1__DownloadUSGetChunk_,	///< Input parameter
    ns1__DownloadUSGetChunkResponse*    ns1__DownloadUSGetChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadUSFile                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadUSFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadUSFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadUSFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadUSFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadUSFile*                ns1__DownloadUSFile_,
    // output parameters:
    ns1__DownloadUSFileResponse*        ns1__DownloadUSFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadUSFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadUSFile*                ns1__DownloadUSFile_,
    // output parameters:
    ns1__DownloadUSFileResponse*        ns1__DownloadUSFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadUSFile SOAP
//gsoap ns1  service method-style:	DownloadUSFile document
//gsoap ns1  service method-encoding:	DownloadUSFile literal
//gsoap ns1  service method-input-action:	DownloadUSFile http://ws.abx/abxWsGest/DownloadUSFileRequest
//gsoap ns1  service method-output-action:	DownloadUSFile http://ws.abx/abxWsGest/DownloadUSFileResponse
int __ns1__DownloadUSFile(
    ns1__DownloadUSFile*                ns1__DownloadUSFile_,	///< Input parameter
    ns1__DownloadUSFileResponse*        ns1__DownloadUSFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataUSFileDetail                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataUSFileDetail" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataUSFileDetailRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataUSFileDetailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataUSFileDetail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataUSFileDetail*           ns1__GetDataUSFileDetail_,
    // output parameters:
    ns1__GetDataUSFileDetailResponse*   ns1__GetDataUSFileDetailResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataUSFileDetail(
    struct soap *soap,
    // input parameters:
    ns1__GetDataUSFileDetail*           ns1__GetDataUSFileDetail_,
    // output parameters:
    ns1__GetDataUSFileDetailResponse*   ns1__GetDataUSFileDetailResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataUSFileDetail SOAP
//gsoap ns1  service method-style:	GetDataUSFileDetail document
//gsoap ns1  service method-encoding:	GetDataUSFileDetail literal
//gsoap ns1  service method-input-action:	GetDataUSFileDetail http://ws.abx/abxWsGest/GetDataUSFileDetailRequest
//gsoap ns1  service method-output-action:	GetDataUSFileDetail http://ws.abx/abxWsGest/GetDataUSFileDetailResponse
int __ns1__GetDataUSFileDetail(
    ns1__GetDataUSFileDetail*           ns1__GetDataUSFileDetail_,	///< Input parameter
    ns1__GetDataUSFileDetailResponse*   ns1__GetDataUSFileDetailResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataUSFileList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataUSFileList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataUSFileListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataUSFileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataUSFileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataUSFileList*             ns1__GetDataUSFileList_,
    // output parameters:
    ns1__GetDataUSFileListResponse*     ns1__GetDataUSFileListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataUSFileList(
    struct soap *soap,
    // input parameters:
    ns1__GetDataUSFileList*             ns1__GetDataUSFileList_,
    // output parameters:
    ns1__GetDataUSFileListResponse*     ns1__GetDataUSFileListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataUSFileList SOAP
//gsoap ns1  service method-style:	GetDataUSFileList document
//gsoap ns1  service method-encoding:	GetDataUSFileList literal
//gsoap ns1  service method-input-action:	GetDataUSFileList http://ws.abx/abxWsGest/GetDataUSFileListRequest
//gsoap ns1  service method-output-action:	GetDataUSFileList http://ws.abx/abxWsGest/GetDataUSFileListResponse
int __ns1__GetDataUSFileList(
    ns1__GetDataUSFileList*             ns1__GetDataUSFileList_,	///< Input parameter
    ns1__GetDataUSFileListResponse*     ns1__GetDataUSFileListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataUSFileListByUsername                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataUSFileListByUsername" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataUSFileListByUsernameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataUSFileListByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataUSFileListByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataUSFileListByUsername*   ns1__GetDataUSFileListByUsername_,
    // output parameters:
    ns1__GetDataUSFileListByUsernameResponse* ns1__GetDataUSFileListByUsernameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataUSFileListByUsername(
    struct soap *soap,
    // input parameters:
    ns1__GetDataUSFileListByUsername*   ns1__GetDataUSFileListByUsername_,
    // output parameters:
    ns1__GetDataUSFileListByUsernameResponse* ns1__GetDataUSFileListByUsernameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataUSFileListByUsername SOAP
//gsoap ns1  service method-style:	GetDataUSFileListByUsername document
//gsoap ns1  service method-encoding:	GetDataUSFileListByUsername literal
//gsoap ns1  service method-input-action:	GetDataUSFileListByUsername http://ws.abx/abxWsGest/GetDataUSFileListByUsernameRequest
//gsoap ns1  service method-output-action:	GetDataUSFileListByUsername http://ws.abx/abxWsGest/GetDataUSFileListByUsernameResponse
int __ns1__GetDataUSFileListByUsername(
    ns1__GetDataUSFileListByUsername*   ns1__GetDataUSFileListByUsername_,	///< Input parameter
    ns1__GetDataUSFileListByUsernameResponse* ns1__GetDataUSFileListByUsernameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertUSFileWithUser                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertUSFileWithUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertUSFileWithUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertUSFileWithUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertUSFileWithUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertUSFileWithUser*          ns1__InsertUSFileWithUser_,
    // output parameters:
    ns1__InsertUSFileWithUserResponse*  ns1__InsertUSFileWithUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertUSFileWithUser(
    struct soap *soap,
    // input parameters:
    ns1__InsertUSFileWithUser*          ns1__InsertUSFileWithUser_,
    // output parameters:
    ns1__InsertUSFileWithUserResponse*  ns1__InsertUSFileWithUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertUSFileWithUser SOAP
//gsoap ns1  service method-style:	InsertUSFileWithUser document
//gsoap ns1  service method-encoding:	InsertUSFileWithUser literal
//gsoap ns1  service method-input-action:	InsertUSFileWithUser http://ws.abx/abxWsGest/InsertUSFileWithUserRequest
//gsoap ns1  service method-output-action:	InsertUSFileWithUser http://ws.abx/abxWsGest/InsertUSFileWithUserResponse
int __ns1__InsertUSFileWithUser(
    ns1__InsertUSFileWithUser*          ns1__InsertUSFileWithUser_,	///< Input parameter
    ns1__InsertUSFileWithUserResponse*  ns1__InsertUSFileWithUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteUSFileById                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteUSFileById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteUSFileByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteUSFileByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteUSFileById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteUSFileById*              ns1__DeleteUSFileById_,
    // output parameters:
    ns1__DeleteUSFileByIdResponse*      ns1__DeleteUSFileByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteUSFileById(
    struct soap *soap,
    // input parameters:
    ns1__DeleteUSFileById*              ns1__DeleteUSFileById_,
    // output parameters:
    ns1__DeleteUSFileByIdResponse*      ns1__DeleteUSFileByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteUSFileById SOAP
//gsoap ns1  service method-style:	DeleteUSFileById document
//gsoap ns1  service method-encoding:	DeleteUSFileById literal
//gsoap ns1  service method-input-action:	DeleteUSFileById http://ws.abx/abxWsGest/DeleteUSFileByIdRequest
//gsoap ns1  service method-output-action:	DeleteUSFileById http://ws.abx/abxWsGest/DeleteUSFileByIdResponse
int __ns1__DeleteUSFileById(
    ns1__DeleteUSFileById*              ns1__DeleteUSFileById_,	///< Input parameter
    ns1__DeleteUSFileByIdResponse*      ns1__DeleteUSFileByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteUSFileByCode                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteUSFileByCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteUSFileByCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteUSFileByCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteUSFileByCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteUSFileByCode*            ns1__DeleteUSFileByCode_,
    // output parameters:
    ns1__DeleteUSFileByCodeResponse*    ns1__DeleteUSFileByCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteUSFileByCode(
    struct soap *soap,
    // input parameters:
    ns1__DeleteUSFileByCode*            ns1__DeleteUSFileByCode_,
    // output parameters:
    ns1__DeleteUSFileByCodeResponse*    ns1__DeleteUSFileByCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteUSFileByCode SOAP
//gsoap ns1  service method-style:	DeleteUSFileByCode document
//gsoap ns1  service method-encoding:	DeleteUSFileByCode literal
//gsoap ns1  service method-input-action:	DeleteUSFileByCode http://ws.abx/abxWsGest/DeleteUSFileByCodeRequest
//gsoap ns1  service method-output-action:	DeleteUSFileByCode http://ws.abx/abxWsGest/DeleteUSFileByCodeResponse
int __ns1__DeleteUSFileByCode(
    ns1__DeleteUSFileByCode*            ns1__DeleteUSFileByCode_,	///< Input parameter
    ns1__DeleteUSFileByCodeResponse*    ns1__DeleteUSFileByCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpWFDownloadPath                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpWFDownloadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpWFDownloadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpWFDownloadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpWFDownloadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpWFDownloadPath*          ns1__SetTmpWFDownloadPath_,
    // output parameters:
    ns1__SetTmpWFDownloadPathResponse*  ns1__SetTmpWFDownloadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpWFDownloadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpWFDownloadPath*          ns1__SetTmpWFDownloadPath_,
    // output parameters:
    ns1__SetTmpWFDownloadPathResponse*  ns1__SetTmpWFDownloadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpWFDownloadPath SOAP
//gsoap ns1  service method-style:	SetTmpWFDownloadPath document
//gsoap ns1  service method-encoding:	SetTmpWFDownloadPath literal
//gsoap ns1  service method-input-action:	SetTmpWFDownloadPath http://ws.abx/abxWsGest/SetTmpWFDownloadPathRequest
//gsoap ns1  service method-output-action:	SetTmpWFDownloadPath http://ws.abx/abxWsGest/SetTmpWFDownloadPathResponse
int __ns1__SetTmpWFDownloadPath(
    ns1__SetTmpWFDownloadPath*          ns1__SetTmpWFDownloadPath_,	///< Input parameter
    ns1__SetTmpWFDownloadPathResponse*  ns1__SetTmpWFDownloadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpWFUploadPath                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpWFUploadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpWFUploadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpWFUploadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpWFUploadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpWFUploadPath*            ns1__SetTmpWFUploadPath_,
    // output parameters:
    ns1__SetTmpWFUploadPathResponse*    ns1__SetTmpWFUploadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpWFUploadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpWFUploadPath*            ns1__SetTmpWFUploadPath_,
    // output parameters:
    ns1__SetTmpWFUploadPathResponse*    ns1__SetTmpWFUploadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpWFUploadPath SOAP
//gsoap ns1  service method-style:	SetTmpWFUploadPath document
//gsoap ns1  service method-encoding:	SetTmpWFUploadPath literal
//gsoap ns1  service method-input-action:	SetTmpWFUploadPath http://ws.abx/abxWsGest/SetTmpWFUploadPathRequest
//gsoap ns1  service method-output-action:	SetTmpWFUploadPath http://ws.abx/abxWsGest/SetTmpWFUploadPathResponse
int __ns1__SetTmpWFUploadPath(
    ns1__SetTmpWFUploadPath*            ns1__SetTmpWFUploadPath_,	///< Input parameter
    ns1__SetTmpWFUploadPathResponse*    ns1__SetTmpWFUploadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadWFEndFile                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadWFEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadWFEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadWFEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadWFEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadWFEndFile*               ns1__UploadWFEndFile_,
    // output parameters:
    ns1__UploadWFEndFileResponse*       ns1__UploadWFEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadWFEndFile(
    struct soap *soap,
    // input parameters:
    ns1__UploadWFEndFile*               ns1__UploadWFEndFile_,
    // output parameters:
    ns1__UploadWFEndFileResponse*       ns1__UploadWFEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadWFEndFile SOAP
//gsoap ns1  service method-style:	UploadWFEndFile document
//gsoap ns1  service method-encoding:	UploadWFEndFile literal
//gsoap ns1  service method-input-action:	UploadWFEndFile http://ws.abx/abxWsGest/UploadWFEndFileRequest
//gsoap ns1  service method-output-action:	UploadWFEndFile http://ws.abx/abxWsGest/UploadWFEndFileResponse
int __ns1__UploadWFEndFile(
    ns1__UploadWFEndFile*               ns1__UploadWFEndFile_,	///< Input parameter
    ns1__UploadWFEndFileResponse*       ns1__UploadWFEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadWFSendChunk                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadWFSendChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadWFSendChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadWFSendChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadWFSendChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadWFSendChunk*             ns1__UploadWFSendChunk_,
    // output parameters:
    ns1__UploadWFSendChunkResponse*     ns1__UploadWFSendChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadWFSendChunk(
    struct soap *soap,
    // input parameters:
    ns1__UploadWFSendChunk*             ns1__UploadWFSendChunk_,
    // output parameters:
    ns1__UploadWFSendChunkResponse*     ns1__UploadWFSendChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadWFSendChunk SOAP
//gsoap ns1  service method-style:	UploadWFSendChunk document
//gsoap ns1  service method-encoding:	UploadWFSendChunk literal
//gsoap ns1  service method-input-action:	UploadWFSendChunk http://ws.abx/abxWsGest/UploadWFSendChunkRequest
//gsoap ns1  service method-output-action:	UploadWFSendChunk http://ws.abx/abxWsGest/UploadWFSendChunkResponse
int __ns1__UploadWFSendChunk(
    ns1__UploadWFSendChunk*             ns1__UploadWFSendChunk_,	///< Input parameter
    ns1__UploadWFSendChunkResponse*     ns1__UploadWFSendChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadWFEndFile                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadWFEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadWFEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadWFEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadWFEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadWFEndFile*             ns1__DownloadWFEndFile_,
    // output parameters:
    ns1__DownloadWFEndFileResponse*     ns1__DownloadWFEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadWFEndFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadWFEndFile*             ns1__DownloadWFEndFile_,
    // output parameters:
    ns1__DownloadWFEndFileResponse*     ns1__DownloadWFEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadWFEndFile SOAP
//gsoap ns1  service method-style:	DownloadWFEndFile document
//gsoap ns1  service method-encoding:	DownloadWFEndFile literal
//gsoap ns1  service method-input-action:	DownloadWFEndFile http://ws.abx/abxWsGest/DownloadWFEndFileRequest
//gsoap ns1  service method-output-action:	DownloadWFEndFile http://ws.abx/abxWsGest/DownloadWFEndFileResponse
int __ns1__DownloadWFEndFile(
    ns1__DownloadWFEndFile*             ns1__DownloadWFEndFile_,	///< Input parameter
    ns1__DownloadWFEndFileResponse*     ns1__DownloadWFEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadWFFile                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadWFFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadWFFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadWFFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadWFFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadWFFile*                ns1__DownloadWFFile_,
    // output parameters:
    ns1__DownloadWFFileResponse*        ns1__DownloadWFFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadWFFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadWFFile*                ns1__DownloadWFFile_,
    // output parameters:
    ns1__DownloadWFFileResponse*        ns1__DownloadWFFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadWFFile SOAP
//gsoap ns1  service method-style:	DownloadWFFile document
//gsoap ns1  service method-encoding:	DownloadWFFile literal
//gsoap ns1  service method-input-action:	DownloadWFFile http://ws.abx/abxWsGest/DownloadWFFileRequest
//gsoap ns1  service method-output-action:	DownloadWFFile http://ws.abx/abxWsGest/DownloadWFFileResponse
int __ns1__DownloadWFFile(
    ns1__DownloadWFFile*                ns1__DownloadWFFile_,	///< Input parameter
    ns1__DownloadWFFileResponse*        ns1__DownloadWFFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataWFFileDetail                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataWFFileDetail" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataWFFileDetailRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataWFFileDetailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataWFFileDetail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataWFFileDetail*           ns1__GetDataWFFileDetail_,
    // output parameters:
    ns1__GetDataWFFileDetailResponse*   ns1__GetDataWFFileDetailResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataWFFileDetail(
    struct soap *soap,
    // input parameters:
    ns1__GetDataWFFileDetail*           ns1__GetDataWFFileDetail_,
    // output parameters:
    ns1__GetDataWFFileDetailResponse*   ns1__GetDataWFFileDetailResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataWFFileDetail SOAP
//gsoap ns1  service method-style:	GetDataWFFileDetail document
//gsoap ns1  service method-encoding:	GetDataWFFileDetail literal
//gsoap ns1  service method-input-action:	GetDataWFFileDetail http://ws.abx/abxWsGest/GetDataWFFileDetailRequest
//gsoap ns1  service method-output-action:	GetDataWFFileDetail http://ws.abx/abxWsGest/GetDataWFFileDetailResponse
int __ns1__GetDataWFFileDetail(
    ns1__GetDataWFFileDetail*           ns1__GetDataWFFileDetail_,	///< Input parameter
    ns1__GetDataWFFileDetailResponse*   ns1__GetDataWFFileDetailResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataWFFileList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataWFFileList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataWFFileListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataWFFileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataWFFileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataWFFileList*             ns1__GetDataWFFileList_,
    // output parameters:
    ns1__GetDataWFFileListResponse*     ns1__GetDataWFFileListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataWFFileList(
    struct soap *soap,
    // input parameters:
    ns1__GetDataWFFileList*             ns1__GetDataWFFileList_,
    // output parameters:
    ns1__GetDataWFFileListResponse*     ns1__GetDataWFFileListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataWFFileList SOAP
//gsoap ns1  service method-style:	GetDataWFFileList document
//gsoap ns1  service method-encoding:	GetDataWFFileList literal
//gsoap ns1  service method-input-action:	GetDataWFFileList http://ws.abx/abxWsGest/GetDataWFFileListRequest
//gsoap ns1  service method-output-action:	GetDataWFFileList http://ws.abx/abxWsGest/GetDataWFFileListResponse
int __ns1__GetDataWFFileList(
    ns1__GetDataWFFileList*             ns1__GetDataWFFileList_,	///< Input parameter
    ns1__GetDataWFFileListResponse*     ns1__GetDataWFFileListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertWFFile                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertWFFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertWFFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertWFFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertWFFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertWFFile*                  ns1__InsertWFFile_,
    // output parameters:
    ns1__InsertWFFileResponse*          ns1__InsertWFFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertWFFile(
    struct soap *soap,
    // input parameters:
    ns1__InsertWFFile*                  ns1__InsertWFFile_,
    // output parameters:
    ns1__InsertWFFileResponse*          ns1__InsertWFFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertWFFile SOAP
//gsoap ns1  service method-style:	InsertWFFile document
//gsoap ns1  service method-encoding:	InsertWFFile literal
//gsoap ns1  service method-input-action:	InsertWFFile http://ws.abx/abxWsGest/InsertWFFileRequest
//gsoap ns1  service method-output-action:	InsertWFFile http://ws.abx/abxWsGest/InsertWFFileResponse
int __ns1__InsertWFFile(
    ns1__InsertWFFile*                  ns1__InsertWFFile_,	///< Input parameter
    ns1__InsertWFFileResponse*          ns1__InsertWFFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteWFFileById                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteWFFileById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteWFFileByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteWFFileByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteWFFileById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteWFFileById*              ns1__DeleteWFFileById_,
    // output parameters:
    ns1__DeleteWFFileByIdResponse*      ns1__DeleteWFFileByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteWFFileById(
    struct soap *soap,
    // input parameters:
    ns1__DeleteWFFileById*              ns1__DeleteWFFileById_,
    // output parameters:
    ns1__DeleteWFFileByIdResponse*      ns1__DeleteWFFileByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteWFFileById SOAP
//gsoap ns1  service method-style:	DeleteWFFileById document
//gsoap ns1  service method-encoding:	DeleteWFFileById literal
//gsoap ns1  service method-input-action:	DeleteWFFileById http://ws.abx/abxWsGest/DeleteWFFileByIdRequest
//gsoap ns1  service method-output-action:	DeleteWFFileById http://ws.abx/abxWsGest/DeleteWFFileByIdResponse
int __ns1__DeleteWFFileById(
    ns1__DeleteWFFileById*              ns1__DeleteWFFileById_,	///< Input parameter
    ns1__DeleteWFFileByIdResponse*      ns1__DeleteWFFileByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteWFFileByCode                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteWFFileByCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteWFFileByCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteWFFileByCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteWFFileByCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteWFFileByCode*            ns1__DeleteWFFileByCode_,
    // output parameters:
    ns1__DeleteWFFileByCodeResponse*    ns1__DeleteWFFileByCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteWFFileByCode(
    struct soap *soap,
    // input parameters:
    ns1__DeleteWFFileByCode*            ns1__DeleteWFFileByCode_,
    // output parameters:
    ns1__DeleteWFFileByCodeResponse*    ns1__DeleteWFFileByCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteWFFileByCode SOAP
//gsoap ns1  service method-style:	DeleteWFFileByCode document
//gsoap ns1  service method-encoding:	DeleteWFFileByCode literal
//gsoap ns1  service method-input-action:	DeleteWFFileByCode http://ws.abx/abxWsGest/DeleteWFFileByCodeRequest
//gsoap ns1  service method-output-action:	DeleteWFFileByCode http://ws.abx/abxWsGest/DeleteWFFileByCodeResponse
int __ns1__DeleteWFFileByCode(
    ns1__DeleteWFFileByCode*            ns1__DeleteWFFileByCode_,	///< Input parameter
    ns1__DeleteWFFileByCodeResponse*    ns1__DeleteWFFileByCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TestLettura                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TestLettura" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/TestLetturaRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/TestLetturaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TestLettura(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__TestLettura*                   ns1__TestLettura_,
    // output parameters:
    ns1__TestLetturaResponse*           ns1__TestLetturaResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TestLettura(
    struct soap *soap,
    // input parameters:
    ns1__TestLettura*                   ns1__TestLettura_,
    // output parameters:
    ns1__TestLetturaResponse*           ns1__TestLetturaResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	TestLettura SOAP
//gsoap ns1  service method-style:	TestLettura document
//gsoap ns1  service method-encoding:	TestLettura literal
//gsoap ns1  service method-input-action:	TestLettura http://ws.abx/abxWsGest/TestLetturaRequest
//gsoap ns1  service method-output-action:	TestLettura http://ws.abx/abxWsGest/TestLetturaResponse
int __ns1__TestLettura(
    ns1__TestLettura*                   ns1__TestLettura_,	///< Input parameter
    ns1__TestLetturaResponse*           ns1__TestLetturaResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TestScritturaLettura                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TestScritturaLettura" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/TestScritturaLetturaRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/TestScritturaLetturaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TestScritturaLettura(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__TestScritturaLettura*          ns1__TestScritturaLettura_,
    // output parameters:
    ns1__TestScritturaLetturaResponse*  ns1__TestScritturaLetturaResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TestScritturaLettura(
    struct soap *soap,
    // input parameters:
    ns1__TestScritturaLettura*          ns1__TestScritturaLettura_,
    // output parameters:
    ns1__TestScritturaLetturaResponse*  ns1__TestScritturaLetturaResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	TestScritturaLettura SOAP
//gsoap ns1  service method-style:	TestScritturaLettura document
//gsoap ns1  service method-encoding:	TestScritturaLettura literal
//gsoap ns1  service method-input-action:	TestScritturaLettura http://ws.abx/abxWsGest/TestScritturaLetturaRequest
//gsoap ns1  service method-output-action:	TestScritturaLettura http://ws.abx/abxWsGest/TestScritturaLetturaResponse
int __ns1__TestScritturaLettura(
    ns1__TestScritturaLettura*          ns1__TestScritturaLettura_,	///< Input parameter
    ns1__TestScritturaLetturaResponse*  ns1__TestScritturaLetturaResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SaveChars                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SaveChars" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SaveCharsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SaveCharsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SaveChars(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SaveChars*                     ns1__SaveChars_,
    // output parameters:
    ns1__SaveCharsResponse*             ns1__SaveCharsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SaveChars(
    struct soap *soap,
    // input parameters:
    ns1__SaveChars*                     ns1__SaveChars_,
    // output parameters:
    ns1__SaveCharsResponse*             ns1__SaveCharsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SaveChars SOAP
//gsoap ns1  service method-style:	SaveChars document
//gsoap ns1  service method-encoding:	SaveChars literal
//gsoap ns1  service method-input-action:	SaveChars http://ws.abx/abxWsGest/SaveCharsRequest
//gsoap ns1  service method-output-action:	SaveChars http://ws.abx/abxWsGest/SaveCharsResponse
int __ns1__SaveChars(
    ns1__SaveChars*                     ns1__SaveChars_,	///< Input parameter
    ns1__SaveCharsResponse*             ns1__SaveCharsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddUser*                       ns1__AddUser_,
    // output parameters:
    ns1__AddUserResponse*               ns1__AddUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddUser(
    struct soap *soap,
    // input parameters:
    ns1__AddUser*                       ns1__AddUser_,
    // output parameters:
    ns1__AddUserResponse*               ns1__AddUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddUser SOAP
//gsoap ns1  service method-style:	AddUser document
//gsoap ns1  service method-encoding:	AddUser literal
//gsoap ns1  service method-input-action:	AddUser http://ws.abx/abxWsGest/AddUserRequest
//gsoap ns1  service method-output-action:	AddUser http://ws.abx/abxWsGest/AddUserResponse
int __ns1__AddUser(
    ns1__AddUser*                       ns1__AddUser_,	///< Input parameter
    ns1__AddUserResponse*               ns1__AddUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModUser*                       ns1__ModUser_,
    // output parameters:
    ns1__ModUserResponse*               ns1__ModUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModUser(
    struct soap *soap,
    // input parameters:
    ns1__ModUser*                       ns1__ModUser_,
    // output parameters:
    ns1__ModUserResponse*               ns1__ModUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModUser SOAP
//gsoap ns1  service method-style:	ModUser document
//gsoap ns1  service method-encoding:	ModUser literal
//gsoap ns1  service method-input-action:	ModUser http://ws.abx/abxWsGest/ModUserRequest
//gsoap ns1  service method-output-action:	ModUser http://ws.abx/abxWsGest/ModUserResponse
int __ns1__ModUser(
    ns1__ModUser*                       ns1__ModUser_,	///< Input parameter
    ns1__ModUserResponse*               ns1__ModUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__VerifyExpression                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__VerifyExpression" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/VerifyExpressionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/VerifyExpressionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__VerifyExpression(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__VerifyExpression*              ns1__VerifyExpression_,
    // output parameters:
    ns1__VerifyExpressionResponse*      ns1__VerifyExpressionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__VerifyExpression(
    struct soap *soap,
    // input parameters:
    ns1__VerifyExpression*              ns1__VerifyExpression_,
    // output parameters:
    ns1__VerifyExpressionResponse*      ns1__VerifyExpressionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	VerifyExpression SOAP
//gsoap ns1  service method-style:	VerifyExpression document
//gsoap ns1  service method-encoding:	VerifyExpression literal
//gsoap ns1  service method-input-action:	VerifyExpression http://ws.abx/abxWsGest/VerifyExpressionRequest
//gsoap ns1  service method-output-action:	VerifyExpression http://ws.abx/abxWsGest/VerifyExpressionResponse
int __ns1__VerifyExpression(
    ns1__VerifyExpression*              ns1__VerifyExpression_,	///< Input parameter
    ns1__VerifyExpressionResponse*      ns1__VerifyExpressionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddExpression                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddExpression" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddExpressionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddExpressionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddExpression(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddExpression*                 ns1__AddExpression_,
    // output parameters:
    ns1__AddExpressionResponse*         ns1__AddExpressionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddExpression(
    struct soap *soap,
    // input parameters:
    ns1__AddExpression*                 ns1__AddExpression_,
    // output parameters:
    ns1__AddExpressionResponse*         ns1__AddExpressionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddExpression SOAP
//gsoap ns1  service method-style:	AddExpression document
//gsoap ns1  service method-encoding:	AddExpression literal
//gsoap ns1  service method-input-action:	AddExpression http://ws.abx/abxWsGest/AddExpressionRequest
//gsoap ns1  service method-output-action:	AddExpression http://ws.abx/abxWsGest/AddExpressionResponse
int __ns1__AddExpression(
    ns1__AddExpression*                 ns1__AddExpression_,	///< Input parameter
    ns1__AddExpressionResponse*         ns1__AddExpressionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModExpression                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModExpression" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModExpressionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModExpressionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModExpression(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModExpression*                 ns1__ModExpression_,
    // output parameters:
    ns1__ModExpressionResponse*         ns1__ModExpressionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModExpression(
    struct soap *soap,
    // input parameters:
    ns1__ModExpression*                 ns1__ModExpression_,
    // output parameters:
    ns1__ModExpressionResponse*         ns1__ModExpressionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModExpression SOAP
//gsoap ns1  service method-style:	ModExpression document
//gsoap ns1  service method-encoding:	ModExpression literal
//gsoap ns1  service method-input-action:	ModExpression http://ws.abx/abxWsGest/ModExpressionRequest
//gsoap ns1  service method-output-action:	ModExpression http://ws.abx/abxWsGest/ModExpressionResponse
int __ns1__ModExpression(
    ns1__ModExpression*                 ns1__ModExpression_,	///< Input parameter
    ns1__ModExpressionResponse*         ns1__ModExpressionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DelExpression                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DelExpression" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DelExpressionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DelExpressionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DelExpression(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DelExpression*                 ns1__DelExpression_,
    // output parameters:
    ns1__DelExpressionResponse*         ns1__DelExpressionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DelExpression(
    struct soap *soap,
    // input parameters:
    ns1__DelExpression*                 ns1__DelExpression_,
    // output parameters:
    ns1__DelExpressionResponse*         ns1__DelExpressionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DelExpression SOAP
//gsoap ns1  service method-style:	DelExpression document
//gsoap ns1  service method-encoding:	DelExpression literal
//gsoap ns1  service method-input-action:	DelExpression http://ws.abx/abxWsGest/DelExpressionRequest
//gsoap ns1  service method-output-action:	DelExpression http://ws.abx/abxWsGest/DelExpressionResponse
int __ns1__DelExpression(
    ns1__DelExpression*                 ns1__DelExpression_,	///< Input parameter
    ns1__DelExpressionResponse*         ns1__DelExpressionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetExpression                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetExpression" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetExpressionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetExpressionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetExpression(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetExpression*                 ns1__GetExpression_,
    // output parameters:
    ns1__GetExpressionResponse*         ns1__GetExpressionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetExpression(
    struct soap *soap,
    // input parameters:
    ns1__GetExpression*                 ns1__GetExpression_,
    // output parameters:
    ns1__GetExpressionResponse*         ns1__GetExpressionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetExpression SOAP
//gsoap ns1  service method-style:	GetExpression document
//gsoap ns1  service method-encoding:	GetExpression literal
//gsoap ns1  service method-input-action:	GetExpression http://ws.abx/abxWsGest/GetExpressionRequest
//gsoap ns1  service method-output-action:	GetExpression http://ws.abx/abxWsGest/GetExpressionResponse
int __ns1__GetExpression(
    ns1__GetExpression*                 ns1__GetExpression_,	///< Input parameter
    ns1__GetExpressionResponse*         ns1__GetExpressionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllContainerExpressions                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllContainerExpressions" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetAllContainerExpressionsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetAllContainerExpressionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllContainerExpressions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetAllContainerExpressions*    ns1__GetAllContainerExpressions_,
    // output parameters:
    ns1__GetAllContainerExpressionsResponse* ns1__GetAllContainerExpressionsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllContainerExpressions(
    struct soap *soap,
    // input parameters:
    ns1__GetAllContainerExpressions*    ns1__GetAllContainerExpressions_,
    // output parameters:
    ns1__GetAllContainerExpressionsResponse* ns1__GetAllContainerExpressionsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllContainerExpressions SOAP
//gsoap ns1  service method-style:	GetAllContainerExpressions document
//gsoap ns1  service method-encoding:	GetAllContainerExpressions literal
//gsoap ns1  service method-input-action:	GetAllContainerExpressions http://ws.abx/abxWsGest/GetAllContainerExpressionsRequest
//gsoap ns1  service method-output-action:	GetAllContainerExpressions http://ws.abx/abxWsGest/GetAllContainerExpressionsResponse
int __ns1__GetAllContainerExpressions(
    ns1__GetAllContainerExpressions*    ns1__GetAllContainerExpressions_,	///< Input parameter
    ns1__GetAllContainerExpressionsResponse* ns1__GetAllContainerExpressionsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetExpressionValue                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetExpressionValue" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetExpressionValueRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetExpressionValueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetExpressionValue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetExpressionValue*            ns1__GetExpressionValue_,
    // output parameters:
    ns1__GetExpressionValueResponse*    ns1__GetExpressionValueResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetExpressionValue(
    struct soap *soap,
    // input parameters:
    ns1__GetExpressionValue*            ns1__GetExpressionValue_,
    // output parameters:
    ns1__GetExpressionValueResponse*    ns1__GetExpressionValueResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetExpressionValue SOAP
//gsoap ns1  service method-style:	GetExpressionValue document
//gsoap ns1  service method-encoding:	GetExpressionValue literal
//gsoap ns1  service method-input-action:	GetExpressionValue http://ws.abx/abxWsGest/GetExpressionValueRequest
//gsoap ns1  service method-output-action:	GetExpressionValue http://ws.abx/abxWsGest/GetExpressionValueResponse
int __ns1__GetExpressionValue(
    ns1__GetExpressionValue*            ns1__GetExpressionValue_,	///< Input parameter
    ns1__GetExpressionValueResponse*    ns1__GetExpressionValueResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpTPDownloadPath                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpTPDownloadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpTPDownloadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpTPDownloadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpTPDownloadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpTPDownloadPath*          ns1__SetTmpTPDownloadPath_,
    // output parameters:
    ns1__SetTmpTPDownloadPathResponse*  ns1__SetTmpTPDownloadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpTPDownloadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpTPDownloadPath*          ns1__SetTmpTPDownloadPath_,
    // output parameters:
    ns1__SetTmpTPDownloadPathResponse*  ns1__SetTmpTPDownloadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpTPDownloadPath SOAP
//gsoap ns1  service method-style:	SetTmpTPDownloadPath document
//gsoap ns1  service method-encoding:	SetTmpTPDownloadPath literal
//gsoap ns1  service method-input-action:	SetTmpTPDownloadPath http://ws.abx/abxWsGest/SetTmpTPDownloadPathRequest
//gsoap ns1  service method-output-action:	SetTmpTPDownloadPath http://ws.abx/abxWsGest/SetTmpTPDownloadPathResponse
int __ns1__SetTmpTPDownloadPath(
    ns1__SetTmpTPDownloadPath*          ns1__SetTmpTPDownloadPath_,	///< Input parameter
    ns1__SetTmpTPDownloadPathResponse*  ns1__SetTmpTPDownloadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpTPUploadPath                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpTPUploadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpTPUploadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpTPUploadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpTPUploadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpTPUploadPath*            ns1__SetTmpTPUploadPath_,
    // output parameters:
    ns1__SetTmpTPUploadPathResponse*    ns1__SetTmpTPUploadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpTPUploadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpTPUploadPath*            ns1__SetTmpTPUploadPath_,
    // output parameters:
    ns1__SetTmpTPUploadPathResponse*    ns1__SetTmpTPUploadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpTPUploadPath SOAP
//gsoap ns1  service method-style:	SetTmpTPUploadPath document
//gsoap ns1  service method-encoding:	SetTmpTPUploadPath literal
//gsoap ns1  service method-input-action:	SetTmpTPUploadPath http://ws.abx/abxWsGest/SetTmpTPUploadPathRequest
//gsoap ns1  service method-output-action:	SetTmpTPUploadPath http://ws.abx/abxWsGest/SetTmpTPUploadPathResponse
int __ns1__SetTmpTPUploadPath(
    ns1__SetTmpTPUploadPath*            ns1__SetTmpTPUploadPath_,	///< Input parameter
    ns1__SetTmpTPUploadPathResponse*    ns1__SetTmpTPUploadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadTPEndFile                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadTPEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadTPEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadTPEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadTPEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadTPEndFile*               ns1__UploadTPEndFile_,
    // output parameters:
    ns1__UploadTPEndFileResponse*       ns1__UploadTPEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadTPEndFile(
    struct soap *soap,
    // input parameters:
    ns1__UploadTPEndFile*               ns1__UploadTPEndFile_,
    // output parameters:
    ns1__UploadTPEndFileResponse*       ns1__UploadTPEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadTPEndFile SOAP
//gsoap ns1  service method-style:	UploadTPEndFile document
//gsoap ns1  service method-encoding:	UploadTPEndFile literal
//gsoap ns1  service method-input-action:	UploadTPEndFile http://ws.abx/abxWsGest/UploadTPEndFileRequest
//gsoap ns1  service method-output-action:	UploadTPEndFile http://ws.abx/abxWsGest/UploadTPEndFileResponse
int __ns1__UploadTPEndFile(
    ns1__UploadTPEndFile*               ns1__UploadTPEndFile_,	///< Input parameter
    ns1__UploadTPEndFileResponse*       ns1__UploadTPEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadTPSendChunk                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadTPSendChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadTPSendChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadTPSendChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadTPSendChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadTPSendChunk*             ns1__UploadTPSendChunk_,
    // output parameters:
    ns1__UploadTPSendChunkResponse*     ns1__UploadTPSendChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadTPSendChunk(
    struct soap *soap,
    // input parameters:
    ns1__UploadTPSendChunk*             ns1__UploadTPSendChunk_,
    // output parameters:
    ns1__UploadTPSendChunkResponse*     ns1__UploadTPSendChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadTPSendChunk SOAP
//gsoap ns1  service method-style:	UploadTPSendChunk document
//gsoap ns1  service method-encoding:	UploadTPSendChunk literal
//gsoap ns1  service method-input-action:	UploadTPSendChunk http://ws.abx/abxWsGest/UploadTPSendChunkRequest
//gsoap ns1  service method-output-action:	UploadTPSendChunk http://ws.abx/abxWsGest/UploadTPSendChunkResponse
int __ns1__UploadTPSendChunk(
    ns1__UploadTPSendChunk*             ns1__UploadTPSendChunk_,	///< Input parameter
    ns1__UploadTPSendChunkResponse*     ns1__UploadTPSendChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadTPEndFile                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadTPEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadTPEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadTPEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadTPEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadTPEndFile*             ns1__DownloadTPEndFile_,
    // output parameters:
    ns1__DownloadTPEndFileResponse*     ns1__DownloadTPEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadTPEndFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadTPEndFile*             ns1__DownloadTPEndFile_,
    // output parameters:
    ns1__DownloadTPEndFileResponse*     ns1__DownloadTPEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadTPEndFile SOAP
//gsoap ns1  service method-style:	DownloadTPEndFile document
//gsoap ns1  service method-encoding:	DownloadTPEndFile literal
//gsoap ns1  service method-input-action:	DownloadTPEndFile http://ws.abx/abxWsGest/DownloadTPEndFileRequest
//gsoap ns1  service method-output-action:	DownloadTPEndFile http://ws.abx/abxWsGest/DownloadTPEndFileResponse
int __ns1__DownloadTPEndFile(
    ns1__DownloadTPEndFile*             ns1__DownloadTPEndFile_,	///< Input parameter
    ns1__DownloadTPEndFileResponse*     ns1__DownloadTPEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadTPFile                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadTPFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadTPFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadTPFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadTPFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadTPFile*                ns1__DownloadTPFile_,
    // output parameters:
    ns1__DownloadTPFileResponse*        ns1__DownloadTPFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadTPFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadTPFile*                ns1__DownloadTPFile_,
    // output parameters:
    ns1__DownloadTPFileResponse*        ns1__DownloadTPFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadTPFile SOAP
//gsoap ns1  service method-style:	DownloadTPFile document
//gsoap ns1  service method-encoding:	DownloadTPFile literal
//gsoap ns1  service method-input-action:	DownloadTPFile http://ws.abx/abxWsGest/DownloadTPFileRequest
//gsoap ns1  service method-output-action:	DownloadTPFile http://ws.abx/abxWsGest/DownloadTPFileResponse
int __ns1__DownloadTPFile(
    ns1__DownloadTPFile*                ns1__DownloadTPFile_,	///< Input parameter
    ns1__DownloadTPFileResponse*        ns1__DownloadTPFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileDetail                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileDetail" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileDetailRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileDetailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileDetail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileDetail*           ns1__GetDataTPFileDetail_,
    // output parameters:
    ns1__GetDataTPFileDetailResponse*   ns1__GetDataTPFileDetailResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileDetail(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileDetail*           ns1__GetDataTPFileDetail_,
    // output parameters:
    ns1__GetDataTPFileDetailResponse*   ns1__GetDataTPFileDetailResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileDetail SOAP
//gsoap ns1  service method-style:	GetDataTPFileDetail document
//gsoap ns1  service method-encoding:	GetDataTPFileDetail literal
//gsoap ns1  service method-input-action:	GetDataTPFileDetail http://ws.abx/abxWsGest/GetDataTPFileDetailRequest
//gsoap ns1  service method-output-action:	GetDataTPFileDetail http://ws.abx/abxWsGest/GetDataTPFileDetailResponse
int __ns1__GetDataTPFileDetail(
    ns1__GetDataTPFileDetail*           ns1__GetDataTPFileDetail_,	///< Input parameter
    ns1__GetDataTPFileDetailResponse*   ns1__GetDataTPFileDetailResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileList*             ns1__GetDataTPFileList_,
    // output parameters:
    ns1__GetDataTPFileListResponse*     ns1__GetDataTPFileListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileList(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileList*             ns1__GetDataTPFileList_,
    // output parameters:
    ns1__GetDataTPFileListResponse*     ns1__GetDataTPFileListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileList SOAP
//gsoap ns1  service method-style:	GetDataTPFileList document
//gsoap ns1  service method-encoding:	GetDataTPFileList literal
//gsoap ns1  service method-input-action:	GetDataTPFileList http://ws.abx/abxWsGest/GetDataTPFileListRequest
//gsoap ns1  service method-output-action:	GetDataTPFileList http://ws.abx/abxWsGest/GetDataTPFileListResponse
int __ns1__GetDataTPFileList(
    ns1__GetDataTPFileList*             ns1__GetDataTPFileList_,	///< Input parameter
    ns1__GetDataTPFileListResponse*     ns1__GetDataTPFileListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertTPFile                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertTPFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertTPFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertTPFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertTPFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertTPFile*                  ns1__InsertTPFile_,
    // output parameters:
    ns1__InsertTPFileResponse*          ns1__InsertTPFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertTPFile(
    struct soap *soap,
    // input parameters:
    ns1__InsertTPFile*                  ns1__InsertTPFile_,
    // output parameters:
    ns1__InsertTPFileResponse*          ns1__InsertTPFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertTPFile SOAP
//gsoap ns1  service method-style:	InsertTPFile document
//gsoap ns1  service method-encoding:	InsertTPFile literal
//gsoap ns1  service method-input-action:	InsertTPFile http://ws.abx/abxWsGest/InsertTPFileRequest
//gsoap ns1  service method-output-action:	InsertTPFile http://ws.abx/abxWsGest/InsertTPFileResponse
int __ns1__InsertTPFile(
    ns1__InsertTPFile*                  ns1__InsertTPFile_,	///< Input parameter
    ns1__InsertTPFileResponse*          ns1__InsertTPFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteTPFileById                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteTPFileById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteTPFileByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteTPFileByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteTPFileById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteTPFileById*              ns1__DeleteTPFileById_,
    // output parameters:
    ns1__DeleteTPFileByIdResponse*      ns1__DeleteTPFileByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteTPFileById(
    struct soap *soap,
    // input parameters:
    ns1__DeleteTPFileById*              ns1__DeleteTPFileById_,
    // output parameters:
    ns1__DeleteTPFileByIdResponse*      ns1__DeleteTPFileByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteTPFileById SOAP
//gsoap ns1  service method-style:	DeleteTPFileById document
//gsoap ns1  service method-encoding:	DeleteTPFileById literal
//gsoap ns1  service method-input-action:	DeleteTPFileById http://ws.abx/abxWsGest/DeleteTPFileByIdRequest
//gsoap ns1  service method-output-action:	DeleteTPFileById http://ws.abx/abxWsGest/DeleteTPFileByIdResponse
int __ns1__DeleteTPFileById(
    ns1__DeleteTPFileById*              ns1__DeleteTPFileById_,	///< Input parameter
    ns1__DeleteTPFileByIdResponse*      ns1__DeleteTPFileByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteTPFileByCode                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteTPFileByCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteTPFileByCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteTPFileByCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteTPFileByCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteTPFileByCode*            ns1__DeleteTPFileByCode_,
    // output parameters:
    ns1__DeleteTPFileByCodeResponse*    ns1__DeleteTPFileByCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteTPFileByCode(
    struct soap *soap,
    // input parameters:
    ns1__DeleteTPFileByCode*            ns1__DeleteTPFileByCode_,
    // output parameters:
    ns1__DeleteTPFileByCodeResponse*    ns1__DeleteTPFileByCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteTPFileByCode SOAP
//gsoap ns1  service method-style:	DeleteTPFileByCode document
//gsoap ns1  service method-encoding:	DeleteTPFileByCode literal
//gsoap ns1  service method-input-action:	DeleteTPFileByCode http://ws.abx/abxWsGest/DeleteTPFileByCodeRequest
//gsoap ns1  service method-output-action:	DeleteTPFileByCode http://ws.abx/abxWsGest/DeleteTPFileByCodeResponse
int __ns1__DeleteTPFileByCode(
    ns1__DeleteTPFileByCode*            ns1__DeleteTPFileByCode_,	///< Input parameter
    ns1__DeleteTPFileByCodeResponse*    ns1__DeleteTPFileByCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileListByUsername                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileListByUsername" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileListByUsernameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileListByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileListByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileListByUsername*   ns1__GetDataTPFileListByUsername_,
    // output parameters:
    ns1__GetDataTPFileListByUsernameResponse* ns1__GetDataTPFileListByUsernameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileListByUsername(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileListByUsername*   ns1__GetDataTPFileListByUsername_,
    // output parameters:
    ns1__GetDataTPFileListByUsernameResponse* ns1__GetDataTPFileListByUsernameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileListByUsername SOAP
//gsoap ns1  service method-style:	GetDataTPFileListByUsername document
//gsoap ns1  service method-encoding:	GetDataTPFileListByUsername literal
//gsoap ns1  service method-input-action:	GetDataTPFileListByUsername http://ws.abx/abxWsGest/GetDataTPFileListByUsernameRequest
//gsoap ns1  service method-output-action:	GetDataTPFileListByUsername http://ws.abx/abxWsGest/GetDataTPFileListByUsernameResponse
int __ns1__GetDataTPFileListByUsername(
    ns1__GetDataTPFileListByUsername*   ns1__GetDataTPFileListByUsername_,	///< Input parameter
    ns1__GetDataTPFileListByUsernameResponse* ns1__GetDataTPFileListByUsernameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileListByContainer                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileListByContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileListByContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileListByContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileListByContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileListByContainer*  ns1__GetDataTPFileListByContainer_,
    // output parameters:
    ns1__GetDataTPFileListByContainerResponse* ns1__GetDataTPFileListByContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileListByContainer(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileListByContainer*  ns1__GetDataTPFileListByContainer_,
    // output parameters:
    ns1__GetDataTPFileListByContainerResponse* ns1__GetDataTPFileListByContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileListByContainer SOAP
//gsoap ns1  service method-style:	GetDataTPFileListByContainer document
//gsoap ns1  service method-encoding:	GetDataTPFileListByContainer literal
//gsoap ns1  service method-input-action:	GetDataTPFileListByContainer http://ws.abx/abxWsGest/GetDataTPFileListByContainerRequest
//gsoap ns1  service method-output-action:	GetDataTPFileListByContainer http://ws.abx/abxWsGest/GetDataTPFileListByContainerResponse
int __ns1__GetDataTPFileListByContainer(
    ns1__GetDataTPFileListByContainer*  ns1__GetDataTPFileListByContainer_,	///< Input parameter
    ns1__GetDataTPFileListByContainerResponse* ns1__GetDataTPFileListByContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileListByDocument                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileListByDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileListByDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileListByDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileListByDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileListByDocument*   ns1__GetDataTPFileListByDocument_,
    // output parameters:
    ns1__GetDataTPFileListByDocumentResponse* ns1__GetDataTPFileListByDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileListByDocument(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileListByDocument*   ns1__GetDataTPFileListByDocument_,
    // output parameters:
    ns1__GetDataTPFileListByDocumentResponse* ns1__GetDataTPFileListByDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileListByDocument SOAP
//gsoap ns1  service method-style:	GetDataTPFileListByDocument document
//gsoap ns1  service method-encoding:	GetDataTPFileListByDocument literal
//gsoap ns1  service method-input-action:	GetDataTPFileListByDocument http://ws.abx/abxWsGest/GetDataTPFileListByDocumentRequest
//gsoap ns1  service method-output-action:	GetDataTPFileListByDocument http://ws.abx/abxWsGest/GetDataTPFileListByDocumentResponse
int __ns1__GetDataTPFileListByDocument(
    ns1__GetDataTPFileListByDocument*   ns1__GetDataTPFileListByDocument_,	///< Input parameter
    ns1__GetDataTPFileListByDocumentResponse* ns1__GetDataTPFileListByDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataTPFileListByName                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataTPFileListByName" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataTPFileListByNameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataTPFileListByNameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataTPFileListByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataTPFileListByName*       ns1__GetDataTPFileListByName_,
    // output parameters:
    ns1__GetDataTPFileListByNameResponse* ns1__GetDataTPFileListByNameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataTPFileListByName(
    struct soap *soap,
    // input parameters:
    ns1__GetDataTPFileListByName*       ns1__GetDataTPFileListByName_,
    // output parameters:
    ns1__GetDataTPFileListByNameResponse* ns1__GetDataTPFileListByNameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataTPFileListByName SOAP
//gsoap ns1  service method-style:	GetDataTPFileListByName document
//gsoap ns1  service method-encoding:	GetDataTPFileListByName literal
//gsoap ns1  service method-input-action:	GetDataTPFileListByName http://ws.abx/abxWsGest/GetDataTPFileListByNameRequest
//gsoap ns1  service method-output-action:	GetDataTPFileListByName http://ws.abx/abxWsGest/GetDataTPFileListByNameResponse
int __ns1__GetDataTPFileListByName(
    ns1__GetDataTPFileListByName*       ns1__GetDataTPFileListByName_,	///< Input parameter
    ns1__GetDataTPFileListByNameResponse* ns1__GetDataTPFileListByNameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDefaultObjActList                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDefaultObjActList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDefaultObjActListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDefaultObjActListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDefaultObjActList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDefaultObjActList*          ns1__GetDefaultObjActList_,
    // output parameters:
    ns1__GetDefaultObjActListResponse*  ns1__GetDefaultObjActListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDefaultObjActList(
    struct soap *soap,
    // input parameters:
    ns1__GetDefaultObjActList*          ns1__GetDefaultObjActList_,
    // output parameters:
    ns1__GetDefaultObjActListResponse*  ns1__GetDefaultObjActListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDefaultObjActList SOAP
//gsoap ns1  service method-style:	GetDefaultObjActList document
//gsoap ns1  service method-encoding:	GetDefaultObjActList literal
//gsoap ns1  service method-input-action:	GetDefaultObjActList http://ws.abx/abxWsGest/GetDefaultObjActListRequest
//gsoap ns1  service method-output-action:	GetDefaultObjActList http://ws.abx/abxWsGest/GetDefaultObjActListResponse
int __ns1__GetDefaultObjActList(
    ns1__GetDefaultObjActList*          ns1__GetDefaultObjActList_,	///< Input parameter
    ns1__GetDefaultObjActListResponse*  ns1__GetDefaultObjActListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__EndPermissionSettings                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__EndPermissionSettings" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/EndPermissionSettingsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/EndPermissionSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__EndPermissionSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__EndPermissionSettings*         ns1__EndPermissionSettings_,
    // output parameters:
    ns1__EndPermissionSettingsResponse* ns1__EndPermissionSettingsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__EndPermissionSettings(
    struct soap *soap,
    // input parameters:
    ns1__EndPermissionSettings*         ns1__EndPermissionSettings_,
    // output parameters:
    ns1__EndPermissionSettingsResponse* ns1__EndPermissionSettingsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	EndPermissionSettings SOAP
//gsoap ns1  service method-style:	EndPermissionSettings document
//gsoap ns1  service method-encoding:	EndPermissionSettings literal
//gsoap ns1  service method-input-action:	EndPermissionSettings http://ws.abx/abxWsGest/EndPermissionSettingsRequest
//gsoap ns1  service method-output-action:	EndPermissionSettings http://ws.abx/abxWsGest/EndPermissionSettingsResponse
int __ns1__EndPermissionSettings(
    ns1__EndPermissionSettings*         ns1__EndPermissionSettings_,	///< Input parameter
    ns1__EndPermissionSettingsResponse* ns1__EndPermissionSettingsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadGetChunkWA                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadGetChunkWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadGetChunkWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadGetChunkWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadGetChunkWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadGetChunkWA*            ns1__DownloadGetChunkWA_,
    // output parameters:
    ns1__DownloadGetChunkWAResponse*    ns1__DownloadGetChunkWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadGetChunkWA(
    struct soap *soap,
    // input parameters:
    ns1__DownloadGetChunkWA*            ns1__DownloadGetChunkWA_,
    // output parameters:
    ns1__DownloadGetChunkWAResponse*    ns1__DownloadGetChunkWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadGetChunkWA SOAP
//gsoap ns1  service method-style:	DownloadGetChunkWA document
//gsoap ns1  service method-encoding:	DownloadGetChunkWA literal
//gsoap ns1  service method-input-action:	DownloadGetChunkWA http://ws.abx/abxWsGest/DownloadGetChunkWARequest
//gsoap ns1  service method-output-action:	DownloadGetChunkWA http://ws.abx/abxWsGest/DownloadGetChunkWAResponse
int __ns1__DownloadGetChunkWA(
    ns1__DownloadGetChunkWA*            ns1__DownloadGetChunkWA_,	///< Input parameter
    ns1__DownloadGetChunkWAResponse*    ns1__DownloadGetChunkWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSchedulerTaskByTaskTypeId                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSchedulerTaskByTaskTypeId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSchedulerTaskByTaskTypeIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSchedulerTaskByTaskTypeIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSchedulerTaskByTaskTypeId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSchedulerTaskByTaskTypeId*  ns1__GetSchedulerTaskByTaskTypeId_,
    // output parameters:
    ns1__GetSchedulerTaskByTaskTypeIdResponse* ns1__GetSchedulerTaskByTaskTypeIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSchedulerTaskByTaskTypeId(
    struct soap *soap,
    // input parameters:
    ns1__GetSchedulerTaskByTaskTypeId*  ns1__GetSchedulerTaskByTaskTypeId_,
    // output parameters:
    ns1__GetSchedulerTaskByTaskTypeIdResponse* ns1__GetSchedulerTaskByTaskTypeIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSchedulerTaskByTaskTypeId SOAP
//gsoap ns1  service method-style:	GetSchedulerTaskByTaskTypeId document
//gsoap ns1  service method-encoding:	GetSchedulerTaskByTaskTypeId literal
//gsoap ns1  service method-input-action:	GetSchedulerTaskByTaskTypeId http://ws.abx/abxWsGest/GetSchedulerTaskByTaskTypeIdRequest
//gsoap ns1  service method-output-action:	GetSchedulerTaskByTaskTypeId http://ws.abx/abxWsGest/GetSchedulerTaskByTaskTypeIdResponse
int __ns1__GetSchedulerTaskByTaskTypeId(
    ns1__GetSchedulerTaskByTaskTypeId*  ns1__GetSchedulerTaskByTaskTypeId_,	///< Input parameter
    ns1__GetSchedulerTaskByTaskTypeIdResponse* ns1__GetSchedulerTaskByTaskTypeIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllFilter                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllFilter" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetAllFilterRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetAllFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetAllFilter*                  ns1__GetAllFilter_,
    // output parameters:
    ns1__GetAllFilterResponse*          ns1__GetAllFilterResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllFilter(
    struct soap *soap,
    // input parameters:
    ns1__GetAllFilter*                  ns1__GetAllFilter_,
    // output parameters:
    ns1__GetAllFilterResponse*          ns1__GetAllFilterResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllFilter SOAP
//gsoap ns1  service method-style:	GetAllFilter document
//gsoap ns1  service method-encoding:	GetAllFilter literal
//gsoap ns1  service method-input-action:	GetAllFilter http://ws.abx/abxWsGest/GetAllFilterRequest
//gsoap ns1  service method-output-action:	GetAllFilter http://ws.abx/abxWsGest/GetAllFilterResponse
int __ns1__GetAllFilter(
    ns1__GetAllFilter*                  ns1__GetAllFilter_,	///< Input parameter
    ns1__GetAllFilterResponse*          ns1__GetAllFilterResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanAddDigitalSignature                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanAddDigitalSignature" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanAddDigitalSignatureRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanAddDigitalSignatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanAddDigitalSignature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanAddDigitalSignature*        ns1__CanAddDigitalSignature_,
    // output parameters:
    ns1__CanAddDigitalSignatureResponse* ns1__CanAddDigitalSignatureResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanAddDigitalSignature(
    struct soap *soap,
    // input parameters:
    ns1__CanAddDigitalSignature*        ns1__CanAddDigitalSignature_,
    // output parameters:
    ns1__CanAddDigitalSignatureResponse* ns1__CanAddDigitalSignatureResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanAddDigitalSignature SOAP
//gsoap ns1  service method-style:	CanAddDigitalSignature document
//gsoap ns1  service method-encoding:	CanAddDigitalSignature literal
//gsoap ns1  service method-input-action:	CanAddDigitalSignature http://ws.abx/abxWsGest/CanAddDigitalSignatureRequest
//gsoap ns1  service method-output-action:	CanAddDigitalSignature http://ws.abx/abxWsGest/CanAddDigitalSignatureResponse
int __ns1__CanAddDigitalSignature(
    ns1__CanAddDigitalSignature*        ns1__CanAddDigitalSignature_,	///< Input parameter
    ns1__CanAddDigitalSignatureResponse* ns1__CanAddDigitalSignatureResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKTasks                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKTasks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKTasksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKTasksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKTasks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKTasks*                   ns1__GetSDKTasks_,
    // output parameters:
    ns1__GetSDKTasksResponse*           ns1__GetSDKTasksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKTasks(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKTasks*                   ns1__GetSDKTasks_,
    // output parameters:
    ns1__GetSDKTasksResponse*           ns1__GetSDKTasksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKTasks SOAP
//gsoap ns1  service method-style:	GetSDKTasks document
//gsoap ns1  service method-encoding:	GetSDKTasks literal
//gsoap ns1  service method-input-action:	GetSDKTasks http://ws.abx/abxWsGest/GetSDKTasksRequest
//gsoap ns1  service method-output-action:	GetSDKTasks http://ws.abx/abxWsGest/GetSDKTasksResponse
int __ns1__GetSDKTasks(
    ns1__GetSDKTasks*                   ns1__GetSDKTasks_,	///< Input parameter
    ns1__GetSDKTasksResponse*           ns1__GetSDKTasksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKTaskWatchFolder                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKTaskWatchFolder" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKTaskWatchFolderRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKTaskWatchFolderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKTaskWatchFolder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKTaskWatchFolder*         ns1__GetSDKTaskWatchFolder_,
    // output parameters:
    ns1__GetSDKTaskWatchFolderResponse* ns1__GetSDKTaskWatchFolderResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKTaskWatchFolder(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKTaskWatchFolder*         ns1__GetSDKTaskWatchFolder_,
    // output parameters:
    ns1__GetSDKTaskWatchFolderResponse* ns1__GetSDKTaskWatchFolderResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKTaskWatchFolder SOAP
//gsoap ns1  service method-style:	GetSDKTaskWatchFolder document
//gsoap ns1  service method-encoding:	GetSDKTaskWatchFolder literal
//gsoap ns1  service method-input-action:	GetSDKTaskWatchFolder http://ws.abx/abxWsGest/GetSDKTaskWatchFolderRequest
//gsoap ns1  service method-output-action:	GetSDKTaskWatchFolder http://ws.abx/abxWsGest/GetSDKTaskWatchFolderResponse
int __ns1__GetSDKTaskWatchFolder(
    ns1__GetSDKTaskWatchFolder*         ns1__GetSDKTaskWatchFolder_,	///< Input parameter
    ns1__GetSDKTaskWatchFolderResponse* ns1__GetSDKTaskWatchFolderResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKRules" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKRulesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKRules*                   ns1__GetSDKRules_,
    // output parameters:
    ns1__GetSDKRulesResponse*           ns1__GetSDKRulesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKRules(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKRules*                   ns1__GetSDKRules_,
    // output parameters:
    ns1__GetSDKRulesResponse*           ns1__GetSDKRulesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKRules SOAP
//gsoap ns1  service method-style:	GetSDKRules document
//gsoap ns1  service method-encoding:	GetSDKRules literal
//gsoap ns1  service method-input-action:	GetSDKRules http://ws.abx/abxWsGest/GetSDKRulesRequest
//gsoap ns1  service method-output-action:	GetSDKRules http://ws.abx/abxWsGest/GetSDKRulesResponse
int __ns1__GetSDKRules(
    ns1__GetSDKRules*                   ns1__GetSDKRules_,	///< Input parameter
    ns1__GetSDKRulesResponse*           ns1__GetSDKRulesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateSDKTask                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateSDKTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateSDKTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateSDKTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateSDKTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateSDKTask*                 ns1__CreateSDKTask_,
    // output parameters:
    ns1__CreateSDKTaskResponse*         ns1__CreateSDKTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateSDKTask(
    struct soap *soap,
    // input parameters:
    ns1__CreateSDKTask*                 ns1__CreateSDKTask_,
    // output parameters:
    ns1__CreateSDKTaskResponse*         ns1__CreateSDKTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateSDKTask SOAP
//gsoap ns1  service method-style:	CreateSDKTask document
//gsoap ns1  service method-encoding:	CreateSDKTask literal
//gsoap ns1  service method-input-action:	CreateSDKTask http://ws.abx/abxWsGest/CreateSDKTaskRequest
//gsoap ns1  service method-output-action:	CreateSDKTask http://ws.abx/abxWsGest/CreateSDKTaskResponse
int __ns1__CreateSDKTask(
    ns1__CreateSDKTask*                 ns1__CreateSDKTask_,	///< Input parameter
    ns1__CreateSDKTaskResponse*         ns1__CreateSDKTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifySDKTask                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifySDKTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifySDKTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifySDKTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifySDKTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifySDKTask*                 ns1__ModifySDKTask_,
    // output parameters:
    ns1__ModifySDKTaskResponse*         ns1__ModifySDKTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifySDKTask(
    struct soap *soap,
    // input parameters:
    ns1__ModifySDKTask*                 ns1__ModifySDKTask_,
    // output parameters:
    ns1__ModifySDKTaskResponse*         ns1__ModifySDKTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifySDKTask SOAP
//gsoap ns1  service method-style:	ModifySDKTask document
//gsoap ns1  service method-encoding:	ModifySDKTask literal
//gsoap ns1  service method-input-action:	ModifySDKTask http://ws.abx/abxWsGest/ModifySDKTaskRequest
//gsoap ns1  service method-output-action:	ModifySDKTask http://ws.abx/abxWsGest/ModifySDKTaskResponse
int __ns1__ModifySDKTask(
    ns1__ModifySDKTask*                 ns1__ModifySDKTask_,	///< Input parameter
    ns1__ModifySDKTaskResponse*         ns1__ModifySDKTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKTaskFieldMapping                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKTaskFieldMapping" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKTaskFieldMappingRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKTaskFieldMappingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKTaskFieldMapping(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKTaskFieldMapping*        ns1__GetSDKTaskFieldMapping_,
    // output parameters:
    ns1__GetSDKTaskFieldMappingResponse* ns1__GetSDKTaskFieldMappingResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKTaskFieldMapping(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKTaskFieldMapping*        ns1__GetSDKTaskFieldMapping_,
    // output parameters:
    ns1__GetSDKTaskFieldMappingResponse* ns1__GetSDKTaskFieldMappingResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKTaskFieldMapping SOAP
//gsoap ns1  service method-style:	GetSDKTaskFieldMapping document
//gsoap ns1  service method-encoding:	GetSDKTaskFieldMapping literal
//gsoap ns1  service method-input-action:	GetSDKTaskFieldMapping http://ws.abx/abxWsGest/GetSDKTaskFieldMappingRequest
//gsoap ns1  service method-output-action:	GetSDKTaskFieldMapping http://ws.abx/abxWsGest/GetSDKTaskFieldMappingResponse
int __ns1__GetSDKTaskFieldMapping(
    ns1__GetSDKTaskFieldMapping*        ns1__GetSDKTaskFieldMapping_,	///< Input parameter
    ns1__GetSDKTaskFieldMappingResponse* ns1__GetSDKTaskFieldMappingResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateSDKTaskFieldMapping                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateSDKTaskFieldMapping" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateSDKTaskFieldMappingRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateSDKTaskFieldMappingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateSDKTaskFieldMapping(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateSDKTaskFieldMapping*     ns1__CreateSDKTaskFieldMapping_,
    // output parameters:
    ns1__CreateSDKTaskFieldMappingResponse* ns1__CreateSDKTaskFieldMappingResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateSDKTaskFieldMapping(
    struct soap *soap,
    // input parameters:
    ns1__CreateSDKTaskFieldMapping*     ns1__CreateSDKTaskFieldMapping_,
    // output parameters:
    ns1__CreateSDKTaskFieldMappingResponse* ns1__CreateSDKTaskFieldMappingResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateSDKTaskFieldMapping SOAP
//gsoap ns1  service method-style:	CreateSDKTaskFieldMapping document
//gsoap ns1  service method-encoding:	CreateSDKTaskFieldMapping literal
//gsoap ns1  service method-input-action:	CreateSDKTaskFieldMapping http://ws.abx/abxWsGest/CreateSDKTaskFieldMappingRequest
//gsoap ns1  service method-output-action:	CreateSDKTaskFieldMapping http://ws.abx/abxWsGest/CreateSDKTaskFieldMappingResponse
int __ns1__CreateSDKTaskFieldMapping(
    ns1__CreateSDKTaskFieldMapping*     ns1__CreateSDKTaskFieldMapping_,	///< Input parameter
    ns1__CreateSDKTaskFieldMappingResponse* ns1__CreateSDKTaskFieldMappingResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteSDKTaskFieldMapping                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteSDKTaskFieldMapping" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteSDKTaskFieldMappingRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteSDKTaskFieldMappingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteSDKTaskFieldMapping(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteSDKTaskFieldMapping*     ns1__DeleteSDKTaskFieldMapping_,
    // output parameters:
    ns1__DeleteSDKTaskFieldMappingResponse* ns1__DeleteSDKTaskFieldMappingResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteSDKTaskFieldMapping(
    struct soap *soap,
    // input parameters:
    ns1__DeleteSDKTaskFieldMapping*     ns1__DeleteSDKTaskFieldMapping_,
    // output parameters:
    ns1__DeleteSDKTaskFieldMappingResponse* ns1__DeleteSDKTaskFieldMappingResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteSDKTaskFieldMapping SOAP
//gsoap ns1  service method-style:	DeleteSDKTaskFieldMapping document
//gsoap ns1  service method-encoding:	DeleteSDKTaskFieldMapping literal
//gsoap ns1  service method-input-action:	DeleteSDKTaskFieldMapping http://ws.abx/abxWsGest/DeleteSDKTaskFieldMappingRequest
//gsoap ns1  service method-output-action:	DeleteSDKTaskFieldMapping http://ws.abx/abxWsGest/DeleteSDKTaskFieldMappingResponse
int __ns1__DeleteSDKTaskFieldMapping(
    ns1__DeleteSDKTaskFieldMapping*     ns1__DeleteSDKTaskFieldMapping_,	///< Input parameter
    ns1__DeleteSDKTaskFieldMappingResponse* ns1__DeleteSDKTaskFieldMappingResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__StoreSDKVariable                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__StoreSDKVariable" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/StoreSDKVariableRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/StoreSDKVariableResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__StoreSDKVariable(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__StoreSDKVariable*              ns1__StoreSDKVariable_,
    // output parameters:
    ns1__StoreSDKVariableResponse*      ns1__StoreSDKVariableResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__StoreSDKVariable(
    struct soap *soap,
    // input parameters:
    ns1__StoreSDKVariable*              ns1__StoreSDKVariable_,
    // output parameters:
    ns1__StoreSDKVariableResponse*      ns1__StoreSDKVariableResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	StoreSDKVariable SOAP
//gsoap ns1  service method-style:	StoreSDKVariable document
//gsoap ns1  service method-encoding:	StoreSDKVariable literal
//gsoap ns1  service method-input-action:	StoreSDKVariable http://ws.abx/abxWsGest/StoreSDKVariableRequest
//gsoap ns1  service method-output-action:	StoreSDKVariable http://ws.abx/abxWsGest/StoreSDKVariableResponse
int __ns1__StoreSDKVariable(
    ns1__StoreSDKVariable*              ns1__StoreSDKVariable_,	///< Input parameter
    ns1__StoreSDKVariableResponse*      ns1__StoreSDKVariableResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKVariables                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKVariables" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKVariablesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKVariablesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKVariables(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKVariables*               ns1__GetSDKVariables_,
    // output parameters:
    ns1__GetSDKVariablesResponse*       ns1__GetSDKVariablesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKVariables(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKVariables*               ns1__GetSDKVariables_,
    // output parameters:
    ns1__GetSDKVariablesResponse*       ns1__GetSDKVariablesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKVariables SOAP
//gsoap ns1  service method-style:	GetSDKVariables document
//gsoap ns1  service method-encoding:	GetSDKVariables literal
//gsoap ns1  service method-input-action:	GetSDKVariables http://ws.abx/abxWsGest/GetSDKVariablesRequest
//gsoap ns1  service method-output-action:	GetSDKVariables http://ws.abx/abxWsGest/GetSDKVariablesResponse
int __ns1__GetSDKVariables(
    ns1__GetSDKVariables*               ns1__GetSDKVariables_,	///< Input parameter
    ns1__GetSDKVariablesResponse*       ns1__GetSDKVariablesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKTaskExcelPreview                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKTaskExcelPreview" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKTaskExcelPreviewRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKTaskExcelPreviewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKTaskExcelPreview(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKTaskExcelPreview*        ns1__GetSDKTaskExcelPreview_,
    // output parameters:
    ns1__GetSDKTaskExcelPreviewResponse* ns1__GetSDKTaskExcelPreviewResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKTaskExcelPreview(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKTaskExcelPreview*        ns1__GetSDKTaskExcelPreview_,
    // output parameters:
    ns1__GetSDKTaskExcelPreviewResponse* ns1__GetSDKTaskExcelPreviewResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKTaskExcelPreview SOAP
//gsoap ns1  service method-style:	GetSDKTaskExcelPreview document
//gsoap ns1  service method-encoding:	GetSDKTaskExcelPreview literal
//gsoap ns1  service method-input-action:	GetSDKTaskExcelPreview http://ws.abx/abxWsGest/GetSDKTaskExcelPreviewRequest
//gsoap ns1  service method-output-action:	GetSDKTaskExcelPreview http://ws.abx/abxWsGest/GetSDKTaskExcelPreviewResponse
int __ns1__GetSDKTaskExcelPreview(
    ns1__GetSDKTaskExcelPreview*        ns1__GetSDKTaskExcelPreview_,	///< Input parameter
    ns1__GetSDKTaskExcelPreviewResponse* ns1__GetSDKTaskExcelPreviewResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ValidateSDKTask                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ValidateSDKTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ValidateSDKTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ValidateSDKTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ValidateSDKTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ValidateSDKTask*               ns1__ValidateSDKTask_,
    // output parameters:
    ns1__ValidateSDKTaskResponse*       ns1__ValidateSDKTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ValidateSDKTask(
    struct soap *soap,
    // input parameters:
    ns1__ValidateSDKTask*               ns1__ValidateSDKTask_,
    // output parameters:
    ns1__ValidateSDKTaskResponse*       ns1__ValidateSDKTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ValidateSDKTask SOAP
//gsoap ns1  service method-style:	ValidateSDKTask document
//gsoap ns1  service method-encoding:	ValidateSDKTask literal
//gsoap ns1  service method-input-action:	ValidateSDKTask http://ws.abx/abxWsGest/ValidateSDKTaskRequest
//gsoap ns1  service method-output-action:	ValidateSDKTask http://ws.abx/abxWsGest/ValidateSDKTaskResponse
int __ns1__ValidateSDKTask(
    ns1__ValidateSDKTask*               ns1__ValidateSDKTask_,	///< Input parameter
    ns1__ValidateSDKTaskResponse*       ns1__ValidateSDKTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__VerifySDKTaskNameExists                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__VerifySDKTaskNameExists" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/VerifySDKTaskNameExistsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/VerifySDKTaskNameExistsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__VerifySDKTaskNameExists(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__VerifySDKTaskNameExists*       ns1__VerifySDKTaskNameExists_,
    // output parameters:
    ns1__VerifySDKTaskNameExistsResponse* ns1__VerifySDKTaskNameExistsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__VerifySDKTaskNameExists(
    struct soap *soap,
    // input parameters:
    ns1__VerifySDKTaskNameExists*       ns1__VerifySDKTaskNameExists_,
    // output parameters:
    ns1__VerifySDKTaskNameExistsResponse* ns1__VerifySDKTaskNameExistsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	VerifySDKTaskNameExists SOAP
//gsoap ns1  service method-style:	VerifySDKTaskNameExists document
//gsoap ns1  service method-encoding:	VerifySDKTaskNameExists literal
//gsoap ns1  service method-input-action:	VerifySDKTaskNameExists http://ws.abx/abxWsGest/VerifySDKTaskNameExistsRequest
//gsoap ns1  service method-output-action:	VerifySDKTaskNameExists http://ws.abx/abxWsGest/VerifySDKTaskNameExistsResponse
int __ns1__VerifySDKTaskNameExists(
    ns1__VerifySDKTaskNameExists*       ns1__VerifySDKTaskNameExists_,	///< Input parameter
    ns1__VerifySDKTaskNameExistsResponse* ns1__VerifySDKTaskNameExistsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadPreviewFile                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadPreviewFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadPreviewFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadPreviewFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadPreviewFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadPreviewFile*             ns1__UploadPreviewFile_,
    // output parameters:
    ns1__UploadPreviewFileResponse*     ns1__UploadPreviewFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadPreviewFile(
    struct soap *soap,
    // input parameters:
    ns1__UploadPreviewFile*             ns1__UploadPreviewFile_,
    // output parameters:
    ns1__UploadPreviewFileResponse*     ns1__UploadPreviewFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadPreviewFile SOAP
//gsoap ns1  service method-style:	UploadPreviewFile document
//gsoap ns1  service method-encoding:	UploadPreviewFile literal
//gsoap ns1  service method-input-action:	UploadPreviewFile http://ws.abx/abxWsGest/UploadPreviewFileRequest
//gsoap ns1  service method-output-action:	UploadPreviewFile http://ws.abx/abxWsGest/UploadPreviewFileResponse
int __ns1__UploadPreviewFile(
    ns1__UploadPreviewFile*             ns1__UploadPreviewFile_,	///< Input parameter
    ns1__UploadPreviewFileResponse*     ns1__UploadPreviewFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateSDKTaskWatchFolder                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateSDKTaskWatchFolder" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateSDKTaskWatchFolderRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateSDKTaskWatchFolderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateSDKTaskWatchFolder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateSDKTaskWatchFolder*      ns1__CreateSDKTaskWatchFolder_,
    // output parameters:
    ns1__CreateSDKTaskWatchFolderResponse* ns1__CreateSDKTaskWatchFolderResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateSDKTaskWatchFolder(
    struct soap *soap,
    // input parameters:
    ns1__CreateSDKTaskWatchFolder*      ns1__CreateSDKTaskWatchFolder_,
    // output parameters:
    ns1__CreateSDKTaskWatchFolderResponse* ns1__CreateSDKTaskWatchFolderResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateSDKTaskWatchFolder SOAP
//gsoap ns1  service method-style:	CreateSDKTaskWatchFolder document
//gsoap ns1  service method-encoding:	CreateSDKTaskWatchFolder literal
//gsoap ns1  service method-input-action:	CreateSDKTaskWatchFolder http://ws.abx/abxWsGest/CreateSDKTaskWatchFolderRequest
//gsoap ns1  service method-output-action:	CreateSDKTaskWatchFolder http://ws.abx/abxWsGest/CreateSDKTaskWatchFolderResponse
int __ns1__CreateSDKTaskWatchFolder(
    ns1__CreateSDKTaskWatchFolder*      ns1__CreateSDKTaskWatchFolder_,	///< Input parameter
    ns1__CreateSDKTaskWatchFolderResponse* ns1__CreateSDKTaskWatchFolderResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifySDKTaskWatchFolder                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifySDKTaskWatchFolder" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifySDKTaskWatchFolderRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifySDKTaskWatchFolderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifySDKTaskWatchFolder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifySDKTaskWatchFolder*      ns1__ModifySDKTaskWatchFolder_,
    // output parameters:
    ns1__ModifySDKTaskWatchFolderResponse* ns1__ModifySDKTaskWatchFolderResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifySDKTaskWatchFolder(
    struct soap *soap,
    // input parameters:
    ns1__ModifySDKTaskWatchFolder*      ns1__ModifySDKTaskWatchFolder_,
    // output parameters:
    ns1__ModifySDKTaskWatchFolderResponse* ns1__ModifySDKTaskWatchFolderResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifySDKTaskWatchFolder SOAP
//gsoap ns1  service method-style:	ModifySDKTaskWatchFolder document
//gsoap ns1  service method-encoding:	ModifySDKTaskWatchFolder literal
//gsoap ns1  service method-input-action:	ModifySDKTaskWatchFolder http://ws.abx/abxWsGest/ModifySDKTaskWatchFolderRequest
//gsoap ns1  service method-output-action:	ModifySDKTaskWatchFolder http://ws.abx/abxWsGest/ModifySDKTaskWatchFolderResponse
int __ns1__ModifySDKTaskWatchFolder(
    ns1__ModifySDKTaskWatchFolder*      ns1__ModifySDKTaskWatchFolder_,	///< Input parameter
    ns1__ModifySDKTaskWatchFolderResponse* ns1__ModifySDKTaskWatchFolderResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKWatchFolderDirectories                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKWatchFolderDirectories" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKWatchFolderDirectoriesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKWatchFolderDirectoriesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKWatchFolderDirectories(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKWatchFolderDirectories*  ns1__GetSDKWatchFolderDirectories_,
    // output parameters:
    ns1__GetSDKWatchFolderDirectoriesResponse* ns1__GetSDKWatchFolderDirectoriesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKWatchFolderDirectories(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKWatchFolderDirectories*  ns1__GetSDKWatchFolderDirectories_,
    // output parameters:
    ns1__GetSDKWatchFolderDirectoriesResponse* ns1__GetSDKWatchFolderDirectoriesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKWatchFolderDirectories SOAP
//gsoap ns1  service method-style:	GetSDKWatchFolderDirectories document
//gsoap ns1  service method-encoding:	GetSDKWatchFolderDirectories literal
//gsoap ns1  service method-input-action:	GetSDKWatchFolderDirectories http://ws.abx/abxWsGest/GetSDKWatchFolderDirectoriesRequest
//gsoap ns1  service method-output-action:	GetSDKWatchFolderDirectories http://ws.abx/abxWsGest/GetSDKWatchFolderDirectoriesResponse
int __ns1__GetSDKWatchFolderDirectories(
    ns1__GetSDKWatchFolderDirectories*  ns1__GetSDKWatchFolderDirectories_,	///< Input parameter
    ns1__GetSDKWatchFolderDirectoriesResponse* ns1__GetSDKWatchFolderDirectoriesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKImagesFromPDFTemplate                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKImagesFromPDFTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKImagesFromPDFTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKImagesFromPDFTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKImagesFromPDFTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKImagesFromPDFTemplate*   ns1__GetSDKImagesFromPDFTemplate_,
    // output parameters:
    ns1__GetSDKImagesFromPDFTemplateResponse* ns1__GetSDKImagesFromPDFTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKImagesFromPDFTemplate(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKImagesFromPDFTemplate*   ns1__GetSDKImagesFromPDFTemplate_,
    // output parameters:
    ns1__GetSDKImagesFromPDFTemplateResponse* ns1__GetSDKImagesFromPDFTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKImagesFromPDFTemplate SOAP
//gsoap ns1  service method-style:	GetSDKImagesFromPDFTemplate document
//gsoap ns1  service method-encoding:	GetSDKImagesFromPDFTemplate literal
//gsoap ns1  service method-input-action:	GetSDKImagesFromPDFTemplate http://ws.abx/abxWsGest/GetSDKImagesFromPDFTemplateRequest
//gsoap ns1  service method-output-action:	GetSDKImagesFromPDFTemplate http://ws.abx/abxWsGest/GetSDKImagesFromPDFTemplateResponse
int __ns1__GetSDKImagesFromPDFTemplate(
    ns1__GetSDKImagesFromPDFTemplate*   ns1__GetSDKImagesFromPDFTemplate_,	///< Input parameter
    ns1__GetSDKImagesFromPDFTemplateResponse* ns1__GetSDKImagesFromPDFTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ExtractSDKPDFTemplateTextByArea                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ExtractSDKPDFTemplateTextByArea" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ExtractSDKPDFTemplateTextByAreaRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ExtractSDKPDFTemplateTextByAreaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ExtractSDKPDFTemplateTextByArea(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ExtractSDKPDFTemplateTextByArea* ns1__ExtractSDKPDFTemplateTextByArea_,
    // output parameters:
    ns1__ExtractSDKPDFTemplateTextByAreaResponse* ns1__ExtractSDKPDFTemplateTextByAreaResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ExtractSDKPDFTemplateTextByArea(
    struct soap *soap,
    // input parameters:
    ns1__ExtractSDKPDFTemplateTextByArea* ns1__ExtractSDKPDFTemplateTextByArea_,
    // output parameters:
    ns1__ExtractSDKPDFTemplateTextByAreaResponse* ns1__ExtractSDKPDFTemplateTextByAreaResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ExtractSDKPDFTemplateTextByArea SOAP
//gsoap ns1  service method-style:	ExtractSDKPDFTemplateTextByArea document
//gsoap ns1  service method-encoding:	ExtractSDKPDFTemplateTextByArea literal
//gsoap ns1  service method-input-action:	ExtractSDKPDFTemplateTextByArea http://ws.abx/abxWsGest/ExtractSDKPDFTemplateTextByAreaRequest
//gsoap ns1  service method-output-action:	ExtractSDKPDFTemplateTextByArea http://ws.abx/abxWsGest/ExtractSDKPDFTemplateTextByAreaResponse
int __ns1__ExtractSDKPDFTemplateTextByArea(
    ns1__ExtractSDKPDFTemplateTextByArea* ns1__ExtractSDKPDFTemplateTextByArea_,	///< Input parameter
    ns1__ExtractSDKPDFTemplateTextByAreaResponse* ns1__ExtractSDKPDFTemplateTextByAreaResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKTextFromTemplate                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKTextFromTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKTextFromTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKTextFromTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKTextFromTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKTextFromTemplate*        ns1__GetSDKTextFromTemplate_,
    // output parameters:
    ns1__GetSDKTextFromTemplateResponse* ns1__GetSDKTextFromTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKTextFromTemplate(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKTextFromTemplate*        ns1__GetSDKTextFromTemplate_,
    // output parameters:
    ns1__GetSDKTextFromTemplateResponse* ns1__GetSDKTextFromTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKTextFromTemplate SOAP
//gsoap ns1  service method-style:	GetSDKTextFromTemplate document
//gsoap ns1  service method-encoding:	GetSDKTextFromTemplate literal
//gsoap ns1  service method-input-action:	GetSDKTextFromTemplate http://ws.abx/abxWsGest/GetSDKTextFromTemplateRequest
//gsoap ns1  service method-output-action:	GetSDKTextFromTemplate http://ws.abx/abxWsGest/GetSDKTextFromTemplateResponse
int __ns1__GetSDKTextFromTemplate(
    ns1__GetSDKTextFromTemplate*        ns1__GetSDKTextFromTemplate_,	///< Input parameter
    ns1__GetSDKTextFromTemplateResponse* ns1__GetSDKTextFromTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ChangeSDKTaskStatus                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ChangeSDKTaskStatus" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ChangeSDKTaskStatusRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ChangeSDKTaskStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ChangeSDKTaskStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ChangeSDKTaskStatus*           ns1__ChangeSDKTaskStatus_,
    // output parameters:
    ns1__ChangeSDKTaskStatusResponse*   ns1__ChangeSDKTaskStatusResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ChangeSDKTaskStatus(
    struct soap *soap,
    // input parameters:
    ns1__ChangeSDKTaskStatus*           ns1__ChangeSDKTaskStatus_,
    // output parameters:
    ns1__ChangeSDKTaskStatusResponse*   ns1__ChangeSDKTaskStatusResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ChangeSDKTaskStatus SOAP
//gsoap ns1  service method-style:	ChangeSDKTaskStatus document
//gsoap ns1  service method-encoding:	ChangeSDKTaskStatus literal
//gsoap ns1  service method-input-action:	ChangeSDKTaskStatus http://ws.abx/abxWsGest/ChangeSDKTaskStatusRequest
//gsoap ns1  service method-output-action:	ChangeSDKTaskStatus http://ws.abx/abxWsGest/ChangeSDKTaskStatusResponse
int __ns1__ChangeSDKTaskStatus(
    ns1__ChangeSDKTaskStatus*           ns1__ChangeSDKTaskStatus_,	///< Input parameter
    ns1__ChangeSDKTaskStatusResponse*   ns1__ChangeSDKTaskStatusResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__StartSDKTask                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__StartSDKTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - One-way service request message

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/StartSDKTask"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___ns1__StartSDKTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__StartSDKTask*                  ns1__StartSDKTask_,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__StartSDKTask(
    struct soap *soap,
    // input parameters:
    ns1__StartSDKTask*                  ns1__StartSDKTask_,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	StartSDKTask SOAP
//gsoap ns1  service method-style:	StartSDKTask document
//gsoap ns1  service method-encoding:	StartSDKTask literal
//gsoap ns1  service method-input-action:	StartSDKTask http://ws.abx/abxWsGest/StartSDKTask
int __ns1__StartSDKTask(
    ns1__StartSDKTask*                  ns1__StartSDKTask_,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteSDKTask                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteSDKTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteSDKTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteSDKTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteSDKTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteSDKTask*                 ns1__DeleteSDKTask_,
    // output parameters:
    ns1__DeleteSDKTaskResponse*         ns1__DeleteSDKTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteSDKTask(
    struct soap *soap,
    // input parameters:
    ns1__DeleteSDKTask*                 ns1__DeleteSDKTask_,
    // output parameters:
    ns1__DeleteSDKTaskResponse*         ns1__DeleteSDKTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteSDKTask SOAP
//gsoap ns1  service method-style:	DeleteSDKTask document
//gsoap ns1  service method-encoding:	DeleteSDKTask literal
//gsoap ns1  service method-input-action:	DeleteSDKTask http://ws.abx/abxWsGest/DeleteSDKTaskRequest
//gsoap ns1  service method-output-action:	DeleteSDKTask http://ws.abx/abxWsGest/DeleteSDKTaskResponse
int __ns1__DeleteSDKTask(
    ns1__DeleteSDKTask*                 ns1__DeleteSDKTask_,	///< Input parameter
    ns1__DeleteSDKTaskResponse*         ns1__DeleteSDKTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyUserPassword                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyUserPassword" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyUserPasswordRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyUserPasswordResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyUserPassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyUserPassword*            ns1__ModifyUserPassword_,
    // output parameters:
    ns1__ModifyUserPasswordResponse*    ns1__ModifyUserPasswordResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyUserPassword(
    struct soap *soap,
    // input parameters:
    ns1__ModifyUserPassword*            ns1__ModifyUserPassword_,
    // output parameters:
    ns1__ModifyUserPasswordResponse*    ns1__ModifyUserPasswordResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyUserPassword SOAP
//gsoap ns1  service method-style:	ModifyUserPassword document
//gsoap ns1  service method-encoding:	ModifyUserPassword literal
//gsoap ns1  service method-input-action:	ModifyUserPassword http://ws.abx/abxWsGest/ModifyUserPasswordRequest
//gsoap ns1  service method-output-action:	ModifyUserPassword http://ws.abx/abxWsGest/ModifyUserPasswordResponse
int __ns1__ModifyUserPassword(
    ns1__ModifyUserPassword*            ns1__ModifyUserPassword_,	///< Input parameter
    ns1__ModifyUserPasswordResponse*    ns1__ModifyUserPasswordResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryHeader                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__QueryHeader" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/QueryHeaderRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/QueryHeaderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryHeader(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__QueryHeader*                   ns1__QueryHeader_,
    // output parameters:
    ns1__QueryHeaderResponse*           ns1__QueryHeaderResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryHeader(
    struct soap *soap,
    // input parameters:
    ns1__QueryHeader*                   ns1__QueryHeader_,
    // output parameters:
    ns1__QueryHeaderResponse*           ns1__QueryHeaderResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryHeader SOAP
//gsoap ns1  service method-style:	QueryHeader document
//gsoap ns1  service method-encoding:	QueryHeader literal
//gsoap ns1  service method-input-action:	QueryHeader http://ws.abx/abxWsGest/QueryHeaderRequest
//gsoap ns1  service method-output-action:	QueryHeader http://ws.abx/abxWsGest/QueryHeaderResponse
int __ns1__QueryHeader(
    ns1__QueryHeader*                   ns1__QueryHeader_,	///< Input parameter
    ns1__QueryHeaderResponse*           ns1__QueryHeaderResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryTotAttach                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__QueryTotAttach" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/QueryTotAttachRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/QueryTotAttachResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryTotAttach(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__QueryTotAttach*                ns1__QueryTotAttach_,
    // output parameters:
    ns1__QueryTotAttachResponse*        ns1__QueryTotAttachResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryTotAttach(
    struct soap *soap,
    // input parameters:
    ns1__QueryTotAttach*                ns1__QueryTotAttach_,
    // output parameters:
    ns1__QueryTotAttachResponse*        ns1__QueryTotAttachResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryTotAttach SOAP
//gsoap ns1  service method-style:	QueryTotAttach document
//gsoap ns1  service method-encoding:	QueryTotAttach literal
//gsoap ns1  service method-input-action:	QueryTotAttach http://ws.abx/abxWsGest/QueryTotAttachRequest
//gsoap ns1  service method-output-action:	QueryTotAttach http://ws.abx/abxWsGest/QueryTotAttachResponse
int __ns1__QueryTotAttach(
    ns1__QueryTotAttach*                ns1__QueryTotAttach_,	///< Input parameter
    ns1__QueryTotAttachResponse*        ns1__QueryTotAttachResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDynorgTypeList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDynorgTypeList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDynorgTypeListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDynorgTypeListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDynorgTypeList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDynorgTypeList*             ns1__GetDynorgTypeList_,
    // output parameters:
    ns1__GetDynorgTypeListResponse*     ns1__GetDynorgTypeListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDynorgTypeList(
    struct soap *soap,
    // input parameters:
    ns1__GetDynorgTypeList*             ns1__GetDynorgTypeList_,
    // output parameters:
    ns1__GetDynorgTypeListResponse*     ns1__GetDynorgTypeListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDynorgTypeList SOAP
//gsoap ns1  service method-style:	GetDynorgTypeList document
//gsoap ns1  service method-encoding:	GetDynorgTypeList literal
//gsoap ns1  service method-input-action:	GetDynorgTypeList http://ws.abx/abxWsGest/GetDynorgTypeListRequest
//gsoap ns1  service method-output-action:	GetDynorgTypeList http://ws.abx/abxWsGest/GetDynorgTypeListResponse
int __ns1__GetDynorgTypeList(
    ns1__GetDynorgTypeList*             ns1__GetDynorgTypeList_,	///< Input parameter
    ns1__GetDynorgTypeListResponse*     ns1__GetDynorgTypeListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canModifyDynorg                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canModifyDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canModifyDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canModifyDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canModifyDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canModifyDynorg*               ns1__canModifyDynorg_,
    // output parameters:
    ns1__canModifyDynorgResponse*       ns1__canModifyDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canModifyDynorg(
    struct soap *soap,
    // input parameters:
    ns1__canModifyDynorg*               ns1__canModifyDynorg_,
    // output parameters:
    ns1__canModifyDynorgResponse*       ns1__canModifyDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canModifyDynorg SOAP
//gsoap ns1  service method-style:	canModifyDynorg document
//gsoap ns1  service method-encoding:	canModifyDynorg literal
//gsoap ns1  service method-input-action:	canModifyDynorg http://ws.abx/abxWsGest/canModifyDynorgRequest
//gsoap ns1  service method-output-action:	canModifyDynorg http://ws.abx/abxWsGest/canModifyDynorgResponse
int __ns1__canModifyDynorg(
    ns1__canModifyDynorg*               ns1__canModifyDynorg_,	///< Input parameter
    ns1__canModifyDynorgResponse*       ns1__canModifyDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canDeleteDynorg                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canDeleteDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canDeleteDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canDeleteDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canDeleteDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canDeleteDynorg*               ns1__canDeleteDynorg_,
    // output parameters:
    ns1__canDeleteDynorgResponse*       ns1__canDeleteDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canDeleteDynorg(
    struct soap *soap,
    // input parameters:
    ns1__canDeleteDynorg*               ns1__canDeleteDynorg_,
    // output parameters:
    ns1__canDeleteDynorgResponse*       ns1__canDeleteDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canDeleteDynorg SOAP
//gsoap ns1  service method-style:	canDeleteDynorg document
//gsoap ns1  service method-encoding:	canDeleteDynorg literal
//gsoap ns1  service method-input-action:	canDeleteDynorg http://ws.abx/abxWsGest/canDeleteDynorgRequest
//gsoap ns1  service method-output-action:	canDeleteDynorg http://ws.abx/abxWsGest/canDeleteDynorgResponse
int __ns1__canDeleteDynorg(
    ns1__canDeleteDynorg*               ns1__canDeleteDynorg_,	///< Input parameter
    ns1__canDeleteDynorgResponse*       ns1__canDeleteDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canCreateDynorg                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canCreateDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canCreateDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canCreateDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canCreateDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canCreateDynorg*               ns1__canCreateDynorg_,
    // output parameters:
    ns1__canCreateDynorgResponse*       ns1__canCreateDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canCreateDynorg(
    struct soap *soap,
    // input parameters:
    ns1__canCreateDynorg*               ns1__canCreateDynorg_,
    // output parameters:
    ns1__canCreateDynorgResponse*       ns1__canCreateDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canCreateDynorg SOAP
//gsoap ns1  service method-style:	canCreateDynorg document
//gsoap ns1  service method-encoding:	canCreateDynorg literal
//gsoap ns1  service method-input-action:	canCreateDynorg http://ws.abx/abxWsGest/canCreateDynorgRequest
//gsoap ns1  service method-output-action:	canCreateDynorg http://ws.abx/abxWsGest/canCreateDynorgResponse
int __ns1__canCreateDynorg(
    ns1__canCreateDynorg*               ns1__canCreateDynorg_,	///< Input parameter
    ns1__canCreateDynorgResponse*       ns1__canCreateDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertSchedulerTask                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertSchedulerTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertSchedulerTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertSchedulerTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertSchedulerTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertSchedulerTask*           ns1__InsertSchedulerTask_,
    // output parameters:
    ns1__InsertSchedulerTaskResponse*   ns1__InsertSchedulerTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertSchedulerTask(
    struct soap *soap,
    // input parameters:
    ns1__InsertSchedulerTask*           ns1__InsertSchedulerTask_,
    // output parameters:
    ns1__InsertSchedulerTaskResponse*   ns1__InsertSchedulerTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertSchedulerTask SOAP
//gsoap ns1  service method-style:	InsertSchedulerTask document
//gsoap ns1  service method-encoding:	InsertSchedulerTask literal
//gsoap ns1  service method-input-action:	InsertSchedulerTask http://ws.abx/abxWsGest/InsertSchedulerTaskRequest
//gsoap ns1  service method-output-action:	InsertSchedulerTask http://ws.abx/abxWsGest/InsertSchedulerTaskResponse
int __ns1__InsertSchedulerTask(
    ns1__InsertSchedulerTask*           ns1__InsertSchedulerTask_,	///< Input parameter
    ns1__InsertSchedulerTaskResponse*   ns1__InsertSchedulerTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSchedulerTasks                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSchedulerTasks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSchedulerTasksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSchedulerTasksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSchedulerTasks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSchedulerTasks*             ns1__GetSchedulerTasks_,
    // output parameters:
    ns1__GetSchedulerTasksResponse*     ns1__GetSchedulerTasksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSchedulerTasks(
    struct soap *soap,
    // input parameters:
    ns1__GetSchedulerTasks*             ns1__GetSchedulerTasks_,
    // output parameters:
    ns1__GetSchedulerTasksResponse*     ns1__GetSchedulerTasksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSchedulerTasks SOAP
//gsoap ns1  service method-style:	GetSchedulerTasks document
//gsoap ns1  service method-encoding:	GetSchedulerTasks literal
//gsoap ns1  service method-input-action:	GetSchedulerTasks http://ws.abx/abxWsGest/GetSchedulerTasksRequest
//gsoap ns1  service method-output-action:	GetSchedulerTasks http://ws.abx/abxWsGest/GetSchedulerTasksResponse
int __ns1__GetSchedulerTasks(
    ns1__GetSchedulerTasks*             ns1__GetSchedulerTasks_,	///< Input parameter
    ns1__GetSchedulerTasksResponse*     ns1__GetSchedulerTasksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteSchedulerTask                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteSchedulerTask" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteSchedulerTaskRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteSchedulerTaskResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteSchedulerTask(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteSchedulerTask*           ns1__DeleteSchedulerTask_,
    // output parameters:
    ns1__DeleteSchedulerTaskResponse*   ns1__DeleteSchedulerTaskResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteSchedulerTask(
    struct soap *soap,
    // input parameters:
    ns1__DeleteSchedulerTask*           ns1__DeleteSchedulerTask_,
    // output parameters:
    ns1__DeleteSchedulerTaskResponse*   ns1__DeleteSchedulerTaskResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteSchedulerTask SOAP
//gsoap ns1  service method-style:	DeleteSchedulerTask document
//gsoap ns1  service method-encoding:	DeleteSchedulerTask literal
//gsoap ns1  service method-input-action:	DeleteSchedulerTask http://ws.abx/abxWsGest/DeleteSchedulerTaskRequest
//gsoap ns1  service method-output-action:	DeleteSchedulerTask http://ws.abx/abxWsGest/DeleteSchedulerTaskResponse
int __ns1__DeleteSchedulerTask(
    ns1__DeleteSchedulerTask*           ns1__DeleteSchedulerTask_,	///< Input parameter
    ns1__DeleteSchedulerTaskResponse*   ns1__DeleteSchedulerTaskResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSchedulerTasksToRun                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSchedulerTasksToRun" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSchedulerTasksToRunRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSchedulerTasksToRunResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSchedulerTasksToRun(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSchedulerTasksToRun*        ns1__GetSchedulerTasksToRun_,
    // output parameters:
    ns1__GetSchedulerTasksToRunResponse* ns1__GetSchedulerTasksToRunResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSchedulerTasksToRun(
    struct soap *soap,
    // input parameters:
    ns1__GetSchedulerTasksToRun*        ns1__GetSchedulerTasksToRun_,
    // output parameters:
    ns1__GetSchedulerTasksToRunResponse* ns1__GetSchedulerTasksToRunResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSchedulerTasksToRun SOAP
//gsoap ns1  service method-style:	GetSchedulerTasksToRun document
//gsoap ns1  service method-encoding:	GetSchedulerTasksToRun literal
//gsoap ns1  service method-input-action:	GetSchedulerTasksToRun http://ws.abx/abxWsGest/GetSchedulerTasksToRunRequest
//gsoap ns1  service method-output-action:	GetSchedulerTasksToRun http://ws.abx/abxWsGest/GetSchedulerTasksToRunResponse
int __ns1__GetSchedulerTasksToRun(
    ns1__GetSchedulerTasksToRun*        ns1__GetSchedulerTasksToRun_,	///< Input parameter
    ns1__GetSchedulerTasksToRunResponse* ns1__GetSchedulerTasksToRunResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SchedulerTaskScheduleProcessed                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SchedulerTaskScheduleProcessed" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SchedulerTaskScheduleProcessedRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SchedulerTaskScheduleProcessedResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SchedulerTaskScheduleProcessed(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SchedulerTaskScheduleProcessed* ns1__SchedulerTaskScheduleProcessed_,
    // output parameters:
    ns1__SchedulerTaskScheduleProcessedResponse* ns1__SchedulerTaskScheduleProcessedResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SchedulerTaskScheduleProcessed(
    struct soap *soap,
    // input parameters:
    ns1__SchedulerTaskScheduleProcessed* ns1__SchedulerTaskScheduleProcessed_,
    // output parameters:
    ns1__SchedulerTaskScheduleProcessedResponse* ns1__SchedulerTaskScheduleProcessedResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SchedulerTaskScheduleProcessed SOAP
//gsoap ns1  service method-style:	SchedulerTaskScheduleProcessed document
//gsoap ns1  service method-encoding:	SchedulerTaskScheduleProcessed literal
//gsoap ns1  service method-input-action:	SchedulerTaskScheduleProcessed http://ws.abx/abxWsGest/SchedulerTaskScheduleProcessedRequest
//gsoap ns1  service method-output-action:	SchedulerTaskScheduleProcessed http://ws.abx/abxWsGest/SchedulerTaskScheduleProcessedResponse
int __ns1__SchedulerTaskScheduleProcessed(
    ns1__SchedulerTaskScheduleProcessed* ns1__SchedulerTaskScheduleProcessed_,	///< Input parameter
    ns1__SchedulerTaskScheduleProcessedResponse* ns1__SchedulerTaskScheduleProcessedResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifySchedulerTaskSchedule                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifySchedulerTaskSchedule" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifySchedulerTaskScheduleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifySchedulerTaskScheduleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifySchedulerTaskSchedule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifySchedulerTaskSchedule*   ns1__ModifySchedulerTaskSchedule_,
    // output parameters:
    ns1__ModifySchedulerTaskScheduleResponse* ns1__ModifySchedulerTaskScheduleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifySchedulerTaskSchedule(
    struct soap *soap,
    // input parameters:
    ns1__ModifySchedulerTaskSchedule*   ns1__ModifySchedulerTaskSchedule_,
    // output parameters:
    ns1__ModifySchedulerTaskScheduleResponse* ns1__ModifySchedulerTaskScheduleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifySchedulerTaskSchedule SOAP
//gsoap ns1  service method-style:	ModifySchedulerTaskSchedule document
//gsoap ns1  service method-encoding:	ModifySchedulerTaskSchedule literal
//gsoap ns1  service method-input-action:	ModifySchedulerTaskSchedule http://ws.abx/abxWsGest/ModifySchedulerTaskScheduleRequest
//gsoap ns1  service method-output-action:	ModifySchedulerTaskSchedule http://ws.abx/abxWsGest/ModifySchedulerTaskScheduleResponse
int __ns1__ModifySchedulerTaskSchedule(
    ns1__ModifySchedulerTaskSchedule*   ns1__ModifySchedulerTaskSchedule_,	///< Input parameter
    ns1__ModifySchedulerTaskScheduleResponse* ns1__ModifySchedulerTaskScheduleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteSchedulerTaskSchedule                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteSchedulerTaskSchedule" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteSchedulerTaskScheduleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteSchedulerTaskScheduleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteSchedulerTaskSchedule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteSchedulerTaskSchedule*   ns1__DeleteSchedulerTaskSchedule_,
    // output parameters:
    ns1__DeleteSchedulerTaskScheduleResponse* ns1__DeleteSchedulerTaskScheduleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteSchedulerTaskSchedule(
    struct soap *soap,
    // input parameters:
    ns1__DeleteSchedulerTaskSchedule*   ns1__DeleteSchedulerTaskSchedule_,
    // output parameters:
    ns1__DeleteSchedulerTaskScheduleResponse* ns1__DeleteSchedulerTaskScheduleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteSchedulerTaskSchedule SOAP
//gsoap ns1  service method-style:	DeleteSchedulerTaskSchedule document
//gsoap ns1  service method-encoding:	DeleteSchedulerTaskSchedule literal
//gsoap ns1  service method-input-action:	DeleteSchedulerTaskSchedule http://ws.abx/abxWsGest/DeleteSchedulerTaskScheduleRequest
//gsoap ns1  service method-output-action:	DeleteSchedulerTaskSchedule http://ws.abx/abxWsGest/DeleteSchedulerTaskScheduleResponse
int __ns1__DeleteSchedulerTaskSchedule(
    ns1__DeleteSchedulerTaskSchedule*   ns1__DeleteSchedulerTaskSchedule_,	///< Input parameter
    ns1__DeleteSchedulerTaskScheduleResponse* ns1__DeleteSchedulerTaskScheduleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ChangeSchedulerTaskScheduleStatus                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ChangeSchedulerTaskScheduleStatus" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ChangeSchedulerTaskScheduleStatusRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ChangeSchedulerTaskScheduleStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ChangeSchedulerTaskScheduleStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ChangeSchedulerTaskScheduleStatus* ns1__ChangeSchedulerTaskScheduleStatus_,
    // output parameters:
    ns1__ChangeSchedulerTaskScheduleStatusResponse* ns1__ChangeSchedulerTaskScheduleStatusResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ChangeSchedulerTaskScheduleStatus(
    struct soap *soap,
    // input parameters:
    ns1__ChangeSchedulerTaskScheduleStatus* ns1__ChangeSchedulerTaskScheduleStatus_,
    // output parameters:
    ns1__ChangeSchedulerTaskScheduleStatusResponse* ns1__ChangeSchedulerTaskScheduleStatusResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ChangeSchedulerTaskScheduleStatus SOAP
//gsoap ns1  service method-style:	ChangeSchedulerTaskScheduleStatus document
//gsoap ns1  service method-encoding:	ChangeSchedulerTaskScheduleStatus literal
//gsoap ns1  service method-input-action:	ChangeSchedulerTaskScheduleStatus http://ws.abx/abxWsGest/ChangeSchedulerTaskScheduleStatusRequest
//gsoap ns1  service method-output-action:	ChangeSchedulerTaskScheduleStatus http://ws.abx/abxWsGest/ChangeSchedulerTaskScheduleStatusResponse
int __ns1__ChangeSchedulerTaskScheduleStatus(
    ns1__ChangeSchedulerTaskScheduleStatus* ns1__ChangeSchedulerTaskScheduleStatus_,	///< Input parameter
    ns1__ChangeSchedulerTaskScheduleStatusResponse* ns1__ChangeSchedulerTaskScheduleStatusResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDomainList                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDomainList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDomainListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDomainListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDomainList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDomainList*                 ns1__GetDomainList_,
    // output parameters:
    ns1__GetDomainListResponse*         ns1__GetDomainListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDomainList(
    struct soap *soap,
    // input parameters:
    ns1__GetDomainList*                 ns1__GetDomainList_,
    // output parameters:
    ns1__GetDomainListResponse*         ns1__GetDomainListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDomainList SOAP
//gsoap ns1  service method-style:	GetDomainList document
//gsoap ns1  service method-encoding:	GetDomainList literal
//gsoap ns1  service method-input-action:	GetDomainList http://ws.abx/abxWsGest/GetDomainListRequest
//gsoap ns1  service method-output-action:	GetDomainList http://ws.abx/abxWsGest/GetDomainListResponse
int __ns1__GetDomainList(
    ns1__GetDomainList*                 ns1__GetDomainList_,	///< Input parameter
    ns1__GetDomainListResponse*         ns1__GetDomainListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DigitalSign                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DigitalSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DigitalSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DigitalSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DigitalSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DigitalSign*                   ns1__DigitalSign_,
    // output parameters:
    ns1__DigitalSignResponse*           ns1__DigitalSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DigitalSign(
    struct soap *soap,
    // input parameters:
    ns1__DigitalSign*                   ns1__DigitalSign_,
    // output parameters:
    ns1__DigitalSignResponse*           ns1__DigitalSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DigitalSign SOAP
//gsoap ns1  service method-style:	DigitalSign document
//gsoap ns1  service method-encoding:	DigitalSign literal
//gsoap ns1  service method-input-action:	DigitalSign http://ws.abx/abxWsGest/DigitalSignRequest
//gsoap ns1  service method-output-action:	DigitalSign http://ws.abx/abxWsGest/DigitalSignResponse
int __ns1__DigitalSign(
    ns1__DigitalSign*                   ns1__DigitalSign_,	///< Input parameter
    ns1__DigitalSignResponse*           ns1__DigitalSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteGroup                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteGroup*                   ns1__DeleteGroup_,
    // output parameters:
    ns1__DeleteGroupResponse*           ns1__DeleteGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteGroup(
    struct soap *soap,
    // input parameters:
    ns1__DeleteGroup*                   ns1__DeleteGroup_,
    // output parameters:
    ns1__DeleteGroupResponse*           ns1__DeleteGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteGroup SOAP
//gsoap ns1  service method-style:	DeleteGroup document
//gsoap ns1  service method-encoding:	DeleteGroup literal
//gsoap ns1  service method-input-action:	DeleteGroup http://ws.abx/abxWsGest/DeleteGroupRequest
//gsoap ns1  service method-output-action:	DeleteGroup http://ws.abx/abxWsGest/DeleteGroupResponse
int __ns1__DeleteGroup(
    ns1__DeleteGroup*                   ns1__DeleteGroup_,	///< Input parameter
    ns1__DeleteGroupResponse*           ns1__DeleteGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataById                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataById*                   ns1__GetDataById_,
    // output parameters:
    ns1__GetDataByIdResponse*           ns1__GetDataByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataById(
    struct soap *soap,
    // input parameters:
    ns1__GetDataById*                   ns1__GetDataById_,
    // output parameters:
    ns1__GetDataByIdResponse*           ns1__GetDataByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataById SOAP
//gsoap ns1  service method-style:	GetDataById document
//gsoap ns1  service method-encoding:	GetDataById literal
//gsoap ns1  service method-input-action:	GetDataById http://ws.abx/abxWsGest/GetDataByIdRequest
//gsoap ns1  service method-output-action:	GetDataById http://ws.abx/abxWsGest/GetDataByIdResponse
int __ns1__GetDataById(
    ns1__GetDataById*                   ns1__GetDataById_,	///< Input parameter
    ns1__GetDataByIdResponse*           ns1__GetDataByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteField                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteField*                   ns1__DeleteField_,
    // output parameters:
    ns1__DeleteFieldResponse*           ns1__DeleteFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteField(
    struct soap *soap,
    // input parameters:
    ns1__DeleteField*                   ns1__DeleteField_,
    // output parameters:
    ns1__DeleteFieldResponse*           ns1__DeleteFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteField SOAP
//gsoap ns1  service method-style:	DeleteField document
//gsoap ns1  service method-encoding:	DeleteField literal
//gsoap ns1  service method-input-action:	DeleteField http://ws.abx/abxWsGest/DeleteFieldRequest
//gsoap ns1  service method-output-action:	DeleteField http://ws.abx/abxWsGest/DeleteFieldResponse
int __ns1__DeleteField(
    ns1__DeleteField*                   ns1__DeleteField_,	///< Input parameter
    ns1__DeleteFieldResponse*           ns1__DeleteFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateField                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateField*                   ns1__CreateField_,
    // output parameters:
    ns1__CreateFieldResponse*           ns1__CreateFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateField(
    struct soap *soap,
    // input parameters:
    ns1__CreateField*                   ns1__CreateField_,
    // output parameters:
    ns1__CreateFieldResponse*           ns1__CreateFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateField SOAP
//gsoap ns1  service method-style:	CreateField document
//gsoap ns1  service method-encoding:	CreateField literal
//gsoap ns1  service method-input-action:	CreateField http://ws.abx/abxWsGest/CreateFieldRequest
//gsoap ns1  service method-output-action:	CreateField http://ws.abx/abxWsGest/CreateFieldResponse
int __ns1__CreateField(
    ns1__CreateField*                   ns1__CreateField_,	///< Input parameter
    ns1__CreateFieldResponse*           ns1__CreateFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canModifyField                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canModifyField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canModifyFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canModifyFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canModifyField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canModifyField*                ns1__canModifyField_,
    // output parameters:
    ns1__canModifyFieldResponse*        ns1__canModifyFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canModifyField(
    struct soap *soap,
    // input parameters:
    ns1__canModifyField*                ns1__canModifyField_,
    // output parameters:
    ns1__canModifyFieldResponse*        ns1__canModifyFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canModifyField SOAP
//gsoap ns1  service method-style:	canModifyField document
//gsoap ns1  service method-encoding:	canModifyField literal
//gsoap ns1  service method-input-action:	canModifyField http://ws.abx/abxWsGest/canModifyFieldRequest
//gsoap ns1  service method-output-action:	canModifyField http://ws.abx/abxWsGest/canModifyFieldResponse
int __ns1__canModifyField(
    ns1__canModifyField*                ns1__canModifyField_,	///< Input parameter
    ns1__canModifyFieldResponse*        ns1__canModifyFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canDeleteField                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canDeleteField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canDeleteFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canDeleteFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canDeleteField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canDeleteField*                ns1__canDeleteField_,
    // output parameters:
    ns1__canDeleteFieldResponse*        ns1__canDeleteFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canDeleteField(
    struct soap *soap,
    // input parameters:
    ns1__canDeleteField*                ns1__canDeleteField_,
    // output parameters:
    ns1__canDeleteFieldResponse*        ns1__canDeleteFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canDeleteField SOAP
//gsoap ns1  service method-style:	canDeleteField document
//gsoap ns1  service method-encoding:	canDeleteField literal
//gsoap ns1  service method-input-action:	canDeleteField http://ws.abx/abxWsGest/canDeleteFieldRequest
//gsoap ns1  service method-output-action:	canDeleteField http://ws.abx/abxWsGest/canDeleteFieldResponse
int __ns1__canDeleteField(
    ns1__canDeleteField*                ns1__canDeleteField_,	///< Input parameter
    ns1__canDeleteFieldResponse*        ns1__canDeleteFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__canCreateField                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__canCreateField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/canCreateFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/canCreateFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__canCreateField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__canCreateField*                ns1__canCreateField_,
    // output parameters:
    ns1__canCreateFieldResponse*        ns1__canCreateFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__canCreateField(
    struct soap *soap,
    // input parameters:
    ns1__canCreateField*                ns1__canCreateField_,
    // output parameters:
    ns1__canCreateFieldResponse*        ns1__canCreateFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	canCreateField SOAP
//gsoap ns1  service method-style:	canCreateField document
//gsoap ns1  service method-encoding:	canCreateField literal
//gsoap ns1  service method-input-action:	canCreateField http://ws.abx/abxWsGest/canCreateFieldRequest
//gsoap ns1  service method-output-action:	canCreateField http://ws.abx/abxWsGest/canCreateFieldResponse
int __ns1__canCreateField(
    ns1__canCreateField*                ns1__canCreateField_,	///< Input parameter
    ns1__canCreateFieldResponse*        ns1__canCreateFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFieldsPropertiesFromTemplate                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFieldsPropertiesFromTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFieldsPropertiesFromTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFieldsPropertiesFromTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFieldsPropertiesFromTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFieldsPropertiesFromTemplate* ns1__GetFieldsPropertiesFromTemplate_,
    // output parameters:
    ns1__GetFieldsPropertiesFromTemplateResponse* ns1__GetFieldsPropertiesFromTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFieldsPropertiesFromTemplate(
    struct soap *soap,
    // input parameters:
    ns1__GetFieldsPropertiesFromTemplate* ns1__GetFieldsPropertiesFromTemplate_,
    // output parameters:
    ns1__GetFieldsPropertiesFromTemplateResponse* ns1__GetFieldsPropertiesFromTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFieldsPropertiesFromTemplate SOAP
//gsoap ns1  service method-style:	GetFieldsPropertiesFromTemplate document
//gsoap ns1  service method-encoding:	GetFieldsPropertiesFromTemplate literal
//gsoap ns1  service method-input-action:	GetFieldsPropertiesFromTemplate http://ws.abx/abxWsGest/GetFieldsPropertiesFromTemplateRequest
//gsoap ns1  service method-output-action:	GetFieldsPropertiesFromTemplate http://ws.abx/abxWsGest/GetFieldsPropertiesFromTemplateResponse
int __ns1__GetFieldsPropertiesFromTemplate(
    ns1__GetFieldsPropertiesFromTemplate* ns1__GetFieldsPropertiesFromTemplate_,	///< Input parameter
    ns1__GetFieldsPropertiesFromTemplateResponse* ns1__GetFieldsPropertiesFromTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataWAById                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataWAById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataWAByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataWAByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataWAById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataWAById*                 ns1__GetDataWAById_,
    // output parameters:
    ns1__GetDataWAByIdResponse*         ns1__GetDataWAByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataWAById(
    struct soap *soap,
    // input parameters:
    ns1__GetDataWAById*                 ns1__GetDataWAById_,
    // output parameters:
    ns1__GetDataWAByIdResponse*         ns1__GetDataWAByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataWAById SOAP
//gsoap ns1  service method-style:	GetDataWAById document
//gsoap ns1  service method-encoding:	GetDataWAById literal
//gsoap ns1  service method-input-action:	GetDataWAById http://ws.abx/abxWsGest/GetDataWAByIdRequest
//gsoap ns1  service method-output-action:	GetDataWAById http://ws.abx/abxWsGest/GetDataWAByIdResponse
int __ns1__GetDataWAById(
    ns1__GetDataWAById*                 ns1__GetDataWAById_,	///< Input parameter
    ns1__GetDataWAByIdResponse*         ns1__GetDataWAByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertFileWA                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertFileWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertFileWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertFileWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertFileWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertFileWA*                  ns1__InsertFileWA_,
    // output parameters:
    ns1__InsertFileWAResponse*          ns1__InsertFileWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertFileWA(
    struct soap *soap,
    // input parameters:
    ns1__InsertFileWA*                  ns1__InsertFileWA_,
    // output parameters:
    ns1__InsertFileWAResponse*          ns1__InsertFileWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertFileWA SOAP
//gsoap ns1  service method-style:	InsertFileWA document
//gsoap ns1  service method-encoding:	InsertFileWA literal
//gsoap ns1  service method-input-action:	InsertFileWA http://ws.abx/abxWsGest/InsertFileWARequest
//gsoap ns1  service method-output-action:	InsertFileWA http://ws.abx/abxWsGest/InsertFileWAResponse
int __ns1__InsertFileWA(
    ns1__InsertFileWA*                  ns1__InsertFileWA_,	///< Input parameter
    ns1__InsertFileWAResponse*          ns1__InsertFileWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadSendChunkWA                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadSendChunkWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadSendChunkWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadSendChunkWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadSendChunkWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadSendChunkWA*             ns1__UploadSendChunkWA_,
    // output parameters:
    ns1__UploadSendChunkWAResponse*     ns1__UploadSendChunkWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadSendChunkWA(
    struct soap *soap,
    // input parameters:
    ns1__UploadSendChunkWA*             ns1__UploadSendChunkWA_,
    // output parameters:
    ns1__UploadSendChunkWAResponse*     ns1__UploadSendChunkWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadSendChunkWA SOAP
//gsoap ns1  service method-style:	UploadSendChunkWA document
//gsoap ns1  service method-encoding:	UploadSendChunkWA literal
//gsoap ns1  service method-input-action:	UploadSendChunkWA http://ws.abx/abxWsGest/UploadSendChunkWARequest
//gsoap ns1  service method-output-action:	UploadSendChunkWA http://ws.abx/abxWsGest/UploadSendChunkWAResponse
int __ns1__UploadSendChunkWA(
    ns1__UploadSendChunkWA*             ns1__UploadSendChunkWA_,	///< Input parameter
    ns1__UploadSendChunkWAResponse*     ns1__UploadSendChunkWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadEndFileWA                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadEndFileWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadEndFileWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadEndFileWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadEndFileWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadEndFileWA*               ns1__UploadEndFileWA_,
    // output parameters:
    ns1__UploadEndFileWAResponse*       ns1__UploadEndFileWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadEndFileWA(
    struct soap *soap,
    // input parameters:
    ns1__UploadEndFileWA*               ns1__UploadEndFileWA_,
    // output parameters:
    ns1__UploadEndFileWAResponse*       ns1__UploadEndFileWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadEndFileWA SOAP
//gsoap ns1  service method-style:	UploadEndFileWA document
//gsoap ns1  service method-encoding:	UploadEndFileWA literal
//gsoap ns1  service method-input-action:	UploadEndFileWA http://ws.abx/abxWsGest/UploadEndFileWARequest
//gsoap ns1  service method-output-action:	UploadEndFileWA http://ws.abx/abxWsGest/UploadEndFileWAResponse
int __ns1__UploadEndFileWA(
    ns1__UploadEndFileWA*               ns1__UploadEndFileWA_,	///< Input parameter
    ns1__UploadEndFileWAResponse*       ns1__UploadEndFileWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileListWA                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileListWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileListWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileListWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileListWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileListWA*             ns1__GetDataFileListWA_,
    // output parameters:
    ns1__GetDataFileListWAResponse*     ns1__GetDataFileListWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileListWA(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileListWA*             ns1__GetDataFileListWA_,
    // output parameters:
    ns1__GetDataFileListWAResponse*     ns1__GetDataFileListWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileListWA SOAP
//gsoap ns1  service method-style:	GetDataFileListWA document
//gsoap ns1  service method-encoding:	GetDataFileListWA literal
//gsoap ns1  service method-input-action:	GetDataFileListWA http://ws.abx/abxWsGest/GetDataFileListWARequest
//gsoap ns1  service method-output-action:	GetDataFileListWA http://ws.abx/abxWsGest/GetDataFileListWAResponse
int __ns1__GetDataFileListWA(
    ns1__GetDataFileListWA*             ns1__GetDataFileListWA_,	///< Input parameter
    ns1__GetDataFileListWAResponse*     ns1__GetDataFileListWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileWAByFileUniqueCode                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileWAByFileUniqueCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileWAByFileUniqueCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileWAByFileUniqueCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileWAByFileUniqueCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileWAByFileUniqueCode* ns1__DownloadFileWAByFileUniqueCode_,
    // output parameters:
    ns1__DownloadFileWAByFileUniqueCodeResponse* ns1__DownloadFileWAByFileUniqueCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileWAByFileUniqueCode(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileWAByFileUniqueCode* ns1__DownloadFileWAByFileUniqueCode_,
    // output parameters:
    ns1__DownloadFileWAByFileUniqueCodeResponse* ns1__DownloadFileWAByFileUniqueCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileWAByFileUniqueCode SOAP
//gsoap ns1  service method-style:	DownloadFileWAByFileUniqueCode document
//gsoap ns1  service method-encoding:	DownloadFileWAByFileUniqueCode literal
//gsoap ns1  service method-input-action:	DownloadFileWAByFileUniqueCode http://ws.abx/abxWsGest/DownloadFileWAByFileUniqueCodeRequest
//gsoap ns1  service method-output-action:	DownloadFileWAByFileUniqueCode http://ws.abx/abxWsGest/DownloadFileWAByFileUniqueCodeResponse
int __ns1__DownloadFileWAByFileUniqueCode(
    ns1__DownloadFileWAByFileUniqueCode* ns1__DownloadFileWAByFileUniqueCode_,	///< Input parameter
    ns1__DownloadFileWAByFileUniqueCodeResponse* ns1__DownloadFileWAByFileUniqueCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileWA                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileWA*                ns1__DownloadFileWA_,
    // output parameters:
    ns1__DownloadFileWAResponse*        ns1__DownloadFileWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileWA(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileWA*                ns1__DownloadFileWA_,
    // output parameters:
    ns1__DownloadFileWAResponse*        ns1__DownloadFileWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileWA SOAP
//gsoap ns1  service method-style:	DownloadFileWA document
//gsoap ns1  service method-encoding:	DownloadFileWA literal
//gsoap ns1  service method-input-action:	DownloadFileWA http://ws.abx/abxWsGest/DownloadFileWARequest
//gsoap ns1  service method-output-action:	DownloadFileWA http://ws.abx/abxWsGest/DownloadFileWAResponse
int __ns1__DownloadFileWA(
    ns1__DownloadFileWA*                ns1__DownloadFileWA_,	///< Input parameter
    ns1__DownloadFileWAResponse*        ns1__DownloadFileWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadGetNextWA                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadGetNextWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadGetNextWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadGetNextWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadGetNextWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadGetNextWA*             ns1__DownloadGetNextWA_,
    // output parameters:
    ns1__DownloadGetNextWAResponse*     ns1__DownloadGetNextWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadGetNextWA(
    struct soap *soap,
    // input parameters:
    ns1__DownloadGetNextWA*             ns1__DownloadGetNextWA_,
    // output parameters:
    ns1__DownloadGetNextWAResponse*     ns1__DownloadGetNextWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadGetNextWA SOAP
//gsoap ns1  service method-style:	DownloadGetNextWA document
//gsoap ns1  service method-encoding:	DownloadGetNextWA literal
//gsoap ns1  service method-input-action:	DownloadGetNextWA http://ws.abx/abxWsGest/DownloadGetNextWARequest
//gsoap ns1  service method-output-action:	DownloadGetNextWA http://ws.abx/abxWsGest/DownloadGetNextWAResponse
int __ns1__DownloadGetNextWA(
    ns1__DownloadGetNextWA*             ns1__DownloadGetNextWA_,	///< Input parameter
    ns1__DownloadGetNextWAResponse*     ns1__DownloadGetNextWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadEndFileWA                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadEndFileWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadEndFileWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadEndFileWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadEndFileWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadEndFileWA*             ns1__DownloadEndFileWA_,
    // output parameters:
    ns1__DownloadEndFileWAResponse*     ns1__DownloadEndFileWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadEndFileWA(
    struct soap *soap,
    // input parameters:
    ns1__DownloadEndFileWA*             ns1__DownloadEndFileWA_,
    // output parameters:
    ns1__DownloadEndFileWAResponse*     ns1__DownloadEndFileWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadEndFileWA SOAP
//gsoap ns1  service method-style:	DownloadEndFileWA document
//gsoap ns1  service method-encoding:	DownloadEndFileWA literal
//gsoap ns1  service method-input-action:	DownloadEndFileWA http://ws.abx/abxWsGest/DownloadEndFileWARequest
//gsoap ns1  service method-output-action:	DownloadEndFileWA http://ws.abx/abxWsGest/DownloadEndFileWAResponse
int __ns1__DownloadEndFileWA(
    ns1__DownloadEndFileWA*             ns1__DownloadEndFileWA_,	///< Input parameter
    ns1__DownloadEndFileWAResponse*     ns1__DownloadEndFileWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFileWA                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFileWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFileWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFileWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFileWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFileWA*                  ns1__DeleteFileWA_,
    // output parameters:
    ns1__DeleteFileWAResponse*          ns1__DeleteFileWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFileWA(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFileWA*                  ns1__DeleteFileWA_,
    // output parameters:
    ns1__DeleteFileWAResponse*          ns1__DeleteFileWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFileWA SOAP
//gsoap ns1  service method-style:	DeleteFileWA document
//gsoap ns1  service method-encoding:	DeleteFileWA literal
//gsoap ns1  service method-input-action:	DeleteFileWA http://ws.abx/abxWsGest/DeleteFileWARequest
//gsoap ns1  service method-output-action:	DeleteFileWA http://ws.abx/abxWsGest/DeleteFileWAResponse
int __ns1__DeleteFileWA(
    ns1__DeleteFileWA*                  ns1__DeleteFileWA_,	///< Input parameter
    ns1__DeleteFileWAResponse*          ns1__DeleteFileWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetCountDocumentLinks                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetCountDocumentLinks" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetCountDocumentLinksRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetCountDocumentLinksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetCountDocumentLinks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetCountDocumentLinks*         ns1__GetCountDocumentLinks_,
    // output parameters:
    ns1__GetCountDocumentLinksResponse* ns1__GetCountDocumentLinksResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetCountDocumentLinks(
    struct soap *soap,
    // input parameters:
    ns1__GetCountDocumentLinks*         ns1__GetCountDocumentLinks_,
    // output parameters:
    ns1__GetCountDocumentLinksResponse* ns1__GetCountDocumentLinksResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetCountDocumentLinks SOAP
//gsoap ns1  service method-style:	GetCountDocumentLinks document
//gsoap ns1  service method-encoding:	GetCountDocumentLinks literal
//gsoap ns1  service method-input-action:	GetCountDocumentLinks http://ws.abx/abxWsGest/GetCountDocumentLinksRequest
//gsoap ns1  service method-output-action:	GetCountDocumentLinks http://ws.abx/abxWsGest/GetCountDocumentLinksResponse
int __ns1__GetCountDocumentLinks(
    ns1__GetCountDocumentLinks*         ns1__GetCountDocumentLinks_,	///< Input parameter
    ns1__GetCountDocumentLinksResponse* ns1__GetCountDocumentLinksResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetArchSostRules                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetArchSostRules" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetArchSostRulesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetArchSostRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetArchSostRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetArchSostRules*              ns1__GetArchSostRules_,
    // output parameters:
    ns1__GetArchSostRulesResponse*      ns1__GetArchSostRulesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetArchSostRules(
    struct soap *soap,
    // input parameters:
    ns1__GetArchSostRules*              ns1__GetArchSostRules_,
    // output parameters:
    ns1__GetArchSostRulesResponse*      ns1__GetArchSostRulesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetArchSostRules SOAP
//gsoap ns1  service method-style:	GetArchSostRules document
//gsoap ns1  service method-encoding:	GetArchSostRules literal
//gsoap ns1  service method-input-action:	GetArchSostRules http://ws.abx/abxWsGest/GetArchSostRulesRequest
//gsoap ns1  service method-output-action:	GetArchSostRules http://ws.abx/abxWsGest/GetArchSostRulesResponse
int __ns1__GetArchSostRules(
    ns1__GetArchSostRules*              ns1__GetArchSostRules_,	///< Input parameter
    ns1__GetArchSostRulesResponse*      ns1__GetArchSostRulesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileListContainer                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileListContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileListContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileListContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileListContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileListContainer*      ns1__GetDataFileListContainer_,
    // output parameters:
    ns1__GetDataFileListContainerResponse* ns1__GetDataFileListContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileListContainer(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileListContainer*      ns1__GetDataFileListContainer_,
    // output parameters:
    ns1__GetDataFileListContainerResponse* ns1__GetDataFileListContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileListContainer SOAP
//gsoap ns1  service method-style:	GetDataFileListContainer document
//gsoap ns1  service method-encoding:	GetDataFileListContainer literal
//gsoap ns1  service method-input-action:	GetDataFileListContainer http://ws.abx/abxWsGest/GetDataFileListContainerRequest
//gsoap ns1  service method-output-action:	GetDataFileListContainer http://ws.abx/abxWsGest/GetDataFileListContainerResponse
int __ns1__GetDataFileListContainer(
    ns1__GetDataFileListContainer*      ns1__GetDataFileListContainer_,	///< Input parameter
    ns1__GetDataFileListContainerResponse* ns1__GetDataFileListContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileListOnlyLastVersion                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileListOnlyLastVersion" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileListOnlyLastVersionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileListOnlyLastVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileListOnlyLastVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileListOnlyLastVersion* ns1__GetDataFileListOnlyLastVersion_,
    // output parameters:
    ns1__GetDataFileListOnlyLastVersionResponse* ns1__GetDataFileListOnlyLastVersionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileListOnlyLastVersion(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileListOnlyLastVersion* ns1__GetDataFileListOnlyLastVersion_,
    // output parameters:
    ns1__GetDataFileListOnlyLastVersionResponse* ns1__GetDataFileListOnlyLastVersionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileListOnlyLastVersion SOAP
//gsoap ns1  service method-style:	GetDataFileListOnlyLastVersion document
//gsoap ns1  service method-encoding:	GetDataFileListOnlyLastVersion literal
//gsoap ns1  service method-input-action:	GetDataFileListOnlyLastVersion http://ws.abx/abxWsGest/GetDataFileListOnlyLastVersionRequest
//gsoap ns1  service method-output-action:	GetDataFileListOnlyLastVersion http://ws.abx/abxWsGest/GetDataFileListOnlyLastVersionResponse
int __ns1__GetDataFileListOnlyLastVersion(
    ns1__GetDataFileListOnlyLastVersion* ns1__GetDataFileListOnlyLastVersion_,	///< Input parameter
    ns1__GetDataFileListOnlyLastVersionResponse* ns1__GetDataFileListOnlyLastVersionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileList*               ns1__GetDataFileList_,
    // output parameters:
    ns1__GetDataFileListResponse*       ns1__GetDataFileListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileList(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileList*               ns1__GetDataFileList_,
    // output parameters:
    ns1__GetDataFileListResponse*       ns1__GetDataFileListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileList SOAP
//gsoap ns1  service method-style:	GetDataFileList document
//gsoap ns1  service method-encoding:	GetDataFileList literal
//gsoap ns1  service method-input-action:	GetDataFileList http://ws.abx/abxWsGest/GetDataFileListRequest
//gsoap ns1  service method-output-action:	GetDataFileList http://ws.abx/abxWsGest/GetDataFileListResponse
int __ns1__GetDataFileList(
    ns1__GetDataFileList*               ns1__GetDataFileList_,	///< Input parameter
    ns1__GetDataFileListResponse*       ns1__GetDataFileListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileListForSecurity                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileListForSecurity" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileListForSecurityRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileListForSecurityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileListForSecurity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileListForSecurity*    ns1__GetDataFileListForSecurity_,
    // output parameters:
    ns1__GetDataFileListForSecurityResponse* ns1__GetDataFileListForSecurityResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileListForSecurity(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileListForSecurity*    ns1__GetDataFileListForSecurity_,
    // output parameters:
    ns1__GetDataFileListForSecurityResponse* ns1__GetDataFileListForSecurityResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileListForSecurity SOAP
//gsoap ns1  service method-style:	GetDataFileListForSecurity document
//gsoap ns1  service method-encoding:	GetDataFileListForSecurity literal
//gsoap ns1  service method-input-action:	GetDataFileListForSecurity http://ws.abx/abxWsGest/GetDataFileListForSecurityRequest
//gsoap ns1  service method-output-action:	GetDataFileListForSecurity http://ws.abx/abxWsGest/GetDataFileListForSecurityResponse
int __ns1__GetDataFileListForSecurity(
    ns1__GetDataFileListForSecurity*    ns1__GetDataFileListForSecurity_,	///< Input parameter
    ns1__GetDataFileListForSecurityResponse* ns1__GetDataFileListForSecurityResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileDetail                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileDetail" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileDetailRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileDetailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileDetail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileDetail*             ns1__GetDataFileDetail_,
    // output parameters:
    ns1__GetDataFileDetailResponse*     ns1__GetDataFileDetailResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileDetail(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileDetail*             ns1__GetDataFileDetail_,
    // output parameters:
    ns1__GetDataFileDetailResponse*     ns1__GetDataFileDetailResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileDetail SOAP
//gsoap ns1  service method-style:	GetDataFileDetail document
//gsoap ns1  service method-encoding:	GetDataFileDetail literal
//gsoap ns1  service method-input-action:	GetDataFileDetail http://ws.abx/abxWsGest/GetDataFileDetailRequest
//gsoap ns1  service method-output-action:	GetDataFileDetail http://ws.abx/abxWsGest/GetDataFileDetailResponse
int __ns1__GetDataFileDetail(
    ns1__GetDataFileDetail*             ns1__GetDataFileDetail_,	///< Input parameter
    ns1__GetDataFileDetailResponse*     ns1__GetDataFileDetailResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataFileContainerDetail                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataFileContainerDetail" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataFileContainerDetailRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataFileContainerDetailResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataFileContainerDetail(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataFileContainerDetail*    ns1__GetDataFileContainerDetail_,
    // output parameters:
    ns1__GetDataFileContainerDetailResponse* ns1__GetDataFileContainerDetailResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataFileContainerDetail(
    struct soap *soap,
    // input parameters:
    ns1__GetDataFileContainerDetail*    ns1__GetDataFileContainerDetail_,
    // output parameters:
    ns1__GetDataFileContainerDetailResponse* ns1__GetDataFileContainerDetailResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataFileContainerDetail SOAP
//gsoap ns1  service method-style:	GetDataFileContainerDetail document
//gsoap ns1  service method-encoding:	GetDataFileContainerDetail literal
//gsoap ns1  service method-input-action:	GetDataFileContainerDetail http://ws.abx/abxWsGest/GetDataFileContainerDetailRequest
//gsoap ns1  service method-output-action:	GetDataFileContainerDetail http://ws.abx/abxWsGest/GetDataFileContainerDetailResponse
int __ns1__GetDataFileContainerDetail(
    ns1__GetDataFileContainerDetail*    ns1__GetDataFileContainerDetail_,	///< Input parameter
    ns1__GetDataFileContainerDetailResponse* ns1__GetDataFileContainerDetailResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFile                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFile*                  ns1__DownloadFile_,
    // output parameters:
    ns1__DownloadFileResponse*          ns1__DownloadFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFile(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFile*                  ns1__DownloadFile_,
    // output parameters:
    ns1__DownloadFileResponse*          ns1__DownloadFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFile SOAP
//gsoap ns1  service method-style:	DownloadFile document
//gsoap ns1  service method-encoding:	DownloadFile literal
//gsoap ns1  service method-input-action:	DownloadFile http://ws.abx/abxWsGest/DownloadFileRequest
//gsoap ns1  service method-output-action:	DownloadFile http://ws.abx/abxWsGest/DownloadFileResponse
int __ns1__DownloadFile(
    ns1__DownloadFile*                  ns1__DownloadFile_,	///< Input parameter
    ns1__DownloadFileResponse*          ns1__DownloadFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileByFileUniqueCode                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileByFileUniqueCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileByFileUniqueCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileByFileUniqueCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileByFileUniqueCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileByFileUniqueCode*  ns1__DownloadFileByFileUniqueCode_,
    // output parameters:
    ns1__DownloadFileByFileUniqueCodeResponse* ns1__DownloadFileByFileUniqueCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileByFileUniqueCode(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileByFileUniqueCode*  ns1__DownloadFileByFileUniqueCode_,
    // output parameters:
    ns1__DownloadFileByFileUniqueCodeResponse* ns1__DownloadFileByFileUniqueCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileByFileUniqueCode SOAP
//gsoap ns1  service method-style:	DownloadFileByFileUniqueCode document
//gsoap ns1  service method-encoding:	DownloadFileByFileUniqueCode literal
//gsoap ns1  service method-input-action:	DownloadFileByFileUniqueCode http://ws.abx/abxWsGest/DownloadFileByFileUniqueCodeRequest
//gsoap ns1  service method-output-action:	DownloadFileByFileUniqueCode http://ws.abx/abxWsGest/DownloadFileByFileUniqueCodeResponse
int __ns1__DownloadFileByFileUniqueCode(
    ns1__DownloadFileByFileUniqueCode*  ns1__DownloadFileByFileUniqueCode_,	///< Input parameter
    ns1__DownloadFileByFileUniqueCodeResponse* ns1__DownloadFileByFileUniqueCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileUnc                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileUnc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileUncRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileUncResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileUnc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileUnc*               ns1__DownloadFileUnc_,
    // output parameters:
    ns1__DownloadFileUncResponse*       ns1__DownloadFileUncResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileUnc(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileUnc*               ns1__DownloadFileUnc_,
    // output parameters:
    ns1__DownloadFileUncResponse*       ns1__DownloadFileUncResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileUnc SOAP
//gsoap ns1  service method-style:	DownloadFileUnc document
//gsoap ns1  service method-encoding:	DownloadFileUnc literal
//gsoap ns1  service method-input-action:	DownloadFileUnc http://ws.abx/abxWsGest/DownloadFileUncRequest
//gsoap ns1  service method-output-action:	DownloadFileUnc http://ws.abx/abxWsGest/DownloadFileUncResponse
int __ns1__DownloadFileUnc(
    ns1__DownloadFileUnc*               ns1__DownloadFileUnc_,	///< Input parameter
    ns1__DownloadFileUncResponse*       ns1__DownloadFileUncResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileContainerUnc                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileContainerUnc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileContainerUncRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileContainerUncResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileContainerUnc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileContainerUnc*      ns1__DownloadFileContainerUnc_,
    // output parameters:
    ns1__DownloadFileContainerUncResponse* ns1__DownloadFileContainerUncResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileContainerUnc(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileContainerUnc*      ns1__DownloadFileContainerUnc_,
    // output parameters:
    ns1__DownloadFileContainerUncResponse* ns1__DownloadFileContainerUncResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileContainerUnc SOAP
//gsoap ns1  service method-style:	DownloadFileContainerUnc document
//gsoap ns1  service method-encoding:	DownloadFileContainerUnc literal
//gsoap ns1  service method-input-action:	DownloadFileContainerUnc http://ws.abx/abxWsGest/DownloadFileContainerUncRequest
//gsoap ns1  service method-output-action:	DownloadFileContainerUnc http://ws.abx/abxWsGest/DownloadFileContainerUncResponse
int __ns1__DownloadFileContainerUnc(
    ns1__DownloadFileContainerUnc*      ns1__DownloadFileContainerUnc_,	///< Input parameter
    ns1__DownloadFileContainerUncResponse* ns1__DownloadFileContainerUncResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadGetChunk                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadGetChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadGetChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadGetChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadGetChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadGetChunk*              ns1__DownloadGetChunk_,
    // output parameters:
    ns1__DownloadGetChunkResponse*      ns1__DownloadGetChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadGetChunk(
    struct soap *soap,
    // input parameters:
    ns1__DownloadGetChunk*              ns1__DownloadGetChunk_,
    // output parameters:
    ns1__DownloadGetChunkResponse*      ns1__DownloadGetChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadGetChunk SOAP
//gsoap ns1  service method-style:	DownloadGetChunk document
//gsoap ns1  service method-encoding:	DownloadGetChunk literal
//gsoap ns1  service method-input-action:	DownloadGetChunk http://ws.abx/abxWsGest/DownloadGetChunkRequest
//gsoap ns1  service method-output-action:	DownloadGetChunk http://ws.abx/abxWsGest/DownloadGetChunkResponse
int __ns1__DownloadGetChunk(
    ns1__DownloadGetChunk*              ns1__DownloadGetChunk_,	///< Input parameter
    ns1__DownloadGetChunkResponse*      ns1__DownloadGetChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadGetNext                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadGetNext" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadGetNextRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadGetNextResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadGetNext(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadGetNext*               ns1__DownloadGetNext_,
    // output parameters:
    ns1__DownloadGetNextResponse*       ns1__DownloadGetNextResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadGetNext(
    struct soap *soap,
    // input parameters:
    ns1__DownloadGetNext*               ns1__DownloadGetNext_,
    // output parameters:
    ns1__DownloadGetNextResponse*       ns1__DownloadGetNextResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadGetNext SOAP
//gsoap ns1  service method-style:	DownloadGetNext document
//gsoap ns1  service method-encoding:	DownloadGetNext literal
//gsoap ns1  service method-input-action:	DownloadGetNext http://ws.abx/abxWsGest/DownloadGetNextRequest
//gsoap ns1  service method-output-action:	DownloadGetNext http://ws.abx/abxWsGest/DownloadGetNextResponse
int __ns1__DownloadGetNext(
    ns1__DownloadGetNext*               ns1__DownloadGetNext_,	///< Input parameter
    ns1__DownloadGetNextResponse*       ns1__DownloadGetNextResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadSendChunk                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadSendChunk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadSendChunkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadSendChunkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadSendChunk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadSendChunk*               ns1__UploadSendChunk_,
    // output parameters:
    ns1__UploadSendChunkResponse*       ns1__UploadSendChunkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadSendChunk(
    struct soap *soap,
    // input parameters:
    ns1__UploadSendChunk*               ns1__UploadSendChunk_,
    // output parameters:
    ns1__UploadSendChunkResponse*       ns1__UploadSendChunkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadSendChunk SOAP
//gsoap ns1  service method-style:	UploadSendChunk document
//gsoap ns1  service method-encoding:	UploadSendChunk literal
//gsoap ns1  service method-input-action:	UploadSendChunk http://ws.abx/abxWsGest/UploadSendChunkRequest
//gsoap ns1  service method-output-action:	UploadSendChunk http://ws.abx/abxWsGest/UploadSendChunkResponse
int __ns1__UploadSendChunk(
    ns1__UploadSendChunk*               ns1__UploadSendChunk_,	///< Input parameter
    ns1__UploadSendChunkResponse*       ns1__UploadSendChunkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFileContainer                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFileContainer*         ns1__DownloadFileContainer_,
    // output parameters:
    ns1__DownloadFileContainerResponse* ns1__DownloadFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFileContainer*         ns1__DownloadFileContainer_,
    // output parameters:
    ns1__DownloadFileContainerResponse* ns1__DownloadFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFileContainer SOAP
//gsoap ns1  service method-style:	DownloadFileContainer document
//gsoap ns1  service method-encoding:	DownloadFileContainer literal
//gsoap ns1  service method-input-action:	DownloadFileContainer http://ws.abx/abxWsGest/DownloadFileContainerRequest
//gsoap ns1  service method-output-action:	DownloadFileContainer http://ws.abx/abxWsGest/DownloadFileContainerResponse
int __ns1__DownloadFileContainer(
    ns1__DownloadFileContainer*         ns1__DownloadFileContainer_,	///< Input parameter
    ns1__DownloadFileContainerResponse* ns1__DownloadFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DownloadFilePreview                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DownloadFilePreview" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DownloadFilePreviewRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DownloadFilePreviewResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DownloadFilePreview(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DownloadFilePreview*           ns1__DownloadFilePreview_,
    // output parameters:
    ns1__DownloadFilePreviewResponse*   ns1__DownloadFilePreviewResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DownloadFilePreview(
    struct soap *soap,
    // input parameters:
    ns1__DownloadFilePreview*           ns1__DownloadFilePreview_,
    // output parameters:
    ns1__DownloadFilePreviewResponse*   ns1__DownloadFilePreviewResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DownloadFilePreview SOAP
//gsoap ns1  service method-style:	DownloadFilePreview document
//gsoap ns1  service method-encoding:	DownloadFilePreview literal
//gsoap ns1  service method-input-action:	DownloadFilePreview http://ws.abx/abxWsGest/DownloadFilePreviewRequest
//gsoap ns1  service method-output-action:	DownloadFilePreview http://ws.abx/abxWsGest/DownloadFilePreviewResponse
int __ns1__DownloadFilePreview(
    ns1__DownloadFilePreview*           ns1__DownloadFilePreview_,	///< Input parameter
    ns1__DownloadFilePreviewResponse*   ns1__DownloadFilePreviewResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUploadDetailByFilecode                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUploadDetailByFilecode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUploadDetailByFilecodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUploadDetailByFilecodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUploadDetailByFilecode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUploadDetailByFilecode*     ns1__GetUploadDetailByFilecode_,
    // output parameters:
    ns1__GetUploadDetailByFilecodeResponse* ns1__GetUploadDetailByFilecodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUploadDetailByFilecode(
    struct soap *soap,
    // input parameters:
    ns1__GetUploadDetailByFilecode*     ns1__GetUploadDetailByFilecode_,
    // output parameters:
    ns1__GetUploadDetailByFilecodeResponse* ns1__GetUploadDetailByFilecodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUploadDetailByFilecode SOAP
//gsoap ns1  service method-style:	GetUploadDetailByFilecode document
//gsoap ns1  service method-encoding:	GetUploadDetailByFilecode literal
//gsoap ns1  service method-input-action:	GetUploadDetailByFilecode http://ws.abx/abxWsGest/GetUploadDetailByFilecodeRequest
//gsoap ns1  service method-output-action:	GetUploadDetailByFilecode http://ws.abx/abxWsGest/GetUploadDetailByFilecodeResponse
int __ns1__GetUploadDetailByFilecode(
    ns1__GetUploadDetailByFilecode*     ns1__GetUploadDetailByFilecode_,	///< Input parameter
    ns1__GetUploadDetailByFilecodeResponse* ns1__GetUploadDetailByFilecodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUploadDetailByDataId                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUploadDetailByDataId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUploadDetailByDataIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUploadDetailByDataIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUploadDetailByDataId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUploadDetailByDataId*       ns1__GetUploadDetailByDataId_,
    // output parameters:
    ns1__GetUploadDetailByDataIdResponse* ns1__GetUploadDetailByDataIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUploadDetailByDataId(
    struct soap *soap,
    // input parameters:
    ns1__GetUploadDetailByDataId*       ns1__GetUploadDetailByDataId_,
    // output parameters:
    ns1__GetUploadDetailByDataIdResponse* ns1__GetUploadDetailByDataIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUploadDetailByDataId SOAP
//gsoap ns1  service method-style:	GetUploadDetailByDataId document
//gsoap ns1  service method-encoding:	GetUploadDetailByDataId literal
//gsoap ns1  service method-input-action:	GetUploadDetailByDataId http://ws.abx/abxWsGest/GetUploadDetailByDataIdRequest
//gsoap ns1  service method-output-action:	GetUploadDetailByDataId http://ws.abx/abxWsGest/GetUploadDetailByDataIdResponse
int __ns1__GetUploadDetailByDataId(
    ns1__GetUploadDetailByDataId*       ns1__GetUploadDetailByDataId_,	///< Input parameter
    ns1__GetUploadDetailByDataIdResponse* ns1__GetUploadDetailByDataIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUploadDetailByData                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUploadDetailByData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUploadDetailByDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUploadDetailByDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUploadDetailByData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUploadDetailByData*         ns1__GetUploadDetailByData_,
    // output parameters:
    ns1__GetUploadDetailByDataResponse* ns1__GetUploadDetailByDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUploadDetailByData(
    struct soap *soap,
    // input parameters:
    ns1__GetUploadDetailByData*         ns1__GetUploadDetailByData_,
    // output parameters:
    ns1__GetUploadDetailByDataResponse* ns1__GetUploadDetailByDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUploadDetailByData SOAP
//gsoap ns1  service method-style:	GetUploadDetailByData document
//gsoap ns1  service method-encoding:	GetUploadDetailByData literal
//gsoap ns1  service method-input-action:	GetUploadDetailByData http://ws.abx/abxWsGest/GetUploadDetailByDataRequest
//gsoap ns1  service method-output-action:	GetUploadDetailByData http://ws.abx/abxWsGest/GetUploadDetailByDataResponse
int __ns1__GetUploadDetailByData(
    ns1__GetUploadDetailByData*         ns1__GetUploadDetailByData_,	///< Input parameter
    ns1__GetUploadDetailByDataResponse* ns1__GetUploadDetailByDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUploadDetailByContId                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUploadDetailByContId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUploadDetailByContIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUploadDetailByContIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUploadDetailByContId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUploadDetailByContId*       ns1__GetUploadDetailByContId_,
    // output parameters:
    ns1__GetUploadDetailByContIdResponse* ns1__GetUploadDetailByContIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUploadDetailByContId(
    struct soap *soap,
    // input parameters:
    ns1__GetUploadDetailByContId*       ns1__GetUploadDetailByContId_,
    // output parameters:
    ns1__GetUploadDetailByContIdResponse* ns1__GetUploadDetailByContIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUploadDetailByContId SOAP
//gsoap ns1  service method-style:	GetUploadDetailByContId document
//gsoap ns1  service method-encoding:	GetUploadDetailByContId literal
//gsoap ns1  service method-input-action:	GetUploadDetailByContId http://ws.abx/abxWsGest/GetUploadDetailByContIdRequest
//gsoap ns1  service method-output-action:	GetUploadDetailByContId http://ws.abx/abxWsGest/GetUploadDetailByContIdResponse
int __ns1__GetUploadDetailByContId(
    ns1__GetUploadDetailByContId*       ns1__GetUploadDetailByContId_,	///< Input parameter
    ns1__GetUploadDetailByContIdResponse* ns1__GetUploadDetailByContIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUploadDetailByCont                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUploadDetailByCont" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUploadDetailByContRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUploadDetailByContResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUploadDetailByCont(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUploadDetailByCont*         ns1__GetUploadDetailByCont_,
    // output parameters:
    ns1__GetUploadDetailByContResponse* ns1__GetUploadDetailByContResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUploadDetailByCont(
    struct soap *soap,
    // input parameters:
    ns1__GetUploadDetailByCont*         ns1__GetUploadDetailByCont_,
    // output parameters:
    ns1__GetUploadDetailByContResponse* ns1__GetUploadDetailByContResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUploadDetailByCont SOAP
//gsoap ns1  service method-style:	GetUploadDetailByCont document
//gsoap ns1  service method-encoding:	GetUploadDetailByCont literal
//gsoap ns1  service method-input-action:	GetUploadDetailByCont http://ws.abx/abxWsGest/GetUploadDetailByContRequest
//gsoap ns1  service method-output-action:	GetUploadDetailByCont http://ws.abx/abxWsGest/GetUploadDetailByContResponse
int __ns1__GetUploadDetailByCont(
    ns1__GetUploadDetailByCont*         ns1__GetUploadDetailByCont_,	///< Input parameter
    ns1__GetUploadDetailByContResponse* ns1__GetUploadDetailByContResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadEndFile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadEndFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadEndFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadEndFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadEndFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadEndFile*                 ns1__UploadEndFile_,
    // output parameters:
    ns1__UploadEndFileResponse*         ns1__UploadEndFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadEndFile(
    struct soap *soap,
    // input parameters:
    ns1__UploadEndFile*                 ns1__UploadEndFile_,
    // output parameters:
    ns1__UploadEndFileResponse*         ns1__UploadEndFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadEndFile SOAP
//gsoap ns1  service method-style:	UploadEndFile document
//gsoap ns1  service method-encoding:	UploadEndFile literal
//gsoap ns1  service method-input-action:	UploadEndFile http://ws.abx/abxWsGest/UploadEndFileRequest
//gsoap ns1  service method-output-action:	UploadEndFile http://ws.abx/abxWsGest/UploadEndFileResponse
int __ns1__UploadEndFile(
    ns1__UploadEndFile*                 ns1__UploadEndFile_,	///< Input parameter
    ns1__UploadEndFileResponse*         ns1__UploadEndFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadEndFileContainer                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadEndFileContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/UploadEndFileContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/UploadEndFileContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadEndFileContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__UploadEndFileContainer*        ns1__UploadEndFileContainer_,
    // output parameters:
    ns1__UploadEndFileContainerResponse* ns1__UploadEndFileContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadEndFileContainer(
    struct soap *soap,
    // input parameters:
    ns1__UploadEndFileContainer*        ns1__UploadEndFileContainer_,
    // output parameters:
    ns1__UploadEndFileContainerResponse* ns1__UploadEndFileContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	UploadEndFileContainer SOAP
//gsoap ns1  service method-style:	UploadEndFileContainer document
//gsoap ns1  service method-encoding:	UploadEndFileContainer literal
//gsoap ns1  service method-input-action:	UploadEndFileContainer http://ws.abx/abxWsGest/UploadEndFileContainerRequest
//gsoap ns1  service method-output-action:	UploadEndFileContainer http://ws.abx/abxWsGest/UploadEndFileContainerResponse
int __ns1__UploadEndFileContainer(
    ns1__UploadEndFileContainer*        ns1__UploadEndFileContainer_,	///< Input parameter
    ns1__UploadEndFileContainerResponse* ns1__UploadEndFileContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpUploadPath                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpUploadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpUploadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpUploadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpUploadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpUploadPath*              ns1__SetTmpUploadPath_,
    // output parameters:
    ns1__SetTmpUploadPathResponse*      ns1__SetTmpUploadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpUploadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpUploadPath*              ns1__SetTmpUploadPath_,
    // output parameters:
    ns1__SetTmpUploadPathResponse*      ns1__SetTmpUploadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpUploadPath SOAP
//gsoap ns1  service method-style:	SetTmpUploadPath document
//gsoap ns1  service method-encoding:	SetTmpUploadPath literal
//gsoap ns1  service method-input-action:	SetTmpUploadPath http://ws.abx/abxWsGest/SetTmpUploadPathRequest
//gsoap ns1  service method-output-action:	SetTmpUploadPath http://ws.abx/abxWsGest/SetTmpUploadPathResponse
int __ns1__SetTmpUploadPath(
    ns1__SetTmpUploadPath*              ns1__SetTmpUploadPath_,	///< Input parameter
    ns1__SetTmpUploadPathResponse*      ns1__SetTmpUploadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetTmpDownloadPath                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetTmpDownloadPath" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetTmpDownloadPathRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetTmpDownloadPathResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetTmpDownloadPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetTmpDownloadPath*            ns1__SetTmpDownloadPath_,
    // output parameters:
    ns1__SetTmpDownloadPathResponse*    ns1__SetTmpDownloadPathResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetTmpDownloadPath(
    struct soap *soap,
    // input parameters:
    ns1__SetTmpDownloadPath*            ns1__SetTmpDownloadPath_,
    // output parameters:
    ns1__SetTmpDownloadPathResponse*    ns1__SetTmpDownloadPathResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetTmpDownloadPath SOAP
//gsoap ns1  service method-style:	SetTmpDownloadPath document
//gsoap ns1  service method-encoding:	SetTmpDownloadPath literal
//gsoap ns1  service method-input-action:	SetTmpDownloadPath http://ws.abx/abxWsGest/SetTmpDownloadPathRequest
//gsoap ns1  service method-output-action:	SetTmpDownloadPath http://ws.abx/abxWsGest/SetTmpDownloadPathResponse
int __ns1__SetTmpDownloadPath(
    ns1__SetTmpDownloadPath*            ns1__SetTmpDownloadPath_,	///< Input parameter
    ns1__SetTmpDownloadPathResponse*    ns1__SetTmpDownloadPathResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDownloadDetailByFilecode                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDownloadDetailByFilecode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDownloadDetailByFilecodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDownloadDetailByFilecodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDownloadDetailByFilecode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDownloadDetailByFilecode*   ns1__GetDownloadDetailByFilecode_,
    // output parameters:
    ns1__GetDownloadDetailByFilecodeResponse* ns1__GetDownloadDetailByFilecodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDownloadDetailByFilecode(
    struct soap *soap,
    // input parameters:
    ns1__GetDownloadDetailByFilecode*   ns1__GetDownloadDetailByFilecode_,
    // output parameters:
    ns1__GetDownloadDetailByFilecodeResponse* ns1__GetDownloadDetailByFilecodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDownloadDetailByFilecode SOAP
//gsoap ns1  service method-style:	GetDownloadDetailByFilecode document
//gsoap ns1  service method-encoding:	GetDownloadDetailByFilecode literal
//gsoap ns1  service method-input-action:	GetDownloadDetailByFilecode http://ws.abx/abxWsGest/GetDownloadDetailByFilecodeRequest
//gsoap ns1  service method-output-action:	GetDownloadDetailByFilecode http://ws.abx/abxWsGest/GetDownloadDetailByFilecodeResponse
int __ns1__GetDownloadDetailByFilecode(
    ns1__GetDownloadDetailByFilecode*   ns1__GetDownloadDetailByFilecode_,	///< Input parameter
    ns1__GetDownloadDetailByFilecodeResponse* ns1__GetDownloadDetailByFilecodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDownloadDetailByDataId                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDownloadDetailByDataId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDownloadDetailByDataIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDownloadDetailByDataIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDownloadDetailByDataId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDownloadDetailByDataId*     ns1__GetDownloadDetailByDataId_,
    // output parameters:
    ns1__GetDownloadDetailByDataIdResponse* ns1__GetDownloadDetailByDataIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDownloadDetailByDataId(
    struct soap *soap,
    // input parameters:
    ns1__GetDownloadDetailByDataId*     ns1__GetDownloadDetailByDataId_,
    // output parameters:
    ns1__GetDownloadDetailByDataIdResponse* ns1__GetDownloadDetailByDataIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDownloadDetailByDataId SOAP
//gsoap ns1  service method-style:	GetDownloadDetailByDataId document
//gsoap ns1  service method-encoding:	GetDownloadDetailByDataId literal
//gsoap ns1  service method-input-action:	GetDownloadDetailByDataId http://ws.abx/abxWsGest/GetDownloadDetailByDataIdRequest
//gsoap ns1  service method-output-action:	GetDownloadDetailByDataId http://ws.abx/abxWsGest/GetDownloadDetailByDataIdResponse
int __ns1__GetDownloadDetailByDataId(
    ns1__GetDownloadDetailByDataId*     ns1__GetDownloadDetailByDataId_,	///< Input parameter
    ns1__GetDownloadDetailByDataIdResponse* ns1__GetDownloadDetailByDataIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDownloadDetailByData                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDownloadDetailByData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDownloadDetailByDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDownloadDetailByDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDownloadDetailByData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDownloadDetailByData*       ns1__GetDownloadDetailByData_,
    // output parameters:
    ns1__GetDownloadDetailByDataResponse* ns1__GetDownloadDetailByDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDownloadDetailByData(
    struct soap *soap,
    // input parameters:
    ns1__GetDownloadDetailByData*       ns1__GetDownloadDetailByData_,
    // output parameters:
    ns1__GetDownloadDetailByDataResponse* ns1__GetDownloadDetailByDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDownloadDetailByData SOAP
//gsoap ns1  service method-style:	GetDownloadDetailByData document
//gsoap ns1  service method-encoding:	GetDownloadDetailByData literal
//gsoap ns1  service method-input-action:	GetDownloadDetailByData http://ws.abx/abxWsGest/GetDownloadDetailByDataRequest
//gsoap ns1  service method-output-action:	GetDownloadDetailByData http://ws.abx/abxWsGest/GetDownloadDetailByDataResponse
int __ns1__GetDownloadDetailByData(
    ns1__GetDownloadDetailByData*       ns1__GetDownloadDetailByData_,	///< Input parameter
    ns1__GetDownloadDetailByDataResponse* ns1__GetDownloadDetailByDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDownloadDetailByContId                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDownloadDetailByContId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDownloadDetailByContIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDownloadDetailByContIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDownloadDetailByContId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDownloadDetailByContId*     ns1__GetDownloadDetailByContId_,
    // output parameters:
    ns1__GetDownloadDetailByContIdResponse* ns1__GetDownloadDetailByContIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDownloadDetailByContId(
    struct soap *soap,
    // input parameters:
    ns1__GetDownloadDetailByContId*     ns1__GetDownloadDetailByContId_,
    // output parameters:
    ns1__GetDownloadDetailByContIdResponse* ns1__GetDownloadDetailByContIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDownloadDetailByContId SOAP
//gsoap ns1  service method-style:	GetDownloadDetailByContId document
//gsoap ns1  service method-encoding:	GetDownloadDetailByContId literal
//gsoap ns1  service method-input-action:	GetDownloadDetailByContId http://ws.abx/abxWsGest/GetDownloadDetailByContIdRequest
//gsoap ns1  service method-output-action:	GetDownloadDetailByContId http://ws.abx/abxWsGest/GetDownloadDetailByContIdResponse
int __ns1__GetDownloadDetailByContId(
    ns1__GetDownloadDetailByContId*     ns1__GetDownloadDetailByContId_,	///< Input parameter
    ns1__GetDownloadDetailByContIdResponse* ns1__GetDownloadDetailByContIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDownloadDetailByCont                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDownloadDetailByCont" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDownloadDetailByContRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDownloadDetailByContResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDownloadDetailByCont(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDownloadDetailByCont*       ns1__GetDownloadDetailByCont_,
    // output parameters:
    ns1__GetDownloadDetailByContResponse* ns1__GetDownloadDetailByContResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDownloadDetailByCont(
    struct soap *soap,
    // input parameters:
    ns1__GetDownloadDetailByCont*       ns1__GetDownloadDetailByCont_,
    // output parameters:
    ns1__GetDownloadDetailByContResponse* ns1__GetDownloadDetailByContResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDownloadDetailByCont SOAP
//gsoap ns1  service method-style:	GetDownloadDetailByCont document
//gsoap ns1  service method-encoding:	GetDownloadDetailByCont literal
//gsoap ns1  service method-input-action:	GetDownloadDetailByCont http://ws.abx/abxWsGest/GetDownloadDetailByContRequest
//gsoap ns1  service method-output-action:	GetDownloadDetailByCont http://ws.abx/abxWsGest/GetDownloadDetailByContResponse
int __ns1__GetDownloadDetailByCont(
    ns1__GetDownloadDetailByCont*       ns1__GetDownloadDetailByCont_,	///< Input parameter
    ns1__GetDownloadDetailByContResponse* ns1__GetDownloadDetailByContResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetCountFileList                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetCountFileList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetCountFileListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetCountFileListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetCountFileList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetCountFileList*              ns1__GetCountFileList_,
    // output parameters:
    ns1__GetCountFileListResponse*      ns1__GetCountFileListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetCountFileList(
    struct soap *soap,
    // input parameters:
    ns1__GetCountFileList*              ns1__GetCountFileList_,
    // output parameters:
    ns1__GetCountFileListResponse*      ns1__GetCountFileListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetCountFileList SOAP
//gsoap ns1  service method-style:	GetCountFileList document
//gsoap ns1  service method-encoding:	GetCountFileList literal
//gsoap ns1  service method-input-action:	GetCountFileList http://ws.abx/abxWsGest/GetCountFileListRequest
//gsoap ns1  service method-output-action:	GetCountFileList http://ws.abx/abxWsGest/GetCountFileListResponse
int __ns1__GetCountFileList(
    ns1__GetCountFileList*              ns1__GetCountFileList_,	///< Input parameter
    ns1__GetCountFileListResponse*      ns1__GetCountFileListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyFileDescription                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyFileDescription" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyFileDescriptionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyFileDescriptionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyFileDescription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyFileDescription*         ns1__ModifyFileDescription_,
    // output parameters:
    ns1__ModifyFileDescriptionResponse* ns1__ModifyFileDescriptionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyFileDescription(
    struct soap *soap,
    // input parameters:
    ns1__ModifyFileDescription*         ns1__ModifyFileDescription_,
    // output parameters:
    ns1__ModifyFileDescriptionResponse* ns1__ModifyFileDescriptionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyFileDescription SOAP
//gsoap ns1  service method-style:	ModifyFileDescription document
//gsoap ns1  service method-encoding:	ModifyFileDescription literal
//gsoap ns1  service method-input-action:	ModifyFileDescription http://ws.abx/abxWsGest/ModifyFileDescriptionRequest
//gsoap ns1  service method-output-action:	ModifyFileDescription http://ws.abx/abxWsGest/ModifyFileDescriptionResponse
int __ns1__ModifyFileDescription(
    ns1__ModifyFileDescription*         ns1__ModifyFileDescription_,	///< Input parameter
    ns1__ModifyFileDescriptionResponse* ns1__ModifyFileDescriptionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CopyFile                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CopyFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CopyFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CopyFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CopyFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CopyFile*                      ns1__CopyFile_,
    // output parameters:
    ns1__CopyFileResponse*              ns1__CopyFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CopyFile(
    struct soap *soap,
    // input parameters:
    ns1__CopyFile*                      ns1__CopyFile_,
    // output parameters:
    ns1__CopyFileResponse*              ns1__CopyFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CopyFile SOAP
//gsoap ns1  service method-style:	CopyFile document
//gsoap ns1  service method-encoding:	CopyFile literal
//gsoap ns1  service method-input-action:	CopyFile http://ws.abx/abxWsGest/CopyFileRequest
//gsoap ns1  service method-output-action:	CopyFile http://ws.abx/abxWsGest/CopyFileResponse
int __ns1__CopyFile(
    ns1__CopyFile*                      ns1__CopyFile_,	///< Input parameter
    ns1__CopyFileResponse*              ns1__CopyFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__IfFileExist                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__IfFileExist" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/IfFileExistRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/IfFileExistResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__IfFileExist(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__IfFileExist*                   ns1__IfFileExist_,
    // output parameters:
    ns1__IfFileExistResponse*           ns1__IfFileExistResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__IfFileExist(
    struct soap *soap,
    // input parameters:
    ns1__IfFileExist*                   ns1__IfFileExist_,
    // output parameters:
    ns1__IfFileExistResponse*           ns1__IfFileExistResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	IfFileExist SOAP
//gsoap ns1  service method-style:	IfFileExist document
//gsoap ns1  service method-encoding:	IfFileExist literal
//gsoap ns1  service method-input-action:	IfFileExist http://ws.abx/abxWsGest/IfFileExistRequest
//gsoap ns1  service method-output-action:	IfFileExist http://ws.abx/abxWsGest/IfFileExistResponse
int __ns1__IfFileExist(
    ns1__IfFileExist*                   ns1__IfFileExist_,	///< Input parameter
    ns1__IfFileExistResponse*           ns1__IfFileExistResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__SetFileAvailable                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SetFileAvailable" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/SetFileAvailableRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/SetFileAvailableResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SetFileAvailable(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__SetFileAvailable*              ns1__SetFileAvailable_,
    // output parameters:
    ns1__SetFileAvailableResponse*      ns1__SetFileAvailableResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SetFileAvailable(
    struct soap *soap,
    // input parameters:
    ns1__SetFileAvailable*              ns1__SetFileAvailable_,
    // output parameters:
    ns1__SetFileAvailableResponse*      ns1__SetFileAvailableResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	SetFileAvailable SOAP
//gsoap ns1  service method-style:	SetFileAvailable document
//gsoap ns1  service method-encoding:	SetFileAvailable literal
//gsoap ns1  service method-input-action:	SetFileAvailable http://ws.abx/abxWsGest/SetFileAvailableRequest
//gsoap ns1  service method-output-action:	SetFileAvailable http://ws.abx/abxWsGest/SetFileAvailableResponse
int __ns1__SetFileAvailable(
    ns1__SetFileAvailable*              ns1__SetFileAvailable_,	///< Input parameter
    ns1__SetFileAvailableResponse*      ns1__SetFileAvailableResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFileAvailable                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFileAvailable" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFileAvailableRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFileAvailableResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFileAvailable(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFileAvailable*              ns1__GetFileAvailable_,
    // output parameters:
    ns1__GetFileAvailableResponse*      ns1__GetFileAvailableResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFileAvailable(
    struct soap *soap,
    // input parameters:
    ns1__GetFileAvailable*              ns1__GetFileAvailable_,
    // output parameters:
    ns1__GetFileAvailableResponse*      ns1__GetFileAvailableResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFileAvailable SOAP
//gsoap ns1  service method-style:	GetFileAvailable document
//gsoap ns1  service method-encoding:	GetFileAvailable literal
//gsoap ns1  service method-input-action:	GetFileAvailable http://ws.abx/abxWsGest/GetFileAvailableRequest
//gsoap ns1  service method-output-action:	GetFileAvailable http://ws.abx/abxWsGest/GetFileAvailableResponse
int __ns1__GetFileAvailable(
    ns1__GetFileAvailable*              ns1__GetFileAvailable_,	///< Input parameter
    ns1__GetFileAvailableResponse*      ns1__GetFileAvailableResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddFileToSyncByArcCue                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddFileToSyncByArcCue" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddFileToSyncByArcCueRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddFileToSyncByArcCueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddFileToSyncByArcCue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddFileToSyncByArcCue*         ns1__AddFileToSyncByArcCue_,
    // output parameters:
    ns1__AddFileToSyncByArcCueResponse* ns1__AddFileToSyncByArcCueResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddFileToSyncByArcCue(
    struct soap *soap,
    // input parameters:
    ns1__AddFileToSyncByArcCue*         ns1__AddFileToSyncByArcCue_,
    // output parameters:
    ns1__AddFileToSyncByArcCueResponse* ns1__AddFileToSyncByArcCueResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddFileToSyncByArcCue SOAP
//gsoap ns1  service method-style:	AddFileToSyncByArcCue document
//gsoap ns1  service method-encoding:	AddFileToSyncByArcCue literal
//gsoap ns1  service method-input-action:	AddFileToSyncByArcCue http://ws.abx/abxWsGest/AddFileToSyncByArcCueRequest
//gsoap ns1  service method-output-action:	AddFileToSyncByArcCue http://ws.abx/abxWsGest/AddFileToSyncByArcCueResponse
int __ns1__AddFileToSyncByArcCue(
    ns1__AddFileToSyncByArcCue*         ns1__AddFileToSyncByArcCue_,	///< Input parameter
    ns1__AddFileToSyncByArcCueResponse* ns1__AddFileToSyncByArcCueResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREDB_USCOREtestConnection                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREDB_USCOREtestConnection" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_DB_testConnectionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_DB_testConnectionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREDB_USCOREtestConnection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREDB_USCOREtestConnection* ns1__Fk_USCOREDB_USCOREtestConnection_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREtestConnectionResponse* ns1__Fk_USCOREDB_USCOREtestConnectionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREDB_USCOREtestConnection(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREDB_USCOREtestConnection* ns1__Fk_USCOREDB_USCOREtestConnection_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREtestConnectionResponse* ns1__Fk_USCOREDB_USCOREtestConnectionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREDB_USCOREtestConnection SOAP
//gsoap ns1  service method-style:	Fk_USCOREDB_USCOREtestConnection document
//gsoap ns1  service method-encoding:	Fk_USCOREDB_USCOREtestConnection literal
//gsoap ns1  service method-input-action:	Fk_USCOREDB_USCOREtestConnection http://ws.abx/abxWsGest/Fk_DB_testConnectionRequest
//gsoap ns1  service method-output-action:	Fk_USCOREDB_USCOREtestConnection http://ws.abx/abxWsGest/Fk_DB_testConnectionResponse
int __ns1__Fk_USCOREDB_USCOREtestConnection(
    ns1__Fk_USCOREDB_USCOREtestConnection* ns1__Fk_USCOREDB_USCOREtestConnection_,	///< Input parameter
    ns1__Fk_USCOREDB_USCOREtestConnectionResponse* ns1__Fk_USCOREDB_USCOREtestConnectionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREWS_USCOREinsert                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREWS_USCOREinsert" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_WS_insertRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_WS_insertResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREWS_USCOREinsert(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREWS_USCOREinsert*      ns1__Fk_USCOREWS_USCOREinsert_,
    // output parameters:
    ns1__Fk_USCOREWS_USCOREinsertResponse* ns1__Fk_USCOREWS_USCOREinsertResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREWS_USCOREinsert(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREWS_USCOREinsert*      ns1__Fk_USCOREWS_USCOREinsert_,
    // output parameters:
    ns1__Fk_USCOREWS_USCOREinsertResponse* ns1__Fk_USCOREWS_USCOREinsertResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREWS_USCOREinsert SOAP
//gsoap ns1  service method-style:	Fk_USCOREWS_USCOREinsert document
//gsoap ns1  service method-encoding:	Fk_USCOREWS_USCOREinsert literal
//gsoap ns1  service method-input-action:	Fk_USCOREWS_USCOREinsert http://ws.abx/abxWsGest/Fk_WS_insertRequest
//gsoap ns1  service method-output-action:	Fk_USCOREWS_USCOREinsert http://ws.abx/abxWsGest/Fk_WS_insertResponse
int __ns1__Fk_USCOREWS_USCOREinsert(
    ns1__Fk_USCOREWS_USCOREinsert*      ns1__Fk_USCOREWS_USCOREinsert_,	///< Input parameter
    ns1__Fk_USCOREWS_USCOREinsertResponse* ns1__Fk_USCOREWS_USCOREinsertResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREDB_USCOREmodify                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREDB_USCOREmodify" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_DB_modifyRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_DB_modifyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREDB_USCOREmodify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREDB_USCOREmodify*      ns1__Fk_USCOREDB_USCOREmodify_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREmodifyResponse* ns1__Fk_USCOREDB_USCOREmodifyResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREDB_USCOREmodify(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREDB_USCOREmodify*      ns1__Fk_USCOREDB_USCOREmodify_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREmodifyResponse* ns1__Fk_USCOREDB_USCOREmodifyResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREDB_USCOREmodify SOAP
//gsoap ns1  service method-style:	Fk_USCOREDB_USCOREmodify document
//gsoap ns1  service method-encoding:	Fk_USCOREDB_USCOREmodify literal
//gsoap ns1  service method-input-action:	Fk_USCOREDB_USCOREmodify http://ws.abx/abxWsGest/Fk_DB_modifyRequest
//gsoap ns1  service method-output-action:	Fk_USCOREDB_USCOREmodify http://ws.abx/abxWsGest/Fk_DB_modifyResponse
int __ns1__Fk_USCOREDB_USCOREmodify(
    ns1__Fk_USCOREDB_USCOREmodify*      ns1__Fk_USCOREDB_USCOREmodify_,	///< Input parameter
    ns1__Fk_USCOREDB_USCOREmodifyResponse* ns1__Fk_USCOREDB_USCOREmodifyResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREDB_USCOREdelete                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREDB_USCOREdelete" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_DB_deleteRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_DB_deleteResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREDB_USCOREdelete(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREDB_USCOREdelete*      ns1__Fk_USCOREDB_USCOREdelete_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREdeleteResponse* ns1__Fk_USCOREDB_USCOREdeleteResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREDB_USCOREdelete(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREDB_USCOREdelete*      ns1__Fk_USCOREDB_USCOREdelete_,
    // output parameters:
    ns1__Fk_USCOREDB_USCOREdeleteResponse* ns1__Fk_USCOREDB_USCOREdeleteResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREDB_USCOREdelete SOAP
//gsoap ns1  service method-style:	Fk_USCOREDB_USCOREdelete document
//gsoap ns1  service method-encoding:	Fk_USCOREDB_USCOREdelete literal
//gsoap ns1  service method-input-action:	Fk_USCOREDB_USCOREdelete http://ws.abx/abxWsGest/Fk_DB_deleteRequest
//gsoap ns1  service method-output-action:	Fk_USCOREDB_USCOREdelete http://ws.abx/abxWsGest/Fk_DB_deleteResponse
int __ns1__Fk_USCOREDB_USCOREdelete(
    ns1__Fk_USCOREDB_USCOREdelete*      ns1__Fk_USCOREDB_USCOREdelete_,	///< Input parameter
    ns1__Fk_USCOREDB_USCOREdeleteResponse* ns1__Fk_USCOREDB_USCOREdeleteResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetParsAllFk                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetParsAllFk" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getParsAllFkRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getParsAllFkResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetParsAllFk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetParsAllFk*         ns1__Fk_USCOREgetParsAllFk_,
    // output parameters:
    ns1__Fk_USCOREgetParsAllFkResponse* ns1__Fk_USCOREgetParsAllFkResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetParsAllFk(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetParsAllFk*         ns1__Fk_USCOREgetParsAllFk_,
    // output parameters:
    ns1__Fk_USCOREgetParsAllFkResponse* ns1__Fk_USCOREgetParsAllFkResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetParsAllFk SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetParsAllFk document
//gsoap ns1  service method-encoding:	Fk_USCOREgetParsAllFk literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetParsAllFk http://ws.abx/abxWsGest/Fk_getParsAllFkRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetParsAllFk http://ws.abx/abxWsGest/Fk_getParsAllFkResponse
int __ns1__Fk_USCOREgetParsAllFk(
    ns1__Fk_USCOREgetParsAllFk*         ns1__Fk_USCOREgetParsAllFk_,	///< Input parameter
    ns1__Fk_USCOREgetParsAllFkResponse* ns1__Fk_USCOREgetParsAllFkResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetPars                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetPars" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getParsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getParsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetPars(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetPars*              ns1__Fk_USCOREgetPars_,
    // output parameters:
    ns1__Fk_USCOREgetParsResponse*      ns1__Fk_USCOREgetParsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetPars(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetPars*              ns1__Fk_USCOREgetPars_,
    // output parameters:
    ns1__Fk_USCOREgetParsResponse*      ns1__Fk_USCOREgetParsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetPars SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetPars document
//gsoap ns1  service method-encoding:	Fk_USCOREgetPars literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetPars http://ws.abx/abxWsGest/Fk_getParsRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetPars http://ws.abx/abxWsGest/Fk_getParsResponse
int __ns1__Fk_USCOREgetPars(
    ns1__Fk_USCOREgetPars*              ns1__Fk_USCOREgetPars_,	///< Input parameter
    ns1__Fk_USCOREgetParsResponse*      ns1__Fk_USCOREgetParsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREcreate                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREcreate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_createRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_createResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREcreate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREcreate*               ns1__Fk_USCOREcreate_,
    // output parameters:
    ns1__Fk_USCOREcreateResponse*       ns1__Fk_USCOREcreateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREcreate(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREcreate*               ns1__Fk_USCOREcreate_,
    // output parameters:
    ns1__Fk_USCOREcreateResponse*       ns1__Fk_USCOREcreateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREcreate SOAP
//gsoap ns1  service method-style:	Fk_USCOREcreate document
//gsoap ns1  service method-encoding:	Fk_USCOREcreate literal
//gsoap ns1  service method-input-action:	Fk_USCOREcreate http://ws.abx/abxWsGest/Fk_createRequest
//gsoap ns1  service method-output-action:	Fk_USCOREcreate http://ws.abx/abxWsGest/Fk_createResponse
int __ns1__Fk_USCOREcreate(
    ns1__Fk_USCOREcreate*               ns1__Fk_USCOREcreate_,	///< Input parameter
    ns1__Fk_USCOREcreateResponse*       ns1__Fk_USCOREcreateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetLanguages                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetLanguages" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetLanguagesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetLanguagesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetLanguages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetLanguages*                  ns1__GetLanguages_,
    // output parameters:
    ns1__GetLanguagesResponse*          ns1__GetLanguagesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetLanguages(
    struct soap *soap,
    // input parameters:
    ns1__GetLanguages*                  ns1__GetLanguages_,
    // output parameters:
    ns1__GetLanguagesResponse*          ns1__GetLanguagesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetLanguages SOAP
//gsoap ns1  service method-style:	GetLanguages document
//gsoap ns1  service method-encoding:	GetLanguages literal
//gsoap ns1  service method-input-action:	GetLanguages http://ws.abx/abxWsGest/GetLanguagesRequest
//gsoap ns1  service method-output-action:	GetLanguages http://ws.abx/abxWsGest/GetLanguagesResponse
int __ns1__GetLanguages(
    ns1__GetLanguages*                  ns1__GetLanguages_,	///< Input parameter
    ns1__GetLanguagesResponse*          ns1__GetLanguagesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddLogSDK                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddLogSDK" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddLogSDKRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddLogSDKResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddLogSDK(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddLogSDK*                     ns1__AddLogSDK_,
    // output parameters:
    ns1__AddLogSDKResponse*             ns1__AddLogSDKResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddLogSDK(
    struct soap *soap,
    // input parameters:
    ns1__AddLogSDK*                     ns1__AddLogSDK_,
    // output parameters:
    ns1__AddLogSDKResponse*             ns1__AddLogSDKResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddLogSDK SOAP
//gsoap ns1  service method-style:	AddLogSDK document
//gsoap ns1  service method-encoding:	AddLogSDK literal
//gsoap ns1  service method-input-action:	AddLogSDK http://ws.abx/abxWsGest/AddLogSDKRequest
//gsoap ns1  service method-output-action:	AddLogSDK http://ws.abx/abxWsGest/AddLogSDKResponse
int __ns1__AddLogSDK(
    ns1__AddLogSDK*                     ns1__AddLogSDK_,	///< Input parameter
    ns1__AddLogSDKResponse*             ns1__AddLogSDKResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSDKLogList                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSDKLogList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSDKLogListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSDKLogListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSDKLogList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSDKLogList*                 ns1__GetSDKLogList_,
    // output parameters:
    ns1__GetSDKLogListResponse*         ns1__GetSDKLogListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSDKLogList(
    struct soap *soap,
    // input parameters:
    ns1__GetSDKLogList*                 ns1__GetSDKLogList_,
    // output parameters:
    ns1__GetSDKLogListResponse*         ns1__GetSDKLogListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSDKLogList SOAP
//gsoap ns1  service method-style:	GetSDKLogList document
//gsoap ns1  service method-encoding:	GetSDKLogList literal
//gsoap ns1  service method-input-action:	GetSDKLogList http://ws.abx/abxWsGest/GetSDKLogListRequest
//gsoap ns1  service method-output-action:	GetSDKLogList http://ws.abx/abxWsGest/GetSDKLogListResponse
int __ns1__GetSDKLogList(
    ns1__GetSDKLogList*                 ns1__GetSDKLogList_,	///< Input parameter
    ns1__GetSDKLogListResponse*         ns1__GetSDKLogListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteSDKLog                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteSDKLog" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteSDKLogRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteSDKLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteSDKLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteSDKLog*                  ns1__DeleteSDKLog_,
    // output parameters:
    ns1__DeleteSDKLogResponse*          ns1__DeleteSDKLogResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteSDKLog(
    struct soap *soap,
    // input parameters:
    ns1__DeleteSDKLog*                  ns1__DeleteSDKLog_,
    // output parameters:
    ns1__DeleteSDKLogResponse*          ns1__DeleteSDKLogResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteSDKLog SOAP
//gsoap ns1  service method-style:	DeleteSDKLog document
//gsoap ns1  service method-encoding:	DeleteSDKLog literal
//gsoap ns1  service method-input-action:	DeleteSDKLog http://ws.abx/abxWsGest/DeleteSDKLogRequest
//gsoap ns1  service method-output-action:	DeleteSDKLog http://ws.abx/abxWsGest/DeleteSDKLogResponse
int __ns1__DeleteSDKLog(
    ns1__DeleteSDKLog*                  ns1__DeleteSDKLog_,	///< Input parameter
    ns1__DeleteSDKLogResponse*          ns1__DeleteSDKLogResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ResetUserSessions                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ResetUserSessions" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ResetUserSessionsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ResetUserSessionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ResetUserSessions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ResetUserSessions*             ns1__ResetUserSessions_,
    // output parameters:
    ns1__ResetUserSessionsResponse*     ns1__ResetUserSessionsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ResetUserSessions(
    struct soap *soap,
    // input parameters:
    ns1__ResetUserSessions*             ns1__ResetUserSessions_,
    // output parameters:
    ns1__ResetUserSessionsResponse*     ns1__ResetUserSessionsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ResetUserSessions SOAP
//gsoap ns1  service method-style:	ResetUserSessions document
//gsoap ns1  service method-encoding:	ResetUserSessions literal
//gsoap ns1  service method-input-action:	ResetUserSessions http://ws.abx/abxWsGest/ResetUserSessionsRequest
//gsoap ns1  service method-output-action:	ResetUserSessions http://ws.abx/abxWsGest/ResetUserSessionsResponse
int __ns1__ResetUserSessions(
    ns1__ResetUserSessions*             ns1__ResetUserSessions_,	///< Input parameter
    ns1__ResetUserSessionsResponse*     ns1__ResetUserSessionsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ValidateSession                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ValidateSession" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ValidateSessionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ValidateSessionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ValidateSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ValidateSession*               ns1__ValidateSession_,
    // output parameters:
    ns1__ValidateSessionResponse*       ns1__ValidateSessionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ValidateSession(
    struct soap *soap,
    // input parameters:
    ns1__ValidateSession*               ns1__ValidateSession_,
    // output parameters:
    ns1__ValidateSessionResponse*       ns1__ValidateSessionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ValidateSession SOAP
//gsoap ns1  service method-style:	ValidateSession document
//gsoap ns1  service method-encoding:	ValidateSession literal
//gsoap ns1  service method-input-action:	ValidateSession http://ws.abx/abxWsGest/ValidateSessionRequest
//gsoap ns1  service method-output-action:	ValidateSession http://ws.abx/abxWsGest/ValidateSessionResponse
int __ns1__ValidateSession(
    ns1__ValidateSession*               ns1__ValidateSession_,	///< Input parameter
    ns1__ValidateSessionResponse*       ns1__ValidateSessionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUserList                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUserList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUserListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUserListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUserList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUserList*                   ns1__GetUserList_,
    // output parameters:
    ns1__GetUserListResponse*           ns1__GetUserListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUserList(
    struct soap *soap,
    // input parameters:
    ns1__GetUserList*                   ns1__GetUserList_,
    // output parameters:
    ns1__GetUserListResponse*           ns1__GetUserListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUserList SOAP
//gsoap ns1  service method-style:	GetUserList document
//gsoap ns1  service method-encoding:	GetUserList literal
//gsoap ns1  service method-input-action:	GetUserList http://ws.abx/abxWsGest/GetUserListRequest
//gsoap ns1  service method-output-action:	GetUserList http://ws.abx/abxWsGest/GetUserListResponse
int __ns1__GetUserList(
    ns1__GetUserList*                   ns1__GetUserList_,	///< Input parameter
    ns1__GetUserListResponse*           ns1__GetUserListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUserListActiveDirectory                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUserListActiveDirectory" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUserListActiveDirectoryRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUserListActiveDirectoryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUserListActiveDirectory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUserListActiveDirectory*    ns1__GetUserListActiveDirectory_,
    // output parameters:
    ns1__GetUserListActiveDirectoryResponse* ns1__GetUserListActiveDirectoryResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUserListActiveDirectory(
    struct soap *soap,
    // input parameters:
    ns1__GetUserListActiveDirectory*    ns1__GetUserListActiveDirectory_,
    // output parameters:
    ns1__GetUserListActiveDirectoryResponse* ns1__GetUserListActiveDirectoryResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUserListActiveDirectory SOAP
//gsoap ns1  service method-style:	GetUserListActiveDirectory document
//gsoap ns1  service method-encoding:	GetUserListActiveDirectory literal
//gsoap ns1  service method-input-action:	GetUserListActiveDirectory http://ws.abx/abxWsGest/GetUserListActiveDirectoryRequest
//gsoap ns1  service method-output-action:	GetUserListActiveDirectory http://ws.abx/abxWsGest/GetUserListActiveDirectoryResponse
int __ns1__GetUserListActiveDirectory(
    ns1__GetUserListActiveDirectory*    ns1__GetUserListActiveDirectory_,	///< Input parameter
    ns1__GetUserListActiveDirectoryResponse* ns1__GetUserListActiveDirectoryResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertUser                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertUser*                    ns1__InsertUser_,
    // output parameters:
    ns1__InsertUserResponse*            ns1__InsertUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertUser(
    struct soap *soap,
    // input parameters:
    ns1__InsertUser*                    ns1__InsertUser_,
    // output parameters:
    ns1__InsertUserResponse*            ns1__InsertUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertUser SOAP
//gsoap ns1  service method-style:	InsertUser document
//gsoap ns1  service method-encoding:	InsertUser literal
//gsoap ns1  service method-input-action:	InsertUser http://ws.abx/abxWsGest/InsertUserRequest
//gsoap ns1  service method-output-action:	InsertUser http://ws.abx/abxWsGest/InsertUserResponse
int __ns1__InsertUser(
    ns1__InsertUser*                    ns1__InsertUser_,	///< Input parameter
    ns1__InsertUserResponse*            ns1__InsertUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyUser                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyUser*                    ns1__ModifyUser_,
    // output parameters:
    ns1__ModifyUserResponse*            ns1__ModifyUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyUser(
    struct soap *soap,
    // input parameters:
    ns1__ModifyUser*                    ns1__ModifyUser_,
    // output parameters:
    ns1__ModifyUserResponse*            ns1__ModifyUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyUser SOAP
//gsoap ns1  service method-style:	ModifyUser document
//gsoap ns1  service method-encoding:	ModifyUser literal
//gsoap ns1  service method-input-action:	ModifyUser http://ws.abx/abxWsGest/ModifyUserRequest
//gsoap ns1  service method-output-action:	ModifyUser http://ws.abx/abxWsGest/ModifyUserResponse
int __ns1__ModifyUser(
    ns1__ModifyUser*                    ns1__ModifyUser_,	///< Input parameter
    ns1__ModifyUserResponse*            ns1__ModifyUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertUserConfig                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertUserConfig" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertUserConfigRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertUserConfigResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertUserConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertUserConfig*              ns1__InsertUserConfig_,
    // output parameters:
    ns1__InsertUserConfigResponse*      ns1__InsertUserConfigResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertUserConfig(
    struct soap *soap,
    // input parameters:
    ns1__InsertUserConfig*              ns1__InsertUserConfig_,
    // output parameters:
    ns1__InsertUserConfigResponse*      ns1__InsertUserConfigResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertUserConfig SOAP
//gsoap ns1  service method-style:	InsertUserConfig document
//gsoap ns1  service method-encoding:	InsertUserConfig literal
//gsoap ns1  service method-input-action:	InsertUserConfig http://ws.abx/abxWsGest/InsertUserConfigRequest
//gsoap ns1  service method-output-action:	InsertUserConfig http://ws.abx/abxWsGest/InsertUserConfigResponse
int __ns1__InsertUserConfig(
    ns1__InsertUserConfig*              ns1__InsertUserConfig_,	///< Input parameter
    ns1__InsertUserConfigResponse*      ns1__InsertUserConfigResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyUserConfig                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyUserConfig" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyUserConfigRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyUserConfigResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyUserConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyUserConfig*              ns1__ModifyUserConfig_,
    // output parameters:
    ns1__ModifyUserConfigResponse*      ns1__ModifyUserConfigResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyUserConfig(
    struct soap *soap,
    // input parameters:
    ns1__ModifyUserConfig*              ns1__ModifyUserConfig_,
    // output parameters:
    ns1__ModifyUserConfigResponse*      ns1__ModifyUserConfigResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyUserConfig SOAP
//gsoap ns1  service method-style:	ModifyUserConfig document
//gsoap ns1  service method-encoding:	ModifyUserConfig literal
//gsoap ns1  service method-input-action:	ModifyUserConfig http://ws.abx/abxWsGest/ModifyUserConfigRequest
//gsoap ns1  service method-output-action:	ModifyUserConfig http://ws.abx/abxWsGest/ModifyUserConfigResponse
int __ns1__ModifyUserConfig(
    ns1__ModifyUserConfig*              ns1__ModifyUserConfig_,	///< Input parameter
    ns1__ModifyUserConfigResponse*      ns1__ModifyUserConfigResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUserDetailByUsername                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUserDetailByUsername" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUserDetailByUsernameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUserDetailByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUserDetailByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUserDetailByUsername*       ns1__GetUserDetailByUsername_,
    // output parameters:
    ns1__GetUserDetailByUsernameResponse* ns1__GetUserDetailByUsernameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUserDetailByUsername(
    struct soap *soap,
    // input parameters:
    ns1__GetUserDetailByUsername*       ns1__GetUserDetailByUsername_,
    // output parameters:
    ns1__GetUserDetailByUsernameResponse* ns1__GetUserDetailByUsernameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUserDetailByUsername SOAP
//gsoap ns1  service method-style:	GetUserDetailByUsername document
//gsoap ns1  service method-encoding:	GetUserDetailByUsername literal
//gsoap ns1  service method-input-action:	GetUserDetailByUsername http://ws.abx/abxWsGest/GetUserDetailByUsernameRequest
//gsoap ns1  service method-output-action:	GetUserDetailByUsername http://ws.abx/abxWsGest/GetUserDetailByUsernameResponse
int __ns1__GetUserDetailByUsername(
    ns1__GetUserDetailByUsername*       ns1__GetUserDetailByUsername_,	///< Input parameter
    ns1__GetUserDetailByUsernameResponse* ns1__GetUserDetailByUsernameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUserDetailByUserId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUserDetailByUserId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUserDetailByUserIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUserDetailByUserIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUserDetailByUserId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUserDetailByUserId*         ns1__GetUserDetailByUserId_,
    // output parameters:
    ns1__GetUserDetailByUserIdResponse* ns1__GetUserDetailByUserIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUserDetailByUserId(
    struct soap *soap,
    // input parameters:
    ns1__GetUserDetailByUserId*         ns1__GetUserDetailByUserId_,
    // output parameters:
    ns1__GetUserDetailByUserIdResponse* ns1__GetUserDetailByUserIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUserDetailByUserId SOAP
//gsoap ns1  service method-style:	GetUserDetailByUserId document
//gsoap ns1  service method-encoding:	GetUserDetailByUserId literal
//gsoap ns1  service method-input-action:	GetUserDetailByUserId http://ws.abx/abxWsGest/GetUserDetailByUserIdRequest
//gsoap ns1  service method-output-action:	GetUserDetailByUserId http://ws.abx/abxWsGest/GetUserDetailByUserIdResponse
int __ns1__GetUserDetailByUserId(
    ns1__GetUserDetailByUserId*         ns1__GetUserDetailByUserId_,	///< Input parameter
    ns1__GetUserDetailByUserIdResponse* ns1__GetUserDetailByUserIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ExistUserByUsername                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ExistUserByUsername" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ExistUserByUsernameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ExistUserByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ExistUserByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ExistUserByUsername*           ns1__ExistUserByUsername_,
    // output parameters:
    ns1__ExistUserByUsernameResponse*   ns1__ExistUserByUsernameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ExistUserByUsername(
    struct soap *soap,
    // input parameters:
    ns1__ExistUserByUsername*           ns1__ExistUserByUsername_,
    // output parameters:
    ns1__ExistUserByUsernameResponse*   ns1__ExistUserByUsernameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ExistUserByUsername SOAP
//gsoap ns1  service method-style:	ExistUserByUsername document
//gsoap ns1  service method-encoding:	ExistUserByUsername literal
//gsoap ns1  service method-input-action:	ExistUserByUsername http://ws.abx/abxWsGest/ExistUserByUsernameRequest
//gsoap ns1  service method-output-action:	ExistUserByUsername http://ws.abx/abxWsGest/ExistUserByUsernameResponse
int __ns1__ExistUserByUsername(
    ns1__ExistUserByUsername*           ns1__ExistUserByUsername_,	///< Input parameter
    ns1__ExistUserByUsernameResponse*   ns1__ExistUserByUsernameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteUserByUsername                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteUserByUsername" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteUserByUsernameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteUserByUsernameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteUserByUsername(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteUserByUsername*          ns1__DeleteUserByUsername_,
    // output parameters:
    ns1__DeleteUserByUsernameResponse*  ns1__DeleteUserByUsernameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteUserByUsername(
    struct soap *soap,
    // input parameters:
    ns1__DeleteUserByUsername*          ns1__DeleteUserByUsername_,
    // output parameters:
    ns1__DeleteUserByUsernameResponse*  ns1__DeleteUserByUsernameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteUserByUsername SOAP
//gsoap ns1  service method-style:	DeleteUserByUsername document
//gsoap ns1  service method-encoding:	DeleteUserByUsername literal
//gsoap ns1  service method-input-action:	DeleteUserByUsername http://ws.abx/abxWsGest/DeleteUserByUsernameRequest
//gsoap ns1  service method-output-action:	DeleteUserByUsername http://ws.abx/abxWsGest/DeleteUserByUsernameResponse
int __ns1__DeleteUserByUsername(
    ns1__DeleteUserByUsername*          ns1__DeleteUserByUsername_,	///< Input parameter
    ns1__DeleteUserByUsernameResponse*  ns1__DeleteUserByUsernameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertGroup                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertGroup*                   ns1__InsertGroup_,
    // output parameters:
    ns1__InsertGroupResponse*           ns1__InsertGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertGroup(
    struct soap *soap,
    // input parameters:
    ns1__InsertGroup*                   ns1__InsertGroup_,
    // output parameters:
    ns1__InsertGroupResponse*           ns1__InsertGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertGroup SOAP
//gsoap ns1  service method-style:	InsertGroup document
//gsoap ns1  service method-encoding:	InsertGroup literal
//gsoap ns1  service method-input-action:	InsertGroup http://ws.abx/abxWsGest/InsertGroupRequest
//gsoap ns1  service method-output-action:	InsertGroup http://ws.abx/abxWsGest/InsertGroupResponse
int __ns1__InsertGroup(
    ns1__InsertGroup*                   ns1__InsertGroup_,	///< Input parameter
    ns1__InsertGroupResponse*           ns1__InsertGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyGroup                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyGroup*                   ns1__ModifyGroup_,
    // output parameters:
    ns1__ModifyGroupResponse*           ns1__ModifyGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyGroup(
    struct soap *soap,
    // input parameters:
    ns1__ModifyGroup*                   ns1__ModifyGroup_,
    // output parameters:
    ns1__ModifyGroupResponse*           ns1__ModifyGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyGroup SOAP
//gsoap ns1  service method-style:	ModifyGroup document
//gsoap ns1  service method-encoding:	ModifyGroup literal
//gsoap ns1  service method-input-action:	ModifyGroup http://ws.abx/abxWsGest/ModifyGroupRequest
//gsoap ns1  service method-output-action:	ModifyGroup http://ws.abx/abxWsGest/ModifyGroupResponse
int __ns1__ModifyGroup(
    ns1__ModifyGroup*                   ns1__ModifyGroup_,	///< Input parameter
    ns1__ModifyGroupResponse*           ns1__ModifyGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetGroupList                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetGroupList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetGroupListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetGroupListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetGroupList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetGroupList*                  ns1__GetGroupList_,
    // output parameters:
    ns1__GetGroupListResponse*          ns1__GetGroupListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetGroupList(
    struct soap *soap,
    // input parameters:
    ns1__GetGroupList*                  ns1__GetGroupList_,
    // output parameters:
    ns1__GetGroupListResponse*          ns1__GetGroupListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetGroupList SOAP
//gsoap ns1  service method-style:	GetGroupList document
//gsoap ns1  service method-encoding:	GetGroupList literal
//gsoap ns1  service method-input-action:	GetGroupList http://ws.abx/abxWsGest/GetGroupListRequest
//gsoap ns1  service method-output-action:	GetGroupList http://ws.abx/abxWsGest/GetGroupListResponse
int __ns1__GetGroupList(
    ns1__GetGroupList*                  ns1__GetGroupList_,	///< Input parameter
    ns1__GetGroupListResponse*          ns1__GetGroupListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertUserInGroup                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertUserInGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertUserInGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertUserInGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertUserInGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertUserInGroup*             ns1__InsertUserInGroup_,
    // output parameters:
    ns1__InsertUserInGroupResponse*     ns1__InsertUserInGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertUserInGroup(
    struct soap *soap,
    // input parameters:
    ns1__InsertUserInGroup*             ns1__InsertUserInGroup_,
    // output parameters:
    ns1__InsertUserInGroupResponse*     ns1__InsertUserInGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertUserInGroup SOAP
//gsoap ns1  service method-style:	InsertUserInGroup document
//gsoap ns1  service method-encoding:	InsertUserInGroup literal
//gsoap ns1  service method-input-action:	InsertUserInGroup http://ws.abx/abxWsGest/InsertUserInGroupRequest
//gsoap ns1  service method-output-action:	InsertUserInGroup http://ws.abx/abxWsGest/InsertUserInGroupResponse
int __ns1__InsertUserInGroup(
    ns1__InsertUserInGroup*             ns1__InsertUserInGroup_,	///< Input parameter
    ns1__InsertUserInGroupResponse*     ns1__InsertUserInGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RemoveUserByAllGroups                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RemoveUserByAllGroups" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/RemoveUserByAllGroupsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/RemoveUserByAllGroupsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RemoveUserByAllGroups(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__RemoveUserByAllGroups*         ns1__RemoveUserByAllGroups_,
    // output parameters:
    ns1__RemoveUserByAllGroupsResponse* ns1__RemoveUserByAllGroupsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RemoveUserByAllGroups(
    struct soap *soap,
    // input parameters:
    ns1__RemoveUserByAllGroups*         ns1__RemoveUserByAllGroups_,
    // output parameters:
    ns1__RemoveUserByAllGroupsResponse* ns1__RemoveUserByAllGroupsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RemoveUserByAllGroups SOAP
//gsoap ns1  service method-style:	RemoveUserByAllGroups document
//gsoap ns1  service method-encoding:	RemoveUserByAllGroups literal
//gsoap ns1  service method-input-action:	RemoveUserByAllGroups http://ws.abx/abxWsGest/RemoveUserByAllGroupsRequest
//gsoap ns1  service method-output-action:	RemoveUserByAllGroups http://ws.abx/abxWsGest/RemoveUserByAllGroupsResponse
int __ns1__RemoveUserByAllGroups(
    ns1__RemoveUserByAllGroups*         ns1__RemoveUserByAllGroups_,	///< Input parameter
    ns1__RemoveUserByAllGroupsResponse* ns1__RemoveUserByAllGroupsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RemoveUserByGroup                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RemoveUserByGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/RemoveUserByGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/RemoveUserByGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RemoveUserByGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__RemoveUserByGroup*             ns1__RemoveUserByGroup_,
    // output parameters:
    ns1__RemoveUserByGroupResponse*     ns1__RemoveUserByGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RemoveUserByGroup(
    struct soap *soap,
    // input parameters:
    ns1__RemoveUserByGroup*             ns1__RemoveUserByGroup_,
    // output parameters:
    ns1__RemoveUserByGroupResponse*     ns1__RemoveUserByGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RemoveUserByGroup SOAP
//gsoap ns1  service method-style:	RemoveUserByGroup document
//gsoap ns1  service method-encoding:	RemoveUserByGroup literal
//gsoap ns1  service method-input-action:	RemoveUserByGroup http://ws.abx/abxWsGest/RemoveUserByGroupRequest
//gsoap ns1  service method-output-action:	RemoveUserByGroup http://ws.abx/abxWsGest/RemoveUserByGroupResponse
int __ns1__RemoveUserByGroup(
    ns1__RemoveUserByGroup*             ns1__RemoveUserByGroup_,	///< Input parameter
    ns1__RemoveUserByGroupResponse*     ns1__RemoveUserByGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetGroupsListByUser                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetGroupsListByUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetGroupsListByUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetGroupsListByUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetGroupsListByUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetGroupsListByUser*           ns1__GetGroupsListByUser_,
    // output parameters:
    ns1__GetGroupsListByUserResponse*   ns1__GetGroupsListByUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetGroupsListByUser(
    struct soap *soap,
    // input parameters:
    ns1__GetGroupsListByUser*           ns1__GetGroupsListByUser_,
    // output parameters:
    ns1__GetGroupsListByUserResponse*   ns1__GetGroupsListByUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetGroupsListByUser SOAP
//gsoap ns1  service method-style:	GetGroupsListByUser document
//gsoap ns1  service method-encoding:	GetGroupsListByUser literal
//gsoap ns1  service method-input-action:	GetGroupsListByUser http://ws.abx/abxWsGest/GetGroupsListByUserRequest
//gsoap ns1  service method-output-action:	GetGroupsListByUser http://ws.abx/abxWsGest/GetGroupsListByUserResponse
int __ns1__GetGroupsListByUser(
    ns1__GetGroupsListByUser*           ns1__GetGroupsListByUser_,	///< Input parameter
    ns1__GetGroupsListByUserResponse*   ns1__GetGroupsListByUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUsersListByGroup                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUsersListByGroup" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUsersListByGroupRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUsersListByGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUsersListByGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUsersListByGroup*           ns1__GetUsersListByGroup_,
    // output parameters:
    ns1__GetUsersListByGroupResponse*   ns1__GetUsersListByGroupResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUsersListByGroup(
    struct soap *soap,
    // input parameters:
    ns1__GetUsersListByGroup*           ns1__GetUsersListByGroup_,
    // output parameters:
    ns1__GetUsersListByGroupResponse*   ns1__GetUsersListByGroupResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUsersListByGroup SOAP
//gsoap ns1  service method-style:	GetUsersListByGroup document
//gsoap ns1  service method-encoding:	GetUsersListByGroup literal
//gsoap ns1  service method-input-action:	GetUsersListByGroup http://ws.abx/abxWsGest/GetUsersListByGroupRequest
//gsoap ns1  service method-output-action:	GetUsersListByGroup http://ws.abx/abxWsGest/GetUsersListByGroupResponse
int __ns1__GetUsersListByGroup(
    ns1__GetUsersListByGroup*           ns1__GetUsersListByGroup_,	///< Input parameter
    ns1__GetUsersListByGroupResponse*   ns1__GetUsersListByGroupResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyTranslation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyTranslation" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyTranslationRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyTranslationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyTranslation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyTranslation*             ns1__ModifyTranslation_,
    // output parameters:
    ns1__ModifyTranslationResponse*     ns1__ModifyTranslationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyTranslation(
    struct soap *soap,
    // input parameters:
    ns1__ModifyTranslation*             ns1__ModifyTranslation_,
    // output parameters:
    ns1__ModifyTranslationResponse*     ns1__ModifyTranslationResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyTranslation SOAP
//gsoap ns1  service method-style:	ModifyTranslation document
//gsoap ns1  service method-encoding:	ModifyTranslation literal
//gsoap ns1  service method-input-action:	ModifyTranslation http://ws.abx/abxWsGest/ModifyTranslationRequest
//gsoap ns1  service method-output-action:	ModifyTranslation http://ws.abx/abxWsGest/ModifyTranslationResponse
int __ns1__ModifyTranslation(
    ns1__ModifyTranslation*             ns1__ModifyTranslation_,	///< Input parameter
    ns1__ModifyTranslationResponse*     ns1__ModifyTranslationResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteTranslation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteTranslation" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteTranslationRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteTranslationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteTranslation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteTranslation*             ns1__DeleteTranslation_,
    // output parameters:
    ns1__DeleteTranslationResponse*     ns1__DeleteTranslationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteTranslation(
    struct soap *soap,
    // input parameters:
    ns1__DeleteTranslation*             ns1__DeleteTranslation_,
    // output parameters:
    ns1__DeleteTranslationResponse*     ns1__DeleteTranslationResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteTranslation SOAP
//gsoap ns1  service method-style:	DeleteTranslation document
//gsoap ns1  service method-encoding:	DeleteTranslation literal
//gsoap ns1  service method-input-action:	DeleteTranslation http://ws.abx/abxWsGest/DeleteTranslationRequest
//gsoap ns1  service method-output-action:	DeleteTranslation http://ws.abx/abxWsGest/DeleteTranslationResponse
int __ns1__DeleteTranslation(
    ns1__DeleteTranslation*             ns1__DeleteTranslation_,	///< Input parameter
    ns1__DeleteTranslationResponse*     ns1__DeleteTranslationResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertTranslation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertTranslation" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertTranslationRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertTranslationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertTranslation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertTranslation*             ns1__InsertTranslation_,
    // output parameters:
    ns1__InsertTranslationResponse*     ns1__InsertTranslationResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertTranslation(
    struct soap *soap,
    // input parameters:
    ns1__InsertTranslation*             ns1__InsertTranslation_,
    // output parameters:
    ns1__InsertTranslationResponse*     ns1__InsertTranslationResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertTranslation SOAP
//gsoap ns1  service method-style:	InsertTranslation document
//gsoap ns1  service method-encoding:	InsertTranslation literal
//gsoap ns1  service method-input-action:	InsertTranslation http://ws.abx/abxWsGest/InsertTranslationRequest
//gsoap ns1  service method-output-action:	InsertTranslation http://ws.abx/abxWsGest/InsertTranslationResponse
int __ns1__InsertTranslation(
    ns1__InsertTranslation*             ns1__InsertTranslation_,	///< Input parameter
    ns1__InsertTranslationResponse*     ns1__InsertTranslationResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertTranslationCode                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertTranslationCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertTranslationCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertTranslationCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertTranslationCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertTranslationCode*         ns1__InsertTranslationCode_,
    // output parameters:
    ns1__InsertTranslationCodeResponse* ns1__InsertTranslationCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertTranslationCode(
    struct soap *soap,
    // input parameters:
    ns1__InsertTranslationCode*         ns1__InsertTranslationCode_,
    // output parameters:
    ns1__InsertTranslationCodeResponse* ns1__InsertTranslationCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertTranslationCode SOAP
//gsoap ns1  service method-style:	InsertTranslationCode document
//gsoap ns1  service method-encoding:	InsertTranslationCode literal
//gsoap ns1  service method-input-action:	InsertTranslationCode http://ws.abx/abxWsGest/InsertTranslationCodeRequest
//gsoap ns1  service method-output-action:	InsertTranslationCode http://ws.abx/abxWsGest/InsertTranslationCodeResponse
int __ns1__InsertTranslationCode(
    ns1__InsertTranslationCode*         ns1__InsertTranslationCode_,	///< Input parameter
    ns1__InsertTranslationCodeResponse* ns1__InsertTranslationCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertTranslationDecimalCode                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertTranslationDecimalCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertTranslationDecimalCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertTranslationDecimalCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertTranslationDecimalCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertTranslationDecimalCode*  ns1__InsertTranslationDecimalCode_,
    // output parameters:
    ns1__InsertTranslationDecimalCodeResponse* ns1__InsertTranslationDecimalCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertTranslationDecimalCode(
    struct soap *soap,
    // input parameters:
    ns1__InsertTranslationDecimalCode*  ns1__InsertTranslationDecimalCode_,
    // output parameters:
    ns1__InsertTranslationDecimalCodeResponse* ns1__InsertTranslationDecimalCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertTranslationDecimalCode SOAP
//gsoap ns1  service method-style:	InsertTranslationDecimalCode document
//gsoap ns1  service method-encoding:	InsertTranslationDecimalCode literal
//gsoap ns1  service method-input-action:	InsertTranslationDecimalCode http://ws.abx/abxWsGest/InsertTranslationDecimalCodeRequest
//gsoap ns1  service method-output-action:	InsertTranslationDecimalCode http://ws.abx/abxWsGest/InsertTranslationDecimalCodeResponse
int __ns1__InsertTranslationDecimalCode(
    ns1__InsertTranslationDecimalCode*  ns1__InsertTranslationDecimalCode_,	///< Input parameter
    ns1__InsertTranslationDecimalCodeResponse* ns1__InsertTranslationDecimalCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTranslationByMessageId                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTranslationByMessageId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTranslationByMessageIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTranslationByMessageIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTranslationByMessageId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTranslationByMessageId*     ns1__GetTranslationByMessageId_,
    // output parameters:
    ns1__GetTranslationByMessageIdResponse* ns1__GetTranslationByMessageIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTranslationByMessageId(
    struct soap *soap,
    // input parameters:
    ns1__GetTranslationByMessageId*     ns1__GetTranslationByMessageId_,
    // output parameters:
    ns1__GetTranslationByMessageIdResponse* ns1__GetTranslationByMessageIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTranslationByMessageId SOAP
//gsoap ns1  service method-style:	GetTranslationByMessageId document
//gsoap ns1  service method-encoding:	GetTranslationByMessageId literal
//gsoap ns1  service method-input-action:	GetTranslationByMessageId http://ws.abx/abxWsGest/GetTranslationByMessageIdRequest
//gsoap ns1  service method-output-action:	GetTranslationByMessageId http://ws.abx/abxWsGest/GetTranslationByMessageIdResponse
int __ns1__GetTranslationByMessageId(
    ns1__GetTranslationByMessageId*     ns1__GetTranslationByMessageId_,	///< Input parameter
    ns1__GetTranslationByMessageIdResponse* ns1__GetTranslationByMessageIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTranslationByLabelCode                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTranslationByLabelCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTranslationByLabelCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTranslationByLabelCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTranslationByLabelCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTranslationByLabelCode*     ns1__GetTranslationByLabelCode_,
    // output parameters:
    ns1__GetTranslationByLabelCodeResponse* ns1__GetTranslationByLabelCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTranslationByLabelCode(
    struct soap *soap,
    // input parameters:
    ns1__GetTranslationByLabelCode*     ns1__GetTranslationByLabelCode_,
    // output parameters:
    ns1__GetTranslationByLabelCodeResponse* ns1__GetTranslationByLabelCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTranslationByLabelCode SOAP
//gsoap ns1  service method-style:	GetTranslationByLabelCode document
//gsoap ns1  service method-encoding:	GetTranslationByLabelCode literal
//gsoap ns1  service method-input-action:	GetTranslationByLabelCode http://ws.abx/abxWsGest/GetTranslationByLabelCodeRequest
//gsoap ns1  service method-output-action:	GetTranslationByLabelCode http://ws.abx/abxWsGest/GetTranslationByLabelCodeResponse
int __ns1__GetTranslationByLabelCode(
    ns1__GetTranslationByLabelCode*     ns1__GetTranslationByLabelCode_,	///< Input parameter
    ns1__GetTranslationByLabelCodeResponse* ns1__GetTranslationByLabelCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTranslationByRangeLabelCode                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTranslationByRangeLabelCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTranslationByRangeLabelCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTranslationByRangeLabelCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTranslationByRangeLabelCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTranslationByRangeLabelCode* ns1__GetTranslationByRangeLabelCode_,
    // output parameters:
    ns1__GetTranslationByRangeLabelCodeResponse* ns1__GetTranslationByRangeLabelCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTranslationByRangeLabelCode(
    struct soap *soap,
    // input parameters:
    ns1__GetTranslationByRangeLabelCode* ns1__GetTranslationByRangeLabelCode_,
    // output parameters:
    ns1__GetTranslationByRangeLabelCodeResponse* ns1__GetTranslationByRangeLabelCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTranslationByRangeLabelCode SOAP
//gsoap ns1  service method-style:	GetTranslationByRangeLabelCode document
//gsoap ns1  service method-encoding:	GetTranslationByRangeLabelCode literal
//gsoap ns1  service method-input-action:	GetTranslationByRangeLabelCode http://ws.abx/abxWsGest/GetTranslationByRangeLabelCodeRequest
//gsoap ns1  service method-output-action:	GetTranslationByRangeLabelCode http://ws.abx/abxWsGest/GetTranslationByRangeLabelCodeResponse
int __ns1__GetTranslationByRangeLabelCode(
    ns1__GetTranslationByRangeLabelCode* ns1__GetTranslationByRangeLabelCode_,	///< Input parameter
    ns1__GetTranslationByRangeLabelCodeResponse* ns1__GetTranslationByRangeLabelCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTranslationBySourceSuffix                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTranslationBySourceSuffix" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTranslationBySourceSuffixRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTranslationBySourceSuffixResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTranslationBySourceSuffix(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTranslationBySourceSuffix*  ns1__GetTranslationBySourceSuffix_,
    // output parameters:
    ns1__GetTranslationBySourceSuffixResponse* ns1__GetTranslationBySourceSuffixResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTranslationBySourceSuffix(
    struct soap *soap,
    // input parameters:
    ns1__GetTranslationBySourceSuffix*  ns1__GetTranslationBySourceSuffix_,
    // output parameters:
    ns1__GetTranslationBySourceSuffixResponse* ns1__GetTranslationBySourceSuffixResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTranslationBySourceSuffix SOAP
//gsoap ns1  service method-style:	GetTranslationBySourceSuffix document
//gsoap ns1  service method-encoding:	GetTranslationBySourceSuffix literal
//gsoap ns1  service method-input-action:	GetTranslationBySourceSuffix http://ws.abx/abxWsGest/GetTranslationBySourceSuffixRequest
//gsoap ns1  service method-output-action:	GetTranslationBySourceSuffix http://ws.abx/abxWsGest/GetTranslationBySourceSuffixResponse
int __ns1__GetTranslationBySourceSuffix(
    ns1__GetTranslationBySourceSuffix*  ns1__GetTranslationBySourceSuffix_,	///< Input parameter
    ns1__GetTranslationBySourceSuffixResponse* ns1__GetTranslationBySourceSuffixResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteTranslationByCode                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteTranslationByCode" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteTranslationByCodeRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteTranslationByCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteTranslationByCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteTranslationByCode*       ns1__DeleteTranslationByCode_,
    // output parameters:
    ns1__DeleteTranslationByCodeResponse* ns1__DeleteTranslationByCodeResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteTranslationByCode(
    struct soap *soap,
    // input parameters:
    ns1__DeleteTranslationByCode*       ns1__DeleteTranslationByCode_,
    // output parameters:
    ns1__DeleteTranslationByCodeResponse* ns1__DeleteTranslationByCodeResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteTranslationByCode SOAP
//gsoap ns1  service method-style:	DeleteTranslationByCode document
//gsoap ns1  service method-encoding:	DeleteTranslationByCode literal
//gsoap ns1  service method-input-action:	DeleteTranslationByCode http://ws.abx/abxWsGest/DeleteTranslationByCodeRequest
//gsoap ns1  service method-output-action:	DeleteTranslationByCode http://ws.abx/abxWsGest/DeleteTranslationByCodeResponse
int __ns1__DeleteTranslationByCode(
    ns1__DeleteTranslationByCode*       ns1__DeleteTranslationByCode_,	///< Input parameter
    ns1__DeleteTranslationByCodeResponse* ns1__DeleteTranslationByCodeResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddDefaultProcess                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddDefaultProcess" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddDefaultProcessRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddDefaultProcessResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddDefaultProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddDefaultProcess*             ns1__AddDefaultProcess_,
    // output parameters:
    ns1__AddDefaultProcessResponse*     ns1__AddDefaultProcessResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddDefaultProcess(
    struct soap *soap,
    // input parameters:
    ns1__AddDefaultProcess*             ns1__AddDefaultProcess_,
    // output parameters:
    ns1__AddDefaultProcessResponse*     ns1__AddDefaultProcessResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddDefaultProcess SOAP
//gsoap ns1  service method-style:	AddDefaultProcess document
//gsoap ns1  service method-encoding:	AddDefaultProcess literal
//gsoap ns1  service method-input-action:	AddDefaultProcess http://ws.abx/abxWsGest/AddDefaultProcessRequest
//gsoap ns1  service method-output-action:	AddDefaultProcess http://ws.abx/abxWsGest/AddDefaultProcessResponse
int __ns1__AddDefaultProcess(
    ns1__AddDefaultProcess*             ns1__AddDefaultProcess_,	///< Input parameter
    ns1__AddDefaultProcessResponse*     ns1__AddDefaultProcessResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModDefaultProcess                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModDefaultProcess" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModDefaultProcessRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModDefaultProcessResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModDefaultProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModDefaultProcess*             ns1__ModDefaultProcess_,
    // output parameters:
    ns1__ModDefaultProcessResponse*     ns1__ModDefaultProcessResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModDefaultProcess(
    struct soap *soap,
    // input parameters:
    ns1__ModDefaultProcess*             ns1__ModDefaultProcess_,
    // output parameters:
    ns1__ModDefaultProcessResponse*     ns1__ModDefaultProcessResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModDefaultProcess SOAP
//gsoap ns1  service method-style:	ModDefaultProcess document
//gsoap ns1  service method-encoding:	ModDefaultProcess literal
//gsoap ns1  service method-input-action:	ModDefaultProcess http://ws.abx/abxWsGest/ModDefaultProcessRequest
//gsoap ns1  service method-output-action:	ModDefaultProcess http://ws.abx/abxWsGest/ModDefaultProcessResponse
int __ns1__ModDefaultProcess(
    ns1__ModDefaultProcess*             ns1__ModDefaultProcess_,	///< Input parameter
    ns1__ModDefaultProcessResponse*     ns1__ModDefaultProcessResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DelDefaultProcess                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DelDefaultProcess" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DelDefaultProcessRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DelDefaultProcessResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DelDefaultProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DelDefaultProcess*             ns1__DelDefaultProcess_,
    // output parameters:
    ns1__DelDefaultProcessResponse*     ns1__DelDefaultProcessResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DelDefaultProcess(
    struct soap *soap,
    // input parameters:
    ns1__DelDefaultProcess*             ns1__DelDefaultProcess_,
    // output parameters:
    ns1__DelDefaultProcessResponse*     ns1__DelDefaultProcessResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DelDefaultProcess SOAP
//gsoap ns1  service method-style:	DelDefaultProcess document
//gsoap ns1  service method-encoding:	DelDefaultProcess literal
//gsoap ns1  service method-input-action:	DelDefaultProcess http://ws.abx/abxWsGest/DelDefaultProcessRequest
//gsoap ns1  service method-output-action:	DelDefaultProcess http://ws.abx/abxWsGest/DelDefaultProcessResponse
int __ns1__DelDefaultProcess(
    ns1__DelDefaultProcess*             ns1__DelDefaultProcess_,	///< Input parameter
    ns1__DelDefaultProcessResponse*     ns1__DelDefaultProcessResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDefaultProcess                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDefaultProcess" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDefaultProcessRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDefaultProcessResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDefaultProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDefaultProcess*             ns1__GetDefaultProcess_,
    // output parameters:
    ns1__GetDefaultProcessResponse*     ns1__GetDefaultProcessResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDefaultProcess(
    struct soap *soap,
    // input parameters:
    ns1__GetDefaultProcess*             ns1__GetDefaultProcess_,
    // output parameters:
    ns1__GetDefaultProcessResponse*     ns1__GetDefaultProcessResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDefaultProcess SOAP
//gsoap ns1  service method-style:	GetDefaultProcess document
//gsoap ns1  service method-encoding:	GetDefaultProcess literal
//gsoap ns1  service method-input-action:	GetDefaultProcess http://ws.abx/abxWsGest/GetDefaultProcessRequest
//gsoap ns1  service method-output-action:	GetDefaultProcess http://ws.abx/abxWsGest/GetDefaultProcessResponse
int __ns1__GetDefaultProcess(
    ns1__GetDefaultProcess*             ns1__GetDefaultProcess_,	///< Input parameter
    ns1__GetDefaultProcessResponse*     ns1__GetDefaultProcessResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddMarker                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddMarker" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddMarkerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddMarkerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddMarker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddMarker*                     ns1__AddMarker_,
    // output parameters:
    ns1__AddMarkerResponse*             ns1__AddMarkerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddMarker(
    struct soap *soap,
    // input parameters:
    ns1__AddMarker*                     ns1__AddMarker_,
    // output parameters:
    ns1__AddMarkerResponse*             ns1__AddMarkerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddMarker SOAP
//gsoap ns1  service method-style:	AddMarker document
//gsoap ns1  service method-encoding:	AddMarker literal
//gsoap ns1  service method-input-action:	AddMarker http://ws.abx/abxWsGest/AddMarkerRequest
//gsoap ns1  service method-output-action:	AddMarker http://ws.abx/abxWsGest/AddMarkerResponse
int __ns1__AddMarker(
    ns1__AddMarker*                     ns1__AddMarker_,	///< Input parameter
    ns1__AddMarkerResponse*             ns1__AddMarkerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DelMarker                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DelMarker" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DelMarkerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DelMarkerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DelMarker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DelMarker*                     ns1__DelMarker_,
    // output parameters:
    ns1__DelMarkerResponse*             ns1__DelMarkerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DelMarker(
    struct soap *soap,
    // input parameters:
    ns1__DelMarker*                     ns1__DelMarker_,
    // output parameters:
    ns1__DelMarkerResponse*             ns1__DelMarkerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DelMarker SOAP
//gsoap ns1  service method-style:	DelMarker document
//gsoap ns1  service method-encoding:	DelMarker literal
//gsoap ns1  service method-input-action:	DelMarker http://ws.abx/abxWsGest/DelMarkerRequest
//gsoap ns1  service method-output-action:	DelMarker http://ws.abx/abxWsGest/DelMarkerResponse
int __ns1__DelMarker(
    ns1__DelMarker*                     ns1__DelMarker_,	///< Input parameter
    ns1__DelMarkerResponse*             ns1__DelMarkerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetListMarker                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetListMarker" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetListMarkerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetListMarkerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetListMarker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetListMarker*                 ns1__GetListMarker_,
    // output parameters:
    ns1__GetListMarkerResponse*         ns1__GetListMarkerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetListMarker(
    struct soap *soap,
    // input parameters:
    ns1__GetListMarker*                 ns1__GetListMarker_,
    // output parameters:
    ns1__GetListMarkerResponse*         ns1__GetListMarkerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetListMarker SOAP
//gsoap ns1  service method-style:	GetListMarker document
//gsoap ns1  service method-encoding:	GetListMarker literal
//gsoap ns1  service method-input-action:	GetListMarker http://ws.abx/abxWsGest/GetListMarkerRequest
//gsoap ns1  service method-output-action:	GetListMarker http://ws.abx/abxWsGest/GetListMarkerResponse
int __ns1__GetListMarker(
    ns1__GetListMarker*                 ns1__GetListMarker_,	///< Input parameter
    ns1__GetListMarkerResponse*         ns1__GetListMarkerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetWorkflowVariables                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetWorkflowVariables" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetWorkflowVariablesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetWorkflowVariablesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetWorkflowVariables(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetWorkflowVariables*          ns1__GetWorkflowVariables_,
    // output parameters:
    ns1__GetWorkflowVariablesResponse*  ns1__GetWorkflowVariablesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetWorkflowVariables(
    struct soap *soap,
    // input parameters:
    ns1__GetWorkflowVariables*          ns1__GetWorkflowVariables_,
    // output parameters:
    ns1__GetWorkflowVariablesResponse*  ns1__GetWorkflowVariablesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetWorkflowVariables SOAP
//gsoap ns1  service method-style:	GetWorkflowVariables document
//gsoap ns1  service method-encoding:	GetWorkflowVariables literal
//gsoap ns1  service method-input-action:	GetWorkflowVariables http://ws.abx/abxWsGest/GetWorkflowVariablesRequest
//gsoap ns1  service method-output-action:	GetWorkflowVariables http://ws.abx/abxWsGest/GetWorkflowVariablesResponse
int __ns1__GetWorkflowVariables(
    ns1__GetWorkflowVariables*          ns1__GetWorkflowVariables_,	///< Input parameter
    ns1__GetWorkflowVariablesResponse*  ns1__GetWorkflowVariablesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddSign                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddSign*                       ns1__AddSign_,
    // output parameters:
    ns1__AddSignResponse*               ns1__AddSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddSign(
    struct soap *soap,
    // input parameters:
    ns1__AddSign*                       ns1__AddSign_,
    // output parameters:
    ns1__AddSignResponse*               ns1__AddSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddSign SOAP
//gsoap ns1  service method-style:	AddSign document
//gsoap ns1  service method-encoding:	AddSign literal
//gsoap ns1  service method-input-action:	AddSign http://ws.abx/abxWsGest/AddSignRequest
//gsoap ns1  service method-output-action:	AddSign http://ws.abx/abxWsGest/AddSignResponse
int __ns1__AddSign(
    ns1__AddSign*                       ns1__AddSign_,	///< Input parameter
    ns1__AddSignResponse*               ns1__AddSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DelSign                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DelSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DelSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DelSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DelSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DelSign*                       ns1__DelSign_,
    // output parameters:
    ns1__DelSignResponse*               ns1__DelSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DelSign(
    struct soap *soap,
    // input parameters:
    ns1__DelSign*                       ns1__DelSign_,
    // output parameters:
    ns1__DelSignResponse*               ns1__DelSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DelSign SOAP
//gsoap ns1  service method-style:	DelSign document
//gsoap ns1  service method-encoding:	DelSign literal
//gsoap ns1  service method-input-action:	DelSign http://ws.abx/abxWsGest/DelSignRequest
//gsoap ns1  service method-output-action:	DelSign http://ws.abx/abxWsGest/DelSignResponse
int __ns1__DelSign(
    ns1__DelSign*                       ns1__DelSign_,	///< Input parameter
    ns1__DelSignResponse*               ns1__DelSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSign                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetSign*                       ns1__GetSign_,
    // output parameters:
    ns1__GetSignResponse*               ns1__GetSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSign(
    struct soap *soap,
    // input parameters:
    ns1__GetSign*                       ns1__GetSign_,
    // output parameters:
    ns1__GetSignResponse*               ns1__GetSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetSign SOAP
//gsoap ns1  service method-style:	GetSign document
//gsoap ns1  service method-encoding:	GetSign literal
//gsoap ns1  service method-input-action:	GetSign http://ws.abx/abxWsGest/GetSignRequest
//gsoap ns1  service method-output-action:	GetSign http://ws.abx/abxWsGest/GetSignResponse
int __ns1__GetSign(
    ns1__GetSign*                       ns1__GetSign_,	///< Input parameter
    ns1__GetSignResponse*               ns1__GetSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetContSign                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetContSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetContSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetContSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetContSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetContSign*                   ns1__GetContSign_,
    // output parameters:
    ns1__GetContSignResponse*           ns1__GetContSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetContSign(
    struct soap *soap,
    // input parameters:
    ns1__GetContSign*                   ns1__GetContSign_,
    // output parameters:
    ns1__GetContSignResponse*           ns1__GetContSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetContSign SOAP
//gsoap ns1  service method-style:	GetContSign document
//gsoap ns1  service method-encoding:	GetContSign literal
//gsoap ns1  service method-input-action:	GetContSign http://ws.abx/abxWsGest/GetContSignRequest
//gsoap ns1  service method-output-action:	GetContSign http://ws.abx/abxWsGest/GetContSignResponse
int __ns1__GetContSign(
    ns1__GetContSign*                   ns1__GetContSign_,	///< Input parameter
    ns1__GetContSignResponse*           ns1__GetContSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetContSignByUser                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetContSignByUser" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetContSignByUserRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetContSignByUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetContSignByUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetContSignByUser*             ns1__GetContSignByUser_,
    // output parameters:
    ns1__GetContSignByUserResponse*     ns1__GetContSignByUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetContSignByUser(
    struct soap *soap,
    // input parameters:
    ns1__GetContSignByUser*             ns1__GetContSignByUser_,
    // output parameters:
    ns1__GetContSignByUserResponse*     ns1__GetContSignByUserResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetContSignByUser SOAP
//gsoap ns1  service method-style:	GetContSignByUser document
//gsoap ns1  service method-encoding:	GetContSignByUser literal
//gsoap ns1  service method-input-action:	GetContSignByUser http://ws.abx/abxWsGest/GetContSignByUserRequest
//gsoap ns1  service method-output-action:	GetContSignByUser http://ws.abx/abxWsGest/GetContSignByUserResponse
int __ns1__GetContSignByUser(
    ns1__GetContSignByUser*             ns1__GetContSignByUser_,	///< Input parameter
    ns1__GetContSignByUserResponse*     ns1__GetContSignByUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModSign                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModSign" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModSignRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModSign*                       ns1__ModSign_,
    // output parameters:
    ns1__ModSignResponse*               ns1__ModSignResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModSign(
    struct soap *soap,
    // input parameters:
    ns1__ModSign*                       ns1__ModSign_,
    // output parameters:
    ns1__ModSignResponse*               ns1__ModSignResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModSign SOAP
//gsoap ns1  service method-style:	ModSign document
//gsoap ns1  service method-encoding:	ModSign literal
//gsoap ns1  service method-input-action:	ModSign http://ws.abx/abxWsGest/ModSignRequest
//gsoap ns1  service method-output-action:	ModSign http://ws.abx/abxWsGest/ModSignResponse
int __ns1__ModSign(
    ns1__ModSign*                       ns1__ModSign_,	///< Input parameter
    ns1__ModSignResponse*               ns1__ModSignResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__AddUserSettings                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__AddUserSettings" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/AddUserSettingsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/AddUserSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__AddUserSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__AddUserSettings*               ns1__AddUserSettings_,
    // output parameters:
    ns1__AddUserSettingsResponse*       ns1__AddUserSettingsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__AddUserSettings(
    struct soap *soap,
    // input parameters:
    ns1__AddUserSettings*               ns1__AddUserSettings_,
    // output parameters:
    ns1__AddUserSettingsResponse*       ns1__AddUserSettingsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	AddUserSettings SOAP
//gsoap ns1  service method-style:	AddUserSettings document
//gsoap ns1  service method-encoding:	AddUserSettings literal
//gsoap ns1  service method-input-action:	AddUserSettings http://ws.abx/abxWsGest/AddUserSettingsRequest
//gsoap ns1  service method-output-action:	AddUserSettings http://ws.abx/abxWsGest/AddUserSettingsResponse
int __ns1__AddUserSettings(
    ns1__AddUserSettings*               ns1__AddUserSettings_,	///< Input parameter
    ns1__AddUserSettingsResponse*       ns1__AddUserSettingsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModUserSettings                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModUserSettings" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModUserSettingsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModUserSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModUserSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModUserSettings*               ns1__ModUserSettings_,
    // output parameters:
    ns1__ModUserSettingsResponse*       ns1__ModUserSettingsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModUserSettings(
    struct soap *soap,
    // input parameters:
    ns1__ModUserSettings*               ns1__ModUserSettings_,
    // output parameters:
    ns1__ModUserSettingsResponse*       ns1__ModUserSettingsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModUserSettings SOAP
//gsoap ns1  service method-style:	ModUserSettings document
//gsoap ns1  service method-encoding:	ModUserSettings literal
//gsoap ns1  service method-input-action:	ModUserSettings http://ws.abx/abxWsGest/ModUserSettingsRequest
//gsoap ns1  service method-output-action:	ModUserSettings http://ws.abx/abxWsGest/ModUserSettingsResponse
int __ns1__ModUserSettings(
    ns1__ModUserSettings*               ns1__ModUserSettings_,	///< Input parameter
    ns1__ModUserSettingsResponse*       ns1__ModUserSettingsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DelUserSettings                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DelUserSettings" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DelUserSettingsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DelUserSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DelUserSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DelUserSettings*               ns1__DelUserSettings_,
    // output parameters:
    ns1__DelUserSettingsResponse*       ns1__DelUserSettingsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DelUserSettings(
    struct soap *soap,
    // input parameters:
    ns1__DelUserSettings*               ns1__DelUserSettings_,
    // output parameters:
    ns1__DelUserSettingsResponse*       ns1__DelUserSettingsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DelUserSettings SOAP
//gsoap ns1  service method-style:	DelUserSettings document
//gsoap ns1  service method-encoding:	DelUserSettings literal
//gsoap ns1  service method-input-action:	DelUserSettings http://ws.abx/abxWsGest/DelUserSettingsRequest
//gsoap ns1  service method-output-action:	DelUserSettings http://ws.abx/abxWsGest/DelUserSettingsResponse
int __ns1__DelUserSettings(
    ns1__DelUserSettings*               ns1__DelUserSettings_,	///< Input parameter
    ns1__DelUserSettingsResponse*       ns1__DelUserSettingsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetUserSettings                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetUserSettings" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetUserSettingsRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetUserSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetUserSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetUserSettings*               ns1__GetUserSettings_,
    // output parameters:
    ns1__GetUserSettingsResponse*       ns1__GetUserSettingsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetUserSettings(
    struct soap *soap,
    // input parameters:
    ns1__GetUserSettings*               ns1__GetUserSettings_,
    // output parameters:
    ns1__GetUserSettingsResponse*       ns1__GetUserSettingsResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetUserSettings SOAP
//gsoap ns1  service method-style:	GetUserSettings document
//gsoap ns1  service method-encoding:	GetUserSettings literal
//gsoap ns1  service method-input-action:	GetUserSettings http://ws.abx/abxWsGest/GetUserSettingsRequest
//gsoap ns1  service method-output-action:	GetUserSettings http://ws.abx/abxWsGest/GetUserSettingsResponse
int __ns1__GetUserSettings(
    ns1__GetUserSettings*               ns1__GetUserSettings_,	///< Input parameter
    ns1__GetUserSettingsResponse*       ns1__GetUserSettingsResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertData                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertData*                    ns1__InsertData_,
    // output parameters:
    ns1__InsertDataResponse*            ns1__InsertDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertData(
    struct soap *soap,
    // input parameters:
    ns1__InsertData*                    ns1__InsertData_,
    // output parameters:
    ns1__InsertDataResponse*            ns1__InsertDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertData SOAP
//gsoap ns1  service method-style:	InsertData document
//gsoap ns1  service method-encoding:	InsertData literal
//gsoap ns1  service method-input-action:	InsertData http://ws.abx/abxWsGest/InsertDataRequest
//gsoap ns1  service method-output-action:	InsertData http://ws.abx/abxWsGest/InsertDataResponse
int __ns1__InsertData(
    ns1__InsertData*                    ns1__InsertData_,	///< Input parameter
    ns1__InsertDataResponse*            ns1__InsertDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertData                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertData*                 ns1__CanInsertData_,
    // output parameters:
    ns1__CanInsertDataResponse*         ns1__CanInsertDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertData(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertData*                 ns1__CanInsertData_,
    // output parameters:
    ns1__CanInsertDataResponse*         ns1__CanInsertDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertData SOAP
//gsoap ns1  service method-style:	CanInsertData document
//gsoap ns1  service method-encoding:	CanInsertData literal
//gsoap ns1  service method-input-action:	CanInsertData http://ws.abx/abxWsGest/CanInsertDataRequest
//gsoap ns1  service method-output-action:	CanInsertData http://ws.abx/abxWsGest/CanInsertDataResponse
int __ns1__CanInsertData(
    ns1__CanInsertData*                 ns1__CanInsertData_,	///< Input parameter
    ns1__CanInsertDataResponse*         ns1__CanInsertDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CopyData                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CopyData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CopyDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CopyDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CopyData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CopyData*                      ns1__CopyData_,
    // output parameters:
    ns1__CopyDataResponse*              ns1__CopyDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CopyData(
    struct soap *soap,
    // input parameters:
    ns1__CopyData*                      ns1__CopyData_,
    // output parameters:
    ns1__CopyDataResponse*              ns1__CopyDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CopyData SOAP
//gsoap ns1  service method-style:	CopyData document
//gsoap ns1  service method-encoding:	CopyData literal
//gsoap ns1  service method-input-action:	CopyData http://ws.abx/abxWsGest/CopyDataRequest
//gsoap ns1  service method-output-action:	CopyData http://ws.abx/abxWsGest/CopyDataResponse
int __ns1__CopyData(
    ns1__CopyData*                      ns1__CopyData_,	///< Input parameter
    ns1__CopyDataResponse*              ns1__CopyDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__MoveData                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__MoveData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/MoveDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/MoveDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__MoveData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__MoveData*                      ns1__MoveData_,
    // output parameters:
    ns1__MoveDataResponse*              ns1__MoveDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__MoveData(
    struct soap *soap,
    // input parameters:
    ns1__MoveData*                      ns1__MoveData_,
    // output parameters:
    ns1__MoveDataResponse*              ns1__MoveDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	MoveData SOAP
//gsoap ns1  service method-style:	MoveData document
//gsoap ns1  service method-encoding:	MoveData literal
//gsoap ns1  service method-input-action:	MoveData http://ws.abx/abxWsGest/MoveDataRequest
//gsoap ns1  service method-output-action:	MoveData http://ws.abx/abxWsGest/MoveDataResponse
int __ns1__MoveData(
    ns1__MoveData*                      ns1__MoveData_,	///< Input parameter
    ns1__MoveDataResponse*              ns1__MoveDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyData                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyData*                    ns1__ModifyData_,
    // output parameters:
    ns1__ModifyDataResponse*            ns1__ModifyDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyData(
    struct soap *soap,
    // input parameters:
    ns1__ModifyData*                    ns1__ModifyData_,
    // output parameters:
    ns1__ModifyDataResponse*            ns1__ModifyDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyData SOAP
//gsoap ns1  service method-style:	ModifyData document
//gsoap ns1  service method-encoding:	ModifyData literal
//gsoap ns1  service method-input-action:	ModifyData http://ws.abx/abxWsGest/ModifyDataRequest
//gsoap ns1  service method-output-action:	ModifyData http://ws.abx/abxWsGest/ModifyDataResponse
int __ns1__ModifyData(
    ns1__ModifyData*                    ns1__ModifyData_,	///< Input parameter
    ns1__ModifyDataResponse*            ns1__ModifyDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanModifyData                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanModifyData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanModifyDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanModifyDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanModifyData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanModifyData*                 ns1__CanModifyData_,
    // output parameters:
    ns1__CanModifyDataResponse*         ns1__CanModifyDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanModifyData(
    struct soap *soap,
    // input parameters:
    ns1__CanModifyData*                 ns1__CanModifyData_,
    // output parameters:
    ns1__CanModifyDataResponse*         ns1__CanModifyDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanModifyData SOAP
//gsoap ns1  service method-style:	CanModifyData document
//gsoap ns1  service method-encoding:	CanModifyData literal
//gsoap ns1  service method-input-action:	CanModifyData http://ws.abx/abxWsGest/CanModifyDataRequest
//gsoap ns1  service method-output-action:	CanModifyData http://ws.abx/abxWsGest/CanModifyDataResponse
int __ns1__CanModifyData(
    ns1__CanModifyData*                 ns1__CanModifyData_,	///< Input parameter
    ns1__CanModifyDataResponse*         ns1__CanModifyDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteData                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteData*                    ns1__DeleteData_,
    // output parameters:
    ns1__DeleteDataResponse*            ns1__DeleteDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteData(
    struct soap *soap,
    // input parameters:
    ns1__DeleteData*                    ns1__DeleteData_,
    // output parameters:
    ns1__DeleteDataResponse*            ns1__DeleteDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteData SOAP
//gsoap ns1  service method-style:	DeleteData document
//gsoap ns1  service method-encoding:	DeleteData literal
//gsoap ns1  service method-input-action:	DeleteData http://ws.abx/abxWsGest/DeleteDataRequest
//gsoap ns1  service method-output-action:	DeleteData http://ws.abx/abxWsGest/DeleteDataResponse
int __ns1__DeleteData(
    ns1__DeleteData*                    ns1__DeleteData_,	///< Input parameter
    ns1__DeleteDataResponse*            ns1__DeleteDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanDeleteData                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanDeleteData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanDeleteDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanDeleteDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanDeleteData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanDeleteData*                 ns1__CanDeleteData_,
    // output parameters:
    ns1__CanDeleteDataResponse*         ns1__CanDeleteDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanDeleteData(
    struct soap *soap,
    // input parameters:
    ns1__CanDeleteData*                 ns1__CanDeleteData_,
    // output parameters:
    ns1__CanDeleteDataResponse*         ns1__CanDeleteDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanDeleteData SOAP
//gsoap ns1  service method-style:	CanDeleteData document
//gsoap ns1  service method-encoding:	CanDeleteData literal
//gsoap ns1  service method-input-action:	CanDeleteData http://ws.abx/abxWsGest/CanDeleteDataRequest
//gsoap ns1  service method-output-action:	CanDeleteData http://ws.abx/abxWsGest/CanDeleteDataResponse
int __ns1__CanDeleteData(
    ns1__CanDeleteData*                 ns1__CanDeleteData_,	///< Input parameter
    ns1__CanDeleteDataResponse*         ns1__CanDeleteDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetData                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetData" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetData*                       ns1__GetData_,
    // output parameters:
    ns1__GetDataResponse*               ns1__GetDataResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetData(
    struct soap *soap,
    // input parameters:
    ns1__GetData*                       ns1__GetData_,
    // output parameters:
    ns1__GetDataResponse*               ns1__GetDataResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetData SOAP
//gsoap ns1  service method-style:	GetData document
//gsoap ns1  service method-encoding:	GetData literal
//gsoap ns1  service method-input-action:	GetData http://ws.abx/abxWsGest/GetDataRequest
//gsoap ns1  service method-output-action:	GetData http://ws.abx/abxWsGest/GetDataResponse
int __ns1__GetData(
    ns1__GetData*                       ns1__GetData_,	///< Input parameter
    ns1__GetDataResponse*               ns1__GetDataResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataLimit                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataLimit" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataLimitRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataLimitResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataLimit(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataLimit*                  ns1__GetDataLimit_,
    // output parameters:
    ns1__GetDataLimitResponse*          ns1__GetDataLimitResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataLimit(
    struct soap *soap,
    // input parameters:
    ns1__GetDataLimit*                  ns1__GetDataLimit_,
    // output parameters:
    ns1__GetDataLimitResponse*          ns1__GetDataLimitResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataLimit SOAP
//gsoap ns1  service method-style:	GetDataLimit document
//gsoap ns1  service method-encoding:	GetDataLimit literal
//gsoap ns1  service method-input-action:	GetDataLimit http://ws.abx/abxWsGest/GetDataLimitRequest
//gsoap ns1  service method-output-action:	GetDataLimit http://ws.abx/abxWsGest/GetDataLimitResponse
int __ns1__GetDataLimit(
    ns1__GetDataLimit*                  ns1__GetDataLimit_,	///< Input parameter
    ns1__GetDataLimitResponse*          ns1__GetDataLimitResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataByIdForSecurity                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataByIdForSecurity" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataByIdForSecurityRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataByIdForSecurityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataByIdForSecurity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataByIdForSecurity*        ns1__GetDataByIdForSecurity_,
    // output parameters:
    ns1__GetDataByIdForSecurityResponse* ns1__GetDataByIdForSecurityResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataByIdForSecurity(
    struct soap *soap,
    // input parameters:
    ns1__GetDataByIdForSecurity*        ns1__GetDataByIdForSecurity_,
    // output parameters:
    ns1__GetDataByIdForSecurityResponse* ns1__GetDataByIdForSecurityResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataByIdForSecurity SOAP
//gsoap ns1  service method-style:	GetDataByIdForSecurity document
//gsoap ns1  service method-encoding:	GetDataByIdForSecurity literal
//gsoap ns1  service method-input-action:	GetDataByIdForSecurity http://ws.abx/abxWsGest/GetDataByIdForSecurityRequest
//gsoap ns1  service method-output-action:	GetDataByIdForSecurity http://ws.abx/abxWsGest/GetDataByIdForSecurityResponse
int __ns1__GetDataByIdForSecurity(
    ns1__GetDataByIdForSecurity*        ns1__GetDataByIdForSecurity_,	///< Input parameter
    ns1__GetDataByIdForSecurityResponse* ns1__GetDataByIdForSecurityResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataCountWithoutPermission                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataCountWithoutPermission" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataCountWithoutPermissionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataCountWithoutPermissionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataCountWithoutPermission(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataCountWithoutPermission* ns1__GetDataCountWithoutPermission_,
    // output parameters:
    ns1__GetDataCountWithoutPermissionResponse* ns1__GetDataCountWithoutPermissionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataCountWithoutPermission(
    struct soap *soap,
    // input parameters:
    ns1__GetDataCountWithoutPermission* ns1__GetDataCountWithoutPermission_,
    // output parameters:
    ns1__GetDataCountWithoutPermissionResponse* ns1__GetDataCountWithoutPermissionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataCountWithoutPermission SOAP
//gsoap ns1  service method-style:	GetDataCountWithoutPermission document
//gsoap ns1  service method-encoding:	GetDataCountWithoutPermission literal
//gsoap ns1  service method-input-action:	GetDataCountWithoutPermission http://ws.abx/abxWsGest/GetDataCountWithoutPermissionRequest
//gsoap ns1  service method-output-action:	GetDataCountWithoutPermission http://ws.abx/abxWsGest/GetDataCountWithoutPermissionResponse
int __ns1__GetDataCountWithoutPermission(
    ns1__GetDataCountWithoutPermission* ns1__GetDataCountWithoutPermission_,	///< Input parameter
    ns1__GetDataCountWithoutPermissionResponse* ns1__GetDataCountWithoutPermissionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDataCountWithPermission                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDataCountWithPermission" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetDataCountWithPermissionRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetDataCountWithPermissionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDataCountWithPermission(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetDataCountWithPermission*    ns1__GetDataCountWithPermission_,
    // output parameters:
    ns1__GetDataCountWithPermissionResponse* ns1__GetDataCountWithPermissionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDataCountWithPermission(
    struct soap *soap,
    // input parameters:
    ns1__GetDataCountWithPermission*    ns1__GetDataCountWithPermission_,
    // output parameters:
    ns1__GetDataCountWithPermissionResponse* ns1__GetDataCountWithPermissionResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDataCountWithPermission SOAP
//gsoap ns1  service method-style:	GetDataCountWithPermission document
//gsoap ns1  service method-encoding:	GetDataCountWithPermission literal
//gsoap ns1  service method-input-action:	GetDataCountWithPermission http://ws.abx/abxWsGest/GetDataCountWithPermissionRequest
//gsoap ns1  service method-output-action:	GetDataCountWithPermission http://ws.abx/abxWsGest/GetDataCountWithPermissionResponse
int __ns1__GetDataCountWithPermission(
    ns1__GetDataCountWithPermission*    ns1__GetDataCountWithPermission_,	///< Input parameter
    ns1__GetDataCountWithPermissionResponse* ns1__GetDataCountWithPermissionResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertProtocol                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertProtocol*                ns1__InsertProtocol_,
    // output parameters:
    ns1__InsertProtocolResponse*        ns1__InsertProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertProtocol(
    struct soap *soap,
    // input parameters:
    ns1__InsertProtocol*                ns1__InsertProtocol_,
    // output parameters:
    ns1__InsertProtocolResponse*        ns1__InsertProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertProtocol SOAP
//gsoap ns1  service method-style:	InsertProtocol document
//gsoap ns1  service method-encoding:	InsertProtocol literal
//gsoap ns1  service method-input-action:	InsertProtocol http://ws.abx/abxWsGest/InsertProtocolRequest
//gsoap ns1  service method-output-action:	InsertProtocol http://ws.abx/abxWsGest/InsertProtocolResponse
int __ns1__InsertProtocol(
    ns1__InsertProtocol*                ns1__InsertProtocol_,	///< Input parameter
    ns1__InsertProtocolResponse*        ns1__InsertProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__EditProtocol                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__EditProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/EditProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/EditProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__EditProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__EditProtocol*                  ns1__EditProtocol_,
    // output parameters:
    ns1__EditProtocolResponse*          ns1__EditProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__EditProtocol(
    struct soap *soap,
    // input parameters:
    ns1__EditProtocol*                  ns1__EditProtocol_,
    // output parameters:
    ns1__EditProtocolResponse*          ns1__EditProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	EditProtocol SOAP
//gsoap ns1  service method-style:	EditProtocol document
//gsoap ns1  service method-encoding:	EditProtocol literal
//gsoap ns1  service method-input-action:	EditProtocol http://ws.abx/abxWsGest/EditProtocolRequest
//gsoap ns1  service method-output-action:	EditProtocol http://ws.abx/abxWsGest/EditProtocolResponse
int __ns1__EditProtocol(
    ns1__EditProtocol*                  ns1__EditProtocol_,	///< Input parameter
    ns1__EditProtocolResponse*          ns1__EditProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteProtocol                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteProtocol*                ns1__DeleteProtocol_,
    // output parameters:
    ns1__DeleteProtocolResponse*        ns1__DeleteProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteProtocol(
    struct soap *soap,
    // input parameters:
    ns1__DeleteProtocol*                ns1__DeleteProtocol_,
    // output parameters:
    ns1__DeleteProtocolResponse*        ns1__DeleteProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteProtocol SOAP
//gsoap ns1  service method-style:	DeleteProtocol document
//gsoap ns1  service method-encoding:	DeleteProtocol literal
//gsoap ns1  service method-input-action:	DeleteProtocol http://ws.abx/abxWsGest/DeleteProtocolRequest
//gsoap ns1  service method-output-action:	DeleteProtocol http://ws.abx/abxWsGest/DeleteProtocolResponse
int __ns1__DeleteProtocol(
    ns1__DeleteProtocol*                ns1__DeleteProtocol_,	///< Input parameter
    ns1__DeleteProtocolResponse*        ns1__DeleteProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ShowProtocol                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ShowProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ShowProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ShowProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ShowProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ShowProtocol*                  ns1__ShowProtocol_,
    // output parameters:
    ns1__ShowProtocolResponse*          ns1__ShowProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ShowProtocol(
    struct soap *soap,
    // input parameters:
    ns1__ShowProtocol*                  ns1__ShowProtocol_,
    // output parameters:
    ns1__ShowProtocolResponse*          ns1__ShowProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ShowProtocol SOAP
//gsoap ns1  service method-style:	ShowProtocol document
//gsoap ns1  service method-encoding:	ShowProtocol literal
//gsoap ns1  service method-input-action:	ShowProtocol http://ws.abx/abxWsGest/ShowProtocolRequest
//gsoap ns1  service method-output-action:	ShowProtocol http://ws.abx/abxWsGest/ShowProtocolResponse
int __ns1__ShowProtocol(
    ns1__ShowProtocol*                  ns1__ShowProtocol_,	///< Input parameter
    ns1__ShowProtocolResponse*          ns1__ShowProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProtocolList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProtocolList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetProtocolListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetProtocolListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProtocolList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetProtocolList*               ns1__GetProtocolList_,
    // output parameters:
    ns1__GetProtocolListResponse*       ns1__GetProtocolListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProtocolList(
    struct soap *soap,
    // input parameters:
    ns1__GetProtocolList*               ns1__GetProtocolList_,
    // output parameters:
    ns1__GetProtocolListResponse*       ns1__GetProtocolListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetProtocolList SOAP
//gsoap ns1  service method-style:	GetProtocolList document
//gsoap ns1  service method-encoding:	GetProtocolList literal
//gsoap ns1  service method-input-action:	GetProtocolList http://ws.abx/abxWsGest/GetProtocolListRequest
//gsoap ns1  service method-output-action:	GetProtocolList http://ws.abx/abxWsGest/GetProtocolListResponse
int __ns1__GetProtocolList(
    ns1__GetProtocolList*               ns1__GetProtocolList_,	///< Input parameter
    ns1__GetProtocolListResponse*       ns1__GetProtocolListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProtocolById                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProtocolById" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetProtocolByIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetProtocolByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProtocolById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetProtocolById*               ns1__GetProtocolById_,
    // output parameters:
    ns1__GetProtocolByIdResponse*       ns1__GetProtocolByIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProtocolById(
    struct soap *soap,
    // input parameters:
    ns1__GetProtocolById*               ns1__GetProtocolById_,
    // output parameters:
    ns1__GetProtocolByIdResponse*       ns1__GetProtocolByIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetProtocolById SOAP
//gsoap ns1  service method-style:	GetProtocolById document
//gsoap ns1  service method-encoding:	GetProtocolById literal
//gsoap ns1  service method-input-action:	GetProtocolById http://ws.abx/abxWsGest/GetProtocolByIdRequest
//gsoap ns1  service method-output-action:	GetProtocolById http://ws.abx/abxWsGest/GetProtocolByIdResponse
int __ns1__GetProtocolById(
    ns1__GetProtocolById*               ns1__GetProtocolById_,	///< Input parameter
    ns1__GetProtocolByIdResponse*       ns1__GetProtocolByIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProtocolByName                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProtocolByName" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetProtocolByNameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetProtocolByNameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProtocolByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetProtocolByName*             ns1__GetProtocolByName_,
    // output parameters:
    ns1__GetProtocolByNameResponse*     ns1__GetProtocolByNameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProtocolByName(
    struct soap *soap,
    // input parameters:
    ns1__GetProtocolByName*             ns1__GetProtocolByName_,
    // output parameters:
    ns1__GetProtocolByNameResponse*     ns1__GetProtocolByNameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetProtocolByName SOAP
//gsoap ns1  service method-style:	GetProtocolByName document
//gsoap ns1  service method-encoding:	GetProtocolByName literal
//gsoap ns1  service method-input-action:	GetProtocolByName http://ws.abx/abxWsGest/GetProtocolByNameRequest
//gsoap ns1  service method-output-action:	GetProtocolByName http://ws.abx/abxWsGest/GetProtocolByNameResponse
int __ns1__GetProtocolByName(
    ns1__GetProtocolByName*             ns1__GetProtocolByName_,	///< Input parameter
    ns1__GetProtocolByNameResponse*     ns1__GetProtocolByNameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProtocolByDesc                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProtocolByDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetProtocolByDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetProtocolByDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProtocolByDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetProtocolByDesc*             ns1__GetProtocolByDesc_,
    // output parameters:
    ns1__GetProtocolByDescResponse*     ns1__GetProtocolByDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProtocolByDesc(
    struct soap *soap,
    // input parameters:
    ns1__GetProtocolByDesc*             ns1__GetProtocolByDesc_,
    // output parameters:
    ns1__GetProtocolByDescResponse*     ns1__GetProtocolByDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetProtocolByDesc SOAP
//gsoap ns1  service method-style:	GetProtocolByDesc document
//gsoap ns1  service method-encoding:	GetProtocolByDesc literal
//gsoap ns1  service method-input-action:	GetProtocolByDesc http://ws.abx/abxWsGest/GetProtocolByDescRequest
//gsoap ns1  service method-output-action:	GetProtocolByDesc http://ws.abx/abxWsGest/GetProtocolByDescResponse
int __ns1__GetProtocolByDesc(
    ns1__GetProtocolByDesc*             ns1__GetProtocolByDesc_,	///< Input parameter
    ns1__GetProtocolByDescResponse*     ns1__GetProtocolByDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetProtocolByNameDesc                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProtocolByNameDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetProtocolByNameDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetProtocolByNameDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProtocolByNameDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetProtocolByNameDesc*         ns1__GetProtocolByNameDesc_,
    // output parameters:
    ns1__GetProtocolByNameDescResponse* ns1__GetProtocolByNameDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProtocolByNameDesc(
    struct soap *soap,
    // input parameters:
    ns1__GetProtocolByNameDesc*         ns1__GetProtocolByNameDesc_,
    // output parameters:
    ns1__GetProtocolByNameDescResponse* ns1__GetProtocolByNameDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetProtocolByNameDesc SOAP
//gsoap ns1  service method-style:	GetProtocolByNameDesc document
//gsoap ns1  service method-encoding:	GetProtocolByNameDesc literal
//gsoap ns1  service method-input-action:	GetProtocolByNameDesc http://ws.abx/abxWsGest/GetProtocolByNameDescRequest
//gsoap ns1  service method-output-action:	GetProtocolByNameDesc http://ws.abx/abxWsGest/GetProtocolByNameDescResponse
int __ns1__GetProtocolByNameDesc(
    ns1__GetProtocolByNameDesc*         ns1__GetProtocolByNameDesc_,	///< Input parameter
    ns1__GetProtocolByNameDescResponse* ns1__GetProtocolByNameDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanUseProtocol                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanUseProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanUseProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanUseProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanUseProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanUseProtocol*                ns1__CanUseProtocol_,
    // output parameters:
    ns1__CanUseProtocolResponse*        ns1__CanUseProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanUseProtocol(
    struct soap *soap,
    // input parameters:
    ns1__CanUseProtocol*                ns1__CanUseProtocol_,
    // output parameters:
    ns1__CanUseProtocolResponse*        ns1__CanUseProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanUseProtocol SOAP
//gsoap ns1  service method-style:	CanUseProtocol document
//gsoap ns1  service method-encoding:	CanUseProtocol literal
//gsoap ns1  service method-input-action:	CanUseProtocol http://ws.abx/abxWsGest/CanUseProtocolRequest
//gsoap ns1  service method-output-action:	CanUseProtocol http://ws.abx/abxWsGest/CanUseProtocolResponse
int __ns1__CanUseProtocol(
    ns1__CanUseProtocol*                ns1__CanUseProtocol_,	///< Input parameter
    ns1__CanUseProtocolResponse*        ns1__CanUseProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanAddNewYear                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanAddNewYear" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanAddNewYearRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanAddNewYearResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanAddNewYear(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanAddNewYear*                 ns1__CanAddNewYear_,
    // output parameters:
    ns1__CanAddNewYearResponse*         ns1__CanAddNewYearResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanAddNewYear(
    struct soap *soap,
    // input parameters:
    ns1__CanAddNewYear*                 ns1__CanAddNewYear_,
    // output parameters:
    ns1__CanAddNewYearResponse*         ns1__CanAddNewYearResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanAddNewYear SOAP
//gsoap ns1  service method-style:	CanAddNewYear document
//gsoap ns1  service method-encoding:	CanAddNewYear literal
//gsoap ns1  service method-input-action:	CanAddNewYear http://ws.abx/abxWsGest/CanAddNewYearRequest
//gsoap ns1  service method-output-action:	CanAddNewYear http://ws.abx/abxWsGest/CanAddNewYearResponse
int __ns1__CanAddNewYear(
    ns1__CanAddNewYear*                 ns1__CanAddNewYear_,	///< Input parameter
    ns1__CanAddNewYearResponse*         ns1__CanAddNewYearResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanAddNewDate                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanAddNewDate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanAddNewDateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanAddNewDateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanAddNewDate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanAddNewDate*                 ns1__CanAddNewDate_,
    // output parameters:
    ns1__CanAddNewDateResponse*         ns1__CanAddNewDateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanAddNewDate(
    struct soap *soap,
    // input parameters:
    ns1__CanAddNewDate*                 ns1__CanAddNewDate_,
    // output parameters:
    ns1__CanAddNewDateResponse*         ns1__CanAddNewDateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanAddNewDate SOAP
//gsoap ns1  service method-style:	CanAddNewDate document
//gsoap ns1  service method-encoding:	CanAddNewDate literal
//gsoap ns1  service method-input-action:	CanAddNewDate http://ws.abx/abxWsGest/CanAddNewDateRequest
//gsoap ns1  service method-output-action:	CanAddNewDate http://ws.abx/abxWsGest/CanAddNewDateResponse
int __ns1__CanAddNewDate(
    ns1__CanAddNewDate*                 ns1__CanAddNewDate_,	///< Input parameter
    ns1__CanAddNewDateResponse*         ns1__CanAddNewDateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertProtocol                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertProtocol" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertProtocolRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertProtocolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertProtocol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertProtocol*             ns1__CanInsertProtocol_,
    // output parameters:
    ns1__CanInsertProtocolResponse*     ns1__CanInsertProtocolResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertProtocol(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertProtocol*             ns1__CanInsertProtocol_,
    // output parameters:
    ns1__CanInsertProtocolResponse*     ns1__CanInsertProtocolResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertProtocol SOAP
//gsoap ns1  service method-style:	CanInsertProtocol document
//gsoap ns1  service method-encoding:	CanInsertProtocol literal
//gsoap ns1  service method-input-action:	CanInsertProtocol http://ws.abx/abxWsGest/CanInsertProtocolRequest
//gsoap ns1  service method-output-action:	CanInsertProtocol http://ws.abx/abxWsGest/CanInsertProtocolResponse
int __ns1__CanInsertProtocol(
    ns1__CanInsertProtocol*             ns1__CanInsertProtocol_,	///< Input parameter
    ns1__CanInsertProtocolResponse*     ns1__CanInsertProtocolResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertUSFile                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertUSFile" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertUSFileRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertUSFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertUSFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertUSFile*                  ns1__InsertUSFile_,
    // output parameters:
    ns1__InsertUSFileResponse*          ns1__InsertUSFileResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertUSFile(
    struct soap *soap,
    // input parameters:
    ns1__InsertUSFile*                  ns1__InsertUSFile_,
    // output parameters:
    ns1__InsertUSFileResponse*          ns1__InsertUSFileResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertUSFile SOAP
//gsoap ns1  service method-style:	InsertUSFile document
//gsoap ns1  service method-encoding:	InsertUSFile literal
//gsoap ns1  service method-input-action:	InsertUSFile http://ws.abx/abxWsGest/InsertUSFileRequest
//gsoap ns1  service method-output-action:	InsertUSFile http://ws.abx/abxWsGest/InsertUSFileResponse
int __ns1__InsertUSFile(
    ns1__InsertUSFile*                  ns1__InsertUSFile_,	///< Input parameter
    ns1__InsertUSFileResponse*          ns1__InsertUSFileResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertArchSostRule                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertArchSostRule" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertArchSostRuleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertArchSostRuleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertArchSostRule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertArchSostRule*            ns1__InsertArchSostRule_,
    // output parameters:
    ns1__InsertArchSostRuleResponse*    ns1__InsertArchSostRuleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertArchSostRule(
    struct soap *soap,
    // input parameters:
    ns1__InsertArchSostRule*            ns1__InsertArchSostRule_,
    // output parameters:
    ns1__InsertArchSostRuleResponse*    ns1__InsertArchSostRuleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertArchSostRule SOAP
//gsoap ns1  service method-style:	InsertArchSostRule document
//gsoap ns1  service method-encoding:	InsertArchSostRule literal
//gsoap ns1  service method-input-action:	InsertArchSostRule http://ws.abx/abxWsGest/InsertArchSostRuleRequest
//gsoap ns1  service method-output-action:	InsertArchSostRule http://ws.abx/abxWsGest/InsertArchSostRuleResponse
int __ns1__InsertArchSostRule(
    ns1__InsertArchSostRule*            ns1__InsertArchSostRule_,	///< Input parameter
    ns1__InsertArchSostRuleResponse*    ns1__InsertArchSostRuleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteArchSostRule                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteArchSostRule" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteArchSostRuleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteArchSostRuleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteArchSostRule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteArchSostRule*            ns1__DeleteArchSostRule_,
    // output parameters:
    ns1__DeleteArchSostRuleResponse*    ns1__DeleteArchSostRuleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteArchSostRule(
    struct soap *soap,
    // input parameters:
    ns1__DeleteArchSostRule*            ns1__DeleteArchSostRule_,
    // output parameters:
    ns1__DeleteArchSostRuleResponse*    ns1__DeleteArchSostRuleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteArchSostRule SOAP
//gsoap ns1  service method-style:	DeleteArchSostRule document
//gsoap ns1  service method-encoding:	DeleteArchSostRule literal
//gsoap ns1  service method-input-action:	DeleteArchSostRule http://ws.abx/abxWsGest/DeleteArchSostRuleRequest
//gsoap ns1  service method-output-action:	DeleteArchSostRule http://ws.abx/abxWsGest/DeleteArchSostRuleResponse
int __ns1__DeleteArchSostRule(
    ns1__DeleteArchSostRule*            ns1__DeleteArchSostRule_,	///< Input parameter
    ns1__DeleteArchSostRuleResponse*    ns1__DeleteArchSostRuleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyArchSostRule                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyArchSostRule" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyArchSostRuleRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyArchSostRuleResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyArchSostRule(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyArchSostRule*            ns1__ModifyArchSostRule_,
    // output parameters:
    ns1__ModifyArchSostRuleResponse*    ns1__ModifyArchSostRuleResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyArchSostRule(
    struct soap *soap,
    // input parameters:
    ns1__ModifyArchSostRule*            ns1__ModifyArchSostRule_,
    // output parameters:
    ns1__ModifyArchSostRuleResponse*    ns1__ModifyArchSostRuleResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyArchSostRule SOAP
//gsoap ns1  service method-style:	ModifyArchSostRule document
//gsoap ns1  service method-encoding:	ModifyArchSostRule literal
//gsoap ns1  service method-input-action:	ModifyArchSostRule http://ws.abx/abxWsGest/ModifyArchSostRuleRequest
//gsoap ns1  service method-output-action:	ModifyArchSostRule http://ws.abx/abxWsGest/ModifyArchSostRuleResponse
int __ns1__ModifyArchSostRule(
    ns1__ModifyArchSostRule*            ns1__ModifyArchSostRule_,	///< Input parameter
    ns1__ModifyArchSostRuleResponse*    ns1__ModifyArchSostRuleResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetAllRecord                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetAllRecord" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getAllRecordRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getAllRecordResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetAllRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetAllRecord*         ns1__Fk_USCOREgetAllRecord_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordResponse* ns1__Fk_USCOREgetAllRecordResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetAllRecord(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetAllRecord*         ns1__Fk_USCOREgetAllRecord_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordResponse* ns1__Fk_USCOREgetAllRecordResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetAllRecord SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetAllRecord document
//gsoap ns1  service method-encoding:	Fk_USCOREgetAllRecord literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetAllRecord http://ws.abx/abxWsGest/Fk_getAllRecordRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetAllRecord http://ws.abx/abxWsGest/Fk_getAllRecordResponse
int __ns1__Fk_USCOREgetAllRecord(
    ns1__Fk_USCOREgetAllRecord*         ns1__Fk_USCOREgetAllRecord_,	///< Input parameter
    ns1__Fk_USCOREgetAllRecordResponse* ns1__Fk_USCOREgetAllRecordResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetCountAllRecord                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetCountAllRecord" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetCountAllRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecord*    ns1__Fk_USCOREgetCountAllRecord_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordResponse* ns1__Fk_USCOREgetCountAllRecordResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetCountAllRecord(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecord*    ns1__Fk_USCOREgetCountAllRecord_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordResponse* ns1__Fk_USCOREgetCountAllRecordResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetCountAllRecord SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetCountAllRecord document
//gsoap ns1  service method-encoding:	Fk_USCOREgetCountAllRecord literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetCountAllRecord http://ws.abx/abxWsGest/Fk_getCountAllRecordRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetCountAllRecord http://ws.abx/abxWsGest/Fk_getCountAllRecordResponse
int __ns1__Fk_USCOREgetCountAllRecord(
    ns1__Fk_USCOREgetCountAllRecord*    ns1__Fk_USCOREgetCountAllRecord_,	///< Input parameter
    ns1__Fk_USCOREgetCountAllRecordResponse* ns1__Fk_USCOREgetCountAllRecordResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetAllRecordByIndex                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetAllRecordByIndex" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getAllRecordByIndexRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getAllRecordByIndexResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetAllRecordByIndex(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByIndex*  ns1__Fk_USCOREgetAllRecordByIndex_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByIndexResponse* ns1__Fk_USCOREgetAllRecordByIndexResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetAllRecordByIndex(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByIndex*  ns1__Fk_USCOREgetAllRecordByIndex_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByIndexResponse* ns1__Fk_USCOREgetAllRecordByIndexResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetAllRecordByIndex SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetAllRecordByIndex document
//gsoap ns1  service method-encoding:	Fk_USCOREgetAllRecordByIndex literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetAllRecordByIndex http://ws.abx/abxWsGest/Fk_getAllRecordByIndexRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetAllRecordByIndex http://ws.abx/abxWsGest/Fk_getAllRecordByIndexResponse
int __ns1__Fk_USCOREgetAllRecordByIndex(
    ns1__Fk_USCOREgetAllRecordByIndex*  ns1__Fk_USCOREgetAllRecordByIndex_,	///< Input parameter
    ns1__Fk_USCOREgetAllRecordByIndexResponse* ns1__Fk_USCOREgetAllRecordByIndexResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetAllRecordByDesc                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetAllRecordByDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getAllRecordByDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getAllRecordByDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetAllRecordByDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByDesc*   ns1__Fk_USCOREgetAllRecordByDesc_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByDescResponse* ns1__Fk_USCOREgetAllRecordByDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetAllRecordByDesc(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByDesc*   ns1__Fk_USCOREgetAllRecordByDesc_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByDescResponse* ns1__Fk_USCOREgetAllRecordByDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetAllRecordByDesc SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetAllRecordByDesc document
//gsoap ns1  service method-encoding:	Fk_USCOREgetAllRecordByDesc literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetAllRecordByDesc http://ws.abx/abxWsGest/Fk_getAllRecordByDescRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetAllRecordByDesc http://ws.abx/abxWsGest/Fk_getAllRecordByDescResponse
int __ns1__Fk_USCOREgetAllRecordByDesc(
    ns1__Fk_USCOREgetAllRecordByDesc*   ns1__Fk_USCOREgetAllRecordByDesc_,	///< Input parameter
    ns1__Fk_USCOREgetAllRecordByDescResponse* ns1__Fk_USCOREgetAllRecordByDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetCountAllRecordByDesc                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetCountAllRecordByDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordByDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordByDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetCountAllRecordByDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecordByDesc* ns1__Fk_USCOREgetCountAllRecordByDesc_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordByDescResponse* ns1__Fk_USCOREgetCountAllRecordByDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetCountAllRecordByDesc(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecordByDesc* ns1__Fk_USCOREgetCountAllRecordByDesc_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordByDescResponse* ns1__Fk_USCOREgetCountAllRecordByDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetCountAllRecordByDesc SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetCountAllRecordByDesc document
//gsoap ns1  service method-encoding:	Fk_USCOREgetCountAllRecordByDesc literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetCountAllRecordByDesc http://ws.abx/abxWsGest/Fk_getCountAllRecordByDescRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetCountAllRecordByDesc http://ws.abx/abxWsGest/Fk_getCountAllRecordByDescResponse
int __ns1__Fk_USCOREgetCountAllRecordByDesc(
    ns1__Fk_USCOREgetCountAllRecordByDesc* ns1__Fk_USCOREgetCountAllRecordByDesc_,	///< Input parameter
    ns1__Fk_USCOREgetCountAllRecordByDescResponse* ns1__Fk_USCOREgetCountAllRecordByDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetCountAllRecordByIndexDesc                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetCountAllRecordByIndexDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordByIndexDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getCountAllRecordByIndexDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetCountAllRecordByIndexDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecordByIndexDesc* ns1__Fk_USCOREgetCountAllRecordByIndexDesc_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse* ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetCountAllRecordByIndexDesc(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetCountAllRecordByIndexDesc* ns1__Fk_USCOREgetCountAllRecordByIndexDesc_,
    // output parameters:
    ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse* ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetCountAllRecordByIndexDesc SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetCountAllRecordByIndexDesc document
//gsoap ns1  service method-encoding:	Fk_USCOREgetCountAllRecordByIndexDesc literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetCountAllRecordByIndexDesc http://ws.abx/abxWsGest/Fk_getCountAllRecordByIndexDescRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetCountAllRecordByIndexDesc http://ws.abx/abxWsGest/Fk_getCountAllRecordByIndexDescResponse
int __ns1__Fk_USCOREgetCountAllRecordByIndexDesc(
    ns1__Fk_USCOREgetCountAllRecordByIndexDesc* ns1__Fk_USCOREgetCountAllRecordByIndexDesc_,	///< Input parameter
    ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse* ns1__Fk_USCOREgetCountAllRecordByIndexDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetAllRecordByIndexDesc                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetAllRecordByIndexDesc" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getAllRecordByIndexDescRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getAllRecordByIndexDescResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetAllRecordByIndexDesc(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByIndexDesc* ns1__Fk_USCOREgetAllRecordByIndexDesc_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByIndexDescResponse* ns1__Fk_USCOREgetAllRecordByIndexDescResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetAllRecordByIndexDesc(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetAllRecordByIndexDesc* ns1__Fk_USCOREgetAllRecordByIndexDesc_,
    // output parameters:
    ns1__Fk_USCOREgetAllRecordByIndexDescResponse* ns1__Fk_USCOREgetAllRecordByIndexDescResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetAllRecordByIndexDesc SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetAllRecordByIndexDesc document
//gsoap ns1  service method-encoding:	Fk_USCOREgetAllRecordByIndexDesc literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetAllRecordByIndexDesc http://ws.abx/abxWsGest/Fk_getAllRecordByIndexDescRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetAllRecordByIndexDesc http://ws.abx/abxWsGest/Fk_getAllRecordByIndexDescResponse
int __ns1__Fk_USCOREgetAllRecordByIndexDesc(
    ns1__Fk_USCOREgetAllRecordByIndexDesc* ns1__Fk_USCOREgetAllRecordByIndexDesc_,	///< Input parameter
    ns1__Fk_USCOREgetAllRecordByIndexDescResponse* ns1__Fk_USCOREgetAllRecordByIndexDescResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetColumnsName                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetColumnsName" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getColumnsNameRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getColumnsNameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetColumnsName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetColumnsName*       ns1__Fk_USCOREgetColumnsName_,
    // output parameters:
    ns1__Fk_USCOREgetColumnsNameResponse* ns1__Fk_USCOREgetColumnsNameResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetColumnsName(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetColumnsName*       ns1__Fk_USCOREgetColumnsName_,
    // output parameters:
    ns1__Fk_USCOREgetColumnsNameResponse* ns1__Fk_USCOREgetColumnsNameResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetColumnsName SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetColumnsName document
//gsoap ns1  service method-encoding:	Fk_USCOREgetColumnsName literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetColumnsName http://ws.abx/abxWsGest/Fk_getColumnsNameRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetColumnsName http://ws.abx/abxWsGest/Fk_getColumnsNameResponse
int __ns1__Fk_USCOREgetColumnsName(
    ns1__Fk_USCOREgetColumnsName*       ns1__Fk_USCOREgetColumnsName_,	///< Input parameter
    ns1__Fk_USCOREgetColumnsNameResponse* ns1__Fk_USCOREgetColumnsNameResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetRemoteDatabaseList                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetRemoteDatabaseList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getRemoteDatabaseListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getRemoteDatabaseListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetRemoteDatabaseList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetRemoteDatabaseList* ns1__Fk_USCOREgetRemoteDatabaseList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteDatabaseListResponse* ns1__Fk_USCOREgetRemoteDatabaseListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetRemoteDatabaseList(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetRemoteDatabaseList* ns1__Fk_USCOREgetRemoteDatabaseList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteDatabaseListResponse* ns1__Fk_USCOREgetRemoteDatabaseListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetRemoteDatabaseList SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetRemoteDatabaseList document
//gsoap ns1  service method-encoding:	Fk_USCOREgetRemoteDatabaseList literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetRemoteDatabaseList http://ws.abx/abxWsGest/Fk_getRemoteDatabaseListRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetRemoteDatabaseList http://ws.abx/abxWsGest/Fk_getRemoteDatabaseListResponse
int __ns1__Fk_USCOREgetRemoteDatabaseList(
    ns1__Fk_USCOREgetRemoteDatabaseList* ns1__Fk_USCOREgetRemoteDatabaseList_,	///< Input parameter
    ns1__Fk_USCOREgetRemoteDatabaseListResponse* ns1__Fk_USCOREgetRemoteDatabaseListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetRemoteTableList                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetRemoteTableList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getRemoteTableListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getRemoteTableListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetRemoteTableList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetRemoteTableList*   ns1__Fk_USCOREgetRemoteTableList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteTableListResponse* ns1__Fk_USCOREgetRemoteTableListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetRemoteTableList(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetRemoteTableList*   ns1__Fk_USCOREgetRemoteTableList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteTableListResponse* ns1__Fk_USCOREgetRemoteTableListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetRemoteTableList SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetRemoteTableList document
//gsoap ns1  service method-encoding:	Fk_USCOREgetRemoteTableList literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetRemoteTableList http://ws.abx/abxWsGest/Fk_getRemoteTableListRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetRemoteTableList http://ws.abx/abxWsGest/Fk_getRemoteTableListResponse
int __ns1__Fk_USCOREgetRemoteTableList(
    ns1__Fk_USCOREgetRemoteTableList*   ns1__Fk_USCOREgetRemoteTableList_,	///< Input parameter
    ns1__Fk_USCOREgetRemoteTableListResponse* ns1__Fk_USCOREgetRemoteTableListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetRemoteViewList                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetRemoteViewList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getRemoteViewListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getRemoteViewListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetRemoteViewList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetRemoteViewList*    ns1__Fk_USCOREgetRemoteViewList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteViewListResponse* ns1__Fk_USCOREgetRemoteViewListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetRemoteViewList(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetRemoteViewList*    ns1__Fk_USCOREgetRemoteViewList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteViewListResponse* ns1__Fk_USCOREgetRemoteViewListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetRemoteViewList SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetRemoteViewList document
//gsoap ns1  service method-encoding:	Fk_USCOREgetRemoteViewList literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetRemoteViewList http://ws.abx/abxWsGest/Fk_getRemoteViewListRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetRemoteViewList http://ws.abx/abxWsGest/Fk_getRemoteViewListResponse
int __ns1__Fk_USCOREgetRemoteViewList(
    ns1__Fk_USCOREgetRemoteViewList*    ns1__Fk_USCOREgetRemoteViewList_,	///< Input parameter
    ns1__Fk_USCOREgetRemoteViewListResponse* ns1__Fk_USCOREgetRemoteViewListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetRemoteFieldList                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetRemoteFieldList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getRemoteFieldListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getRemoteFieldListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetRemoteFieldList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetRemoteFieldList*   ns1__Fk_USCOREgetRemoteFieldList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteFieldListResponse* ns1__Fk_USCOREgetRemoteFieldListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetRemoteFieldList(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetRemoteFieldList*   ns1__Fk_USCOREgetRemoteFieldList_,
    // output parameters:
    ns1__Fk_USCOREgetRemoteFieldListResponse* ns1__Fk_USCOREgetRemoteFieldListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetRemoteFieldList SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetRemoteFieldList document
//gsoap ns1  service method-encoding:	Fk_USCOREgetRemoteFieldList literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetRemoteFieldList http://ws.abx/abxWsGest/Fk_getRemoteFieldListRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetRemoteFieldList http://ws.abx/abxWsGest/Fk_getRemoteFieldListResponse
int __ns1__Fk_USCOREgetRemoteFieldList(
    ns1__Fk_USCOREgetRemoteFieldList*   ns1__Fk_USCOREgetRemoteFieldList_,	///< Input parameter
    ns1__Fk_USCOREgetRemoteFieldListResponse* ns1__Fk_USCOREgetRemoteFieldListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Fk_USCOREgetLocalFieldList                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Fk_USCOREgetLocalFieldList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/Fk_getLocalFieldListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/Fk_getLocalFieldListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Fk_USCOREgetLocalFieldList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__Fk_USCOREgetLocalFieldList*    ns1__Fk_USCOREgetLocalFieldList_,
    // output parameters:
    ns1__Fk_USCOREgetLocalFieldListResponse* ns1__Fk_USCOREgetLocalFieldListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Fk_USCOREgetLocalFieldList(
    struct soap *soap,
    // input parameters:
    ns1__Fk_USCOREgetLocalFieldList*    ns1__Fk_USCOREgetLocalFieldList_,
    // output parameters:
    ns1__Fk_USCOREgetLocalFieldListResponse* ns1__Fk_USCOREgetLocalFieldListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Fk_USCOREgetLocalFieldList SOAP
//gsoap ns1  service method-style:	Fk_USCOREgetLocalFieldList document
//gsoap ns1  service method-encoding:	Fk_USCOREgetLocalFieldList literal
//gsoap ns1  service method-input-action:	Fk_USCOREgetLocalFieldList http://ws.abx/abxWsGest/Fk_getLocalFieldListRequest
//gsoap ns1  service method-output-action:	Fk_USCOREgetLocalFieldList http://ws.abx/abxWsGest/Fk_getLocalFieldListResponse
int __ns1__Fk_USCOREgetLocalFieldList(
    ns1__Fk_USCOREgetLocalFieldList*    ns1__Fk_USCOREgetLocalFieldList_,	///< Input parameter
    ns1__Fk_USCOREgetLocalFieldListResponse* ns1__Fk_USCOREgetLocalFieldListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteFilter                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteFilter" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteFilterRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteFilter*                  ns1__DeleteFilter_,
    // output parameters:
    ns1__DeleteFilterResponse*          ns1__DeleteFilterResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteFilter(
    struct soap *soap,
    // input parameters:
    ns1__DeleteFilter*                  ns1__DeleteFilter_,
    // output parameters:
    ns1__DeleteFilterResponse*          ns1__DeleteFilterResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteFilter SOAP
//gsoap ns1  service method-style:	DeleteFilter document
//gsoap ns1  service method-encoding:	DeleteFilter literal
//gsoap ns1  service method-input-action:	DeleteFilter http://ws.abx/abxWsGest/DeleteFilterRequest
//gsoap ns1  service method-output-action:	DeleteFilter http://ws.abx/abxWsGest/DeleteFilterResponse
int __ns1__DeleteFilter(
    ns1__DeleteFilter*                  ns1__DeleteFilter_,	///< Input parameter
    ns1__DeleteFilterResponse*          ns1__DeleteFilterResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyFilter                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyFilter" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyFilterRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyFilter*                  ns1__ModifyFilter_,
    // output parameters:
    ns1__ModifyFilterResponse*          ns1__ModifyFilterResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyFilter(
    struct soap *soap,
    // input parameters:
    ns1__ModifyFilter*                  ns1__ModifyFilter_,
    // output parameters:
    ns1__ModifyFilterResponse*          ns1__ModifyFilterResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyFilter SOAP
//gsoap ns1  service method-style:	ModifyFilter document
//gsoap ns1  service method-encoding:	ModifyFilter literal
//gsoap ns1  service method-input-action:	ModifyFilter http://ws.abx/abxWsGest/ModifyFilterRequest
//gsoap ns1  service method-output-action:	ModifyFilter http://ws.abx/abxWsGest/ModifyFilterResponse
int __ns1__ModifyFilter(
    ns1__ModifyFilter*                  ns1__ModifyFilter_,	///< Input parameter
    ns1__ModifyFilterResponse*          ns1__ModifyFilterResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertFilter                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertFilter" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertFilterRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertFilter*                  ns1__InsertFilter_,
    // output parameters:
    ns1__InsertFilterResponse*          ns1__InsertFilterResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertFilter(
    struct soap *soap,
    // input parameters:
    ns1__InsertFilter*                  ns1__InsertFilter_,
    // output parameters:
    ns1__InsertFilterResponse*          ns1__InsertFilterResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertFilter SOAP
//gsoap ns1  service method-style:	InsertFilter document
//gsoap ns1  service method-encoding:	InsertFilter literal
//gsoap ns1  service method-input-action:	InsertFilter http://ws.abx/abxWsGest/InsertFilterRequest
//gsoap ns1  service method-output-action:	InsertFilter http://ws.abx/abxWsGest/InsertFilterResponse
int __ns1__InsertFilter(
    ns1__InsertFilter*                  ns1__InsertFilter_,	///< Input parameter
    ns1__InsertFilterResponse*          ns1__InsertFilterResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInstanceId                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInstanceId" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetInstanceIdRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetInstanceIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInstanceId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetInstanceId*                 ns1__GetInstanceId_,
    // output parameters:
    ns1__GetInstanceIdResponse*         ns1__GetInstanceIdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInstanceId(
    struct soap *soap,
    // input parameters:
    ns1__GetInstanceId*                 ns1__GetInstanceId_,
    // output parameters:
    ns1__GetInstanceIdResponse*         ns1__GetInstanceIdResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInstanceId SOAP
//gsoap ns1  service method-style:	GetInstanceId document
//gsoap ns1  service method-encoding:	GetInstanceId literal
//gsoap ns1  service method-input-action:	GetInstanceId http://ws.abx/abxWsGest/GetInstanceIdRequest
//gsoap ns1  service method-output-action:	GetInstanceId http://ws.abx/abxWsGest/GetInstanceIdResponse
int __ns1__GetInstanceId(
    ns1__GetInstanceId*                 ns1__GetInstanceId_,	///< Input parameter
    ns1__GetInstanceIdResponse*         ns1__GetInstanceIdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTemplateProperties                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTemplateProperties" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetTemplatePropertiesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetTemplatePropertiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTemplateProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetTemplateProperties*         ns1__GetTemplateProperties_,
    // output parameters:
    ns1__GetTemplatePropertiesResponse* ns1__GetTemplatePropertiesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTemplateProperties(
    struct soap *soap,
    // input parameters:
    ns1__GetTemplateProperties*         ns1__GetTemplateProperties_,
    // output parameters:
    ns1__GetTemplatePropertiesResponse* ns1__GetTemplatePropertiesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetTemplateProperties SOAP
//gsoap ns1  service method-style:	GetTemplateProperties document
//gsoap ns1  service method-encoding:	GetTemplateProperties literal
//gsoap ns1  service method-input-action:	GetTemplateProperties http://ws.abx/abxWsGest/GetTemplatePropertiesRequest
//gsoap ns1  service method-output-action:	GetTemplateProperties http://ws.abx/abxWsGest/GetTemplatePropertiesResponse
int __ns1__GetTemplateProperties(
    ns1__GetTemplateProperties*         ns1__GetTemplateProperties_,	///< Input parameter
    ns1__GetTemplatePropertiesResponse* ns1__GetTemplatePropertiesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetQueryParam                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetQueryParam" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetQueryParamRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetQueryParamResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetQueryParam(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetQueryParam*                 ns1__GetQueryParam_,
    // output parameters:
    ns1__GetQueryParamResponse*         ns1__GetQueryParamResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetQueryParam(
    struct soap *soap,
    // input parameters:
    ns1__GetQueryParam*                 ns1__GetQueryParam_,
    // output parameters:
    ns1__GetQueryParamResponse*         ns1__GetQueryParamResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetQueryParam SOAP
//gsoap ns1  service method-style:	GetQueryParam document
//gsoap ns1  service method-encoding:	GetQueryParam literal
//gsoap ns1  service method-input-action:	GetQueryParam http://ws.abx/abxWsGest/GetQueryParamRequest
//gsoap ns1  service method-output-action:	GetQueryParam http://ws.abx/abxWsGest/GetQueryParamResponse
int __ns1__GetQueryParam(
    ns1__GetQueryParam*                 ns1__GetQueryParam_,	///< Input parameter
    ns1__GetQueryParamResponse*         ns1__GetQueryParamResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertLinkContainerToContainer                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertLinkContainerToContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertLinkContainerToContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertLinkContainerToContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertLinkContainerToContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertLinkContainerToContainer* ns1__InsertLinkContainerToContainer_,
    // output parameters:
    ns1__InsertLinkContainerToContainerResponse* ns1__InsertLinkContainerToContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertLinkContainerToContainer(
    struct soap *soap,
    // input parameters:
    ns1__InsertLinkContainerToContainer* ns1__InsertLinkContainerToContainer_,
    // output parameters:
    ns1__InsertLinkContainerToContainerResponse* ns1__InsertLinkContainerToContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertLinkContainerToContainer SOAP
//gsoap ns1  service method-style:	InsertLinkContainerToContainer document
//gsoap ns1  service method-encoding:	InsertLinkContainerToContainer literal
//gsoap ns1  service method-input-action:	InsertLinkContainerToContainer http://ws.abx/abxWsGest/InsertLinkContainerToContainerRequest
//gsoap ns1  service method-output-action:	InsertLinkContainerToContainer http://ws.abx/abxWsGest/InsertLinkContainerToContainerResponse
int __ns1__InsertLinkContainerToContainer(
    ns1__InsertLinkContainerToContainer* ns1__InsertLinkContainerToContainer_,	///< Input parameter
    ns1__InsertLinkContainerToContainerResponse* ns1__InsertLinkContainerToContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertLinkContainerToContainer                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertLinkContainerToContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertLinkContainerToContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertLinkContainerToContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertLinkContainerToContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertLinkContainerToContainer* ns1__CanInsertLinkContainerToContainer_,
    // output parameters:
    ns1__CanInsertLinkContainerToContainerResponse* ns1__CanInsertLinkContainerToContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertLinkContainerToContainer(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertLinkContainerToContainer* ns1__CanInsertLinkContainerToContainer_,
    // output parameters:
    ns1__CanInsertLinkContainerToContainerResponse* ns1__CanInsertLinkContainerToContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertLinkContainerToContainer SOAP
//gsoap ns1  service method-style:	CanInsertLinkContainerToContainer document
//gsoap ns1  service method-encoding:	CanInsertLinkContainerToContainer literal
//gsoap ns1  service method-input-action:	CanInsertLinkContainerToContainer http://ws.abx/abxWsGest/CanInsertLinkContainerToContainerRequest
//gsoap ns1  service method-output-action:	CanInsertLinkContainerToContainer http://ws.abx/abxWsGest/CanInsertLinkContainerToContainerResponse
int __ns1__CanInsertLinkContainerToContainer(
    ns1__CanInsertLinkContainerToContainer* ns1__CanInsertLinkContainerToContainer_,	///< Input parameter
    ns1__CanInsertLinkContainerToContainerResponse* ns1__CanInsertLinkContainerToContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertLinkContainerToDocument                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertLinkContainerToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertLinkContainerToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertLinkContainerToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertLinkContainerToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertLinkContainerToDocument* ns1__InsertLinkContainerToDocument_,
    // output parameters:
    ns1__InsertLinkContainerToDocumentResponse* ns1__InsertLinkContainerToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertLinkContainerToDocument(
    struct soap *soap,
    // input parameters:
    ns1__InsertLinkContainerToDocument* ns1__InsertLinkContainerToDocument_,
    // output parameters:
    ns1__InsertLinkContainerToDocumentResponse* ns1__InsertLinkContainerToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertLinkContainerToDocument SOAP
//gsoap ns1  service method-style:	InsertLinkContainerToDocument document
//gsoap ns1  service method-encoding:	InsertLinkContainerToDocument literal
//gsoap ns1  service method-input-action:	InsertLinkContainerToDocument http://ws.abx/abxWsGest/InsertLinkContainerToDocumentRequest
//gsoap ns1  service method-output-action:	InsertLinkContainerToDocument http://ws.abx/abxWsGest/InsertLinkContainerToDocumentResponse
int __ns1__InsertLinkContainerToDocument(
    ns1__InsertLinkContainerToDocument* ns1__InsertLinkContainerToDocument_,	///< Input parameter
    ns1__InsertLinkContainerToDocumentResponse* ns1__InsertLinkContainerToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertLinkContainerToDocument                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertLinkContainerToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertLinkContainerToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertLinkContainerToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertLinkContainerToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertLinkContainerToDocument* ns1__CanInsertLinkContainerToDocument_,
    // output parameters:
    ns1__CanInsertLinkContainerToDocumentResponse* ns1__CanInsertLinkContainerToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertLinkContainerToDocument(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertLinkContainerToDocument* ns1__CanInsertLinkContainerToDocument_,
    // output parameters:
    ns1__CanInsertLinkContainerToDocumentResponse* ns1__CanInsertLinkContainerToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertLinkContainerToDocument SOAP
//gsoap ns1  service method-style:	CanInsertLinkContainerToDocument document
//gsoap ns1  service method-encoding:	CanInsertLinkContainerToDocument literal
//gsoap ns1  service method-input-action:	CanInsertLinkContainerToDocument http://ws.abx/abxWsGest/CanInsertLinkContainerToDocumentRequest
//gsoap ns1  service method-output-action:	CanInsertLinkContainerToDocument http://ws.abx/abxWsGest/CanInsertLinkContainerToDocumentResponse
int __ns1__CanInsertLinkContainerToDocument(
    ns1__CanInsertLinkContainerToDocument* ns1__CanInsertLinkContainerToDocument_,	///< Input parameter
    ns1__CanInsertLinkContainerToDocumentResponse* ns1__CanInsertLinkContainerToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__InsertLinkDocumentToDocument                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__InsertLinkDocumentToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/InsertLinkDocumentToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/InsertLinkDocumentToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__InsertLinkDocumentToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__InsertLinkDocumentToDocument*  ns1__InsertLinkDocumentToDocument_,
    // output parameters:
    ns1__InsertLinkDocumentToDocumentResponse* ns1__InsertLinkDocumentToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__InsertLinkDocumentToDocument(
    struct soap *soap,
    // input parameters:
    ns1__InsertLinkDocumentToDocument*  ns1__InsertLinkDocumentToDocument_,
    // output parameters:
    ns1__InsertLinkDocumentToDocumentResponse* ns1__InsertLinkDocumentToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	InsertLinkDocumentToDocument SOAP
//gsoap ns1  service method-style:	InsertLinkDocumentToDocument document
//gsoap ns1  service method-encoding:	InsertLinkDocumentToDocument literal
//gsoap ns1  service method-input-action:	InsertLinkDocumentToDocument http://ws.abx/abxWsGest/InsertLinkDocumentToDocumentRequest
//gsoap ns1  service method-output-action:	InsertLinkDocumentToDocument http://ws.abx/abxWsGest/InsertLinkDocumentToDocumentResponse
int __ns1__InsertLinkDocumentToDocument(
    ns1__InsertLinkDocumentToDocument*  ns1__InsertLinkDocumentToDocument_,	///< Input parameter
    ns1__InsertLinkDocumentToDocumentResponse* ns1__InsertLinkDocumentToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CanInsertLinkDocumentToDocument                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CanInsertLinkDocumentToDocument" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CanInsertLinkDocumentToDocumentRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CanInsertLinkDocumentToDocumentResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CanInsertLinkDocumentToDocument(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CanInsertLinkDocumentToDocument* ns1__CanInsertLinkDocumentToDocument_,
    // output parameters:
    ns1__CanInsertLinkDocumentToDocumentResponse* ns1__CanInsertLinkDocumentToDocumentResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CanInsertLinkDocumentToDocument(
    struct soap *soap,
    // input parameters:
    ns1__CanInsertLinkDocumentToDocument* ns1__CanInsertLinkDocumentToDocument_,
    // output parameters:
    ns1__CanInsertLinkDocumentToDocumentResponse* ns1__CanInsertLinkDocumentToDocumentResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CanInsertLinkDocumentToDocument SOAP
//gsoap ns1  service method-style:	CanInsertLinkDocumentToDocument document
//gsoap ns1  service method-encoding:	CanInsertLinkDocumentToDocument literal
//gsoap ns1  service method-input-action:	CanInsertLinkDocumentToDocument http://ws.abx/abxWsGest/CanInsertLinkDocumentToDocumentRequest
//gsoap ns1  service method-output-action:	CanInsertLinkDocumentToDocument http://ws.abx/abxWsGest/CanInsertLinkDocumentToDocumentResponse
int __ns1__CanInsertLinkDocumentToDocument(
    ns1__CanInsertLinkDocumentToDocument* ns1__CanInsertLinkDocumentToDocument_,	///< Input parameter
    ns1__CanInsertLinkDocumentToDocumentResponse* ns1__CanInsertLinkDocumentToDocumentResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyLinkContainerToContainer                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyLinkContainerToContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyLinkContainerToContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyLinkContainerToContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyLinkContainerToContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyLinkContainerToContainer* ns1__ModifyLinkContainerToContainer_,
    // output parameters:
    ns1__ModifyLinkContainerToContainerResponse* ns1__ModifyLinkContainerToContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyLinkContainerToContainer(
    struct soap *soap,
    // input parameters:
    ns1__ModifyLinkContainerToContainer* ns1__ModifyLinkContainerToContainer_,
    // output parameters:
    ns1__ModifyLinkContainerToContainerResponse* ns1__ModifyLinkContainerToContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyLinkContainerToContainer SOAP
//gsoap ns1  service method-style:	ModifyLinkContainerToContainer document
//gsoap ns1  service method-encoding:	ModifyLinkContainerToContainer literal
//gsoap ns1  service method-input-action:	ModifyLinkContainerToContainer http://ws.abx/abxWsGest/ModifyLinkContainerToContainerRequest
//gsoap ns1  service method-output-action:	ModifyLinkContainerToContainer http://ws.abx/abxWsGest/ModifyLinkContainerToContainerResponse
int __ns1__ModifyLinkContainerToContainer(
    ns1__ModifyLinkContainerToContainer* ns1__ModifyLinkContainerToContainer_,	///< Input parameter
    ns1__ModifyLinkContainerToContainerResponse* ns1__ModifyLinkContainerToContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateContainer                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateContainer" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateContainerRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateContainerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateContainer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateContainer*               ns1__CreateContainer_,
    // output parameters:
    ns1__CreateContainerResponse*       ns1__CreateContainerResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateContainer(
    struct soap *soap,
    // input parameters:
    ns1__CreateContainer*               ns1__CreateContainer_,
    // output parameters:
    ns1__CreateContainerResponse*       ns1__CreateContainerResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateContainer SOAP
//gsoap ns1  service method-style:	CreateContainer document
//gsoap ns1  service method-encoding:	CreateContainer literal
//gsoap ns1  service method-input-action:	CreateContainer http://ws.abx/abxWsGest/CreateContainerRequest
//gsoap ns1  service method-output-action:	CreateContainer http://ws.abx/abxWsGest/CreateContainerResponse
int __ns1__CreateContainer(
    ns1__CreateContainer*               ns1__CreateContainer_,	///< Input parameter
    ns1__CreateContainerResponse*       ns1__CreateContainerResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateTemplate                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateTemplate" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateTemplateRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateTemplateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateTemplate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateTemplate*                ns1__CreateTemplate_,
    // output parameters:
    ns1__CreateTemplateResponse*        ns1__CreateTemplateResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateTemplate(
    struct soap *soap,
    // input parameters:
    ns1__CreateTemplate*                ns1__CreateTemplate_,
    // output parameters:
    ns1__CreateTemplateResponse*        ns1__CreateTemplateResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateTemplate SOAP
//gsoap ns1  service method-style:	CreateTemplate document
//gsoap ns1  service method-encoding:	CreateTemplate literal
//gsoap ns1  service method-input-action:	CreateTemplate http://ws.abx/abxWsGest/CreateTemplateRequest
//gsoap ns1  service method-output-action:	CreateTemplate http://ws.abx/abxWsGest/CreateTemplateResponse
int __ns1__CreateTemplate(
    ns1__CreateTemplate*                ns1__CreateTemplate_,	///< Input parameter
    ns1__CreateTemplateResponse*        ns1__CreateTemplateResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateDynorg                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateDynorg" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/CreateDynorgRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/CreateDynorgResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateDynorg(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__CreateDynorg*                  ns1__CreateDynorg_,
    // output parameters:
    ns1__CreateDynorgResponse*          ns1__CreateDynorgResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateDynorg(
    struct soap *soap,
    // input parameters:
    ns1__CreateDynorg*                  ns1__CreateDynorg_,
    // output parameters:
    ns1__CreateDynorgResponse*          ns1__CreateDynorgResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CreateDynorg SOAP
//gsoap ns1  service method-style:	CreateDynorg document
//gsoap ns1  service method-encoding:	CreateDynorg literal
//gsoap ns1  service method-input-action:	CreateDynorg http://ws.abx/abxWsGest/CreateDynorgRequest
//gsoap ns1  service method-output-action:	CreateDynorg http://ws.abx/abxWsGest/CreateDynorgResponse
int __ns1__CreateDynorg(
    ns1__CreateDynorg*                  ns1__CreateDynorg_,	///< Input parameter
    ns1__CreateDynorgResponse*          ns1__CreateDynorgResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInstanceReplicationStatus                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInstanceReplicationStatus" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetInstanceReplicationStatusRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetInstanceReplicationStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInstanceReplicationStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetInstanceReplicationStatus*  ns1__GetInstanceReplicationStatus_,
    // output parameters:
    ns1__GetInstanceReplicationStatusResponse* ns1__GetInstanceReplicationStatusResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInstanceReplicationStatus(
    struct soap *soap,
    // input parameters:
    ns1__GetInstanceReplicationStatus*  ns1__GetInstanceReplicationStatus_,
    // output parameters:
    ns1__GetInstanceReplicationStatusResponse* ns1__GetInstanceReplicationStatusResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInstanceReplicationStatus SOAP
//gsoap ns1  service method-style:	GetInstanceReplicationStatus document
//gsoap ns1  service method-encoding:	GetInstanceReplicationStatus literal
//gsoap ns1  service method-input-action:	GetInstanceReplicationStatus http://ws.abx/abxWsGest/GetInstanceReplicationStatusRequest
//gsoap ns1  service method-output-action:	GetInstanceReplicationStatus http://ws.abx/abxWsGest/GetInstanceReplicationStatusResponse
int __ns1__GetInstanceReplicationStatus(
    ns1__GetInstanceReplicationStatus*  ns1__GetInstanceReplicationStatus_,	///< Input parameter
    ns1__GetInstanceReplicationStatusResponse* ns1__GetInstanceReplicationStatusResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyDataWA                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyDataWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyDataWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyDataWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyDataWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyDataWA*                  ns1__ModifyDataWA_,
    // output parameters:
    ns1__ModifyDataWAResponse*          ns1__ModifyDataWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyDataWA(
    struct soap *soap,
    // input parameters:
    ns1__ModifyDataWA*                  ns1__ModifyDataWA_,
    // output parameters:
    ns1__ModifyDataWAResponse*          ns1__ModifyDataWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyDataWA SOAP
//gsoap ns1  service method-style:	ModifyDataWA document
//gsoap ns1  service method-encoding:	ModifyDataWA literal
//gsoap ns1  service method-input-action:	ModifyDataWA http://ws.abx/abxWsGest/ModifyDataWARequest
//gsoap ns1  service method-output-action:	ModifyDataWA http://ws.abx/abxWsGest/ModifyDataWAResponse
int __ns1__ModifyDataWA(
    ns1__ModifyDataWA*                  ns1__ModifyDataWA_,	///< Input parameter
    ns1__ModifyDataWAResponse*          ns1__ModifyDataWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteDataWA                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteDataWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/DeleteDataWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/DeleteDataWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteDataWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__DeleteDataWA*                  ns1__DeleteDataWA_,
    // output parameters:
    ns1__DeleteDataWAResponse*          ns1__DeleteDataWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteDataWA(
    struct soap *soap,
    // input parameters:
    ns1__DeleteDataWA*                  ns1__DeleteDataWA_,
    // output parameters:
    ns1__DeleteDataWAResponse*          ns1__DeleteDataWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DeleteDataWA SOAP
//gsoap ns1  service method-style:	DeleteDataWA document
//gsoap ns1  service method-encoding:	DeleteDataWA literal
//gsoap ns1  service method-input-action:	DeleteDataWA http://ws.abx/abxWsGest/DeleteDataWARequest
//gsoap ns1  service method-output-action:	DeleteDataWA http://ws.abx/abxWsGest/DeleteDataWAResponse
int __ns1__DeleteDataWA(
    ns1__DeleteDataWA*                  ns1__DeleteDataWA_,	///< Input parameter
    ns1__DeleteDataWAResponse*          ns1__DeleteDataWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetListDataWA                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetListDataWA" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetListDataWARequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetListDataWAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetListDataWA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetListDataWA*                 ns1__GetListDataWA_,
    // output parameters:
    ns1__GetListDataWAResponse*         ns1__GetListDataWAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetListDataWA(
    struct soap *soap,
    // input parameters:
    ns1__GetListDataWA*                 ns1__GetListDataWA_,
    // output parameters:
    ns1__GetListDataWAResponse*         ns1__GetListDataWAResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetListDataWA SOAP
//gsoap ns1  service method-style:	GetListDataWA document
//gsoap ns1  service method-encoding:	GetListDataWA literal
//gsoap ns1  service method-input-action:	GetListDataWA http://ws.abx/abxWsGest/GetListDataWARequest
//gsoap ns1  service method-output-action:	GetListDataWA http://ws.abx/abxWsGest/GetListDataWAResponse
int __ns1__GetListDataWA(
    ns1__GetListDataWA*                 ns1__GetListDataWA_,	///< Input parameter
    ns1__GetListDataWAResponse*         ns1__GetListDataWAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFieldList                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFieldList" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFieldListRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFieldListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFieldList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFieldList*                  ns1__GetFieldList_,
    // output parameters:
    ns1__GetFieldListResponse*          ns1__GetFieldListResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFieldList(
    struct soap *soap,
    // input parameters:
    ns1__GetFieldList*                  ns1__GetFieldList_,
    // output parameters:
    ns1__GetFieldListResponse*          ns1__GetFieldListResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFieldList SOAP
//gsoap ns1  service method-style:	GetFieldList document
//gsoap ns1  service method-encoding:	GetFieldList literal
//gsoap ns1  service method-input-action:	GetFieldList http://ws.abx/abxWsGest/GetFieldListRequest
//gsoap ns1  service method-output-action:	GetFieldList http://ws.abx/abxWsGest/GetFieldListResponse
int __ns1__GetFieldList(
    ns1__GetFieldList*                  ns1__GetFieldList_,	///< Input parameter
    ns1__GetFieldListResponse*          ns1__GetFieldListResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetFieldProperties                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetFieldProperties" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetFieldPropertiesRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetFieldPropertiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetFieldProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetFieldProperties*            ns1__GetFieldProperties_,
    // output parameters:
    ns1__GetFieldPropertiesResponse*    ns1__GetFieldPropertiesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetFieldProperties(
    struct soap *soap,
    // input parameters:
    ns1__GetFieldProperties*            ns1__GetFieldProperties_,
    // output parameters:
    ns1__GetFieldPropertiesResponse*    ns1__GetFieldPropertiesResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetFieldProperties SOAP
//gsoap ns1  service method-style:	GetFieldProperties document
//gsoap ns1  service method-encoding:	GetFieldProperties literal
//gsoap ns1  service method-input-action:	GetFieldProperties http://ws.abx/abxWsGest/GetFieldPropertiesRequest
//gsoap ns1  service method-output-action:	GetFieldProperties http://ws.abx/abxWsGest/GetFieldPropertiesResponse
int __ns1__GetFieldProperties(
    ns1__GetFieldProperties*            ns1__GetFieldProperties_,	///< Input parameter
    ns1__GetFieldPropertiesResponse*    ns1__GetFieldPropertiesResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyField                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyField" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/ModifyFieldRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/ModifyFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ModifyField*                   ns1__ModifyField_,
    // output parameters:
    ns1__ModifyFieldResponse*           ns1__ModifyFieldResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyField(
    struct soap *soap,
    // input parameters:
    ns1__ModifyField*                   ns1__ModifyField_,
    // output parameters:
    ns1__ModifyFieldResponse*           ns1__ModifyFieldResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ModifyField SOAP
//gsoap ns1  service method-style:	ModifyField document
//gsoap ns1  service method-encoding:	ModifyField literal
//gsoap ns1  service method-input-action:	ModifyField http://ws.abx/abxWsGest/ModifyFieldRequest
//gsoap ns1  service method-output-action:	ModifyField http://ws.abx/abxWsGest/ModifyFieldResponse
int __ns1__ModifyField(
    ns1__ModifyField*                   ns1__ModifyField_,	///< Input parameter
    ns1__ModifyFieldResponse*           ns1__ModifyFieldResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetArchiBoxInDomainByMatricola                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetArchiBoxInDomainByMatricola" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetArchiBoxInDomainByMatricolaRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetArchiBoxInDomainByMatricolaResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetArchiBoxInDomainByMatricola(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetArchiBoxInDomainByMatricola* ns1__GetArchiBoxInDomainByMatricola_,
    // output parameters:
    ns1__GetArchiBoxInDomainByMatricolaResponse* ns1__GetArchiBoxInDomainByMatricolaResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetArchiBoxInDomainByMatricola(
    struct soap *soap,
    // input parameters:
    ns1__GetArchiBoxInDomainByMatricola* ns1__GetArchiBoxInDomainByMatricola_,
    // output parameters:
    ns1__GetArchiBoxInDomainByMatricolaResponse* ns1__GetArchiBoxInDomainByMatricolaResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetArchiBoxInDomainByMatricola SOAP
//gsoap ns1  service method-style:	GetArchiBoxInDomainByMatricola document
//gsoap ns1  service method-encoding:	GetArchiBoxInDomainByMatricola literal
//gsoap ns1  service method-input-action:	GetArchiBoxInDomainByMatricola http://ws.abx/abxWsGest/GetArchiBoxInDomainByMatricolaRequest
//gsoap ns1  service method-output-action:	GetArchiBoxInDomainByMatricola http://ws.abx/abxWsGest/GetArchiBoxInDomainByMatricolaResponse
int __ns1__GetArchiBoxInDomainByMatricola(
    ns1__GetArchiBoxInDomainByMatricola* ns1__GetArchiBoxInDomainByMatricola_,	///< Input parameter
    ns1__GetArchiBoxInDomainByMatricolaResponse* ns1__GetArchiBoxInDomainByMatricolaResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetArchiBoxInfo                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetArchiBoxInfo" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetArchiBoxInfoRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetArchiBoxInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetArchiBoxInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetArchiBoxInfo*               ns1__GetArchiBoxInfo_,
    // output parameters:
    ns1__GetArchiBoxInfoResponse*       ns1__GetArchiBoxInfoResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetArchiBoxInfo(
    struct soap *soap,
    // input parameters:
    ns1__GetArchiBoxInfo*               ns1__GetArchiBoxInfo_,
    // output parameters:
    ns1__GetArchiBoxInfoResponse*       ns1__GetArchiBoxInfoResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetArchiBoxInfo SOAP
//gsoap ns1  service method-style:	GetArchiBoxInfo document
//gsoap ns1  service method-encoding:	GetArchiBoxInfo literal
//gsoap ns1  service method-input-action:	GetArchiBoxInfo http://ws.abx/abxWsGest/GetArchiBoxInfoRequest
//gsoap ns1  service method-output-action:	GetArchiBoxInfo http://ws.abx/abxWsGest/GetArchiBoxInfoResponse
int __ns1__GetArchiBoxInfo(
    ns1__GetArchiBoxInfo*               ns1__GetArchiBoxInfo_,	///< Input parameter
    ns1__GetArchiBoxInfoResponse*       ns1__GetArchiBoxInfoResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetArchiBoxInDomain                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetArchiBoxInDomain" of service binding "abxWsGestPortBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://ws.abx/abxWsGest/GetArchiBoxInDomainRequest"

  - Addressing output action: "http://ws.abx/abxWsGest/GetArchiBoxInDomainResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetArchiBoxInDomain(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__GetArchiBoxInDomain*           ns1__GetArchiBoxInDomain_,
    // output parameters:
    ns1__GetArchiBoxInDomainResponse*   ns1__GetArchiBoxInDomainResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetArchiBoxInDomain(
    struct soap *soap,
    // input parameters:
    ns1__GetArchiBoxInDomain*           ns1__GetArchiBoxInDomain_,
    // output parameters:
    ns1__GetArchiBoxInDomainResponse*   ns1__GetArchiBoxInDomainResponse_
  );
@endcode

C++ proxy class (defined in soapabxWsGestPortBindingProxy.h):
@code
  class abxWsGestPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapabxWsGestPortBindingService.h):
@code
  class abxWsGestPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetArchiBoxInDomain SOAP
//gsoap ns1  service method-style:	GetArchiBoxInDomain document
//gsoap ns1  service method-encoding:	GetArchiBoxInDomain literal
//gsoap ns1  service method-input-action:	GetArchiBoxInDomain http://ws.abx/abxWsGest/GetArchiBoxInDomainRequest
//gsoap ns1  service method-output-action:	GetArchiBoxInDomain http://ws.abx/abxWsGest/GetArchiBoxInDomainResponse
int __ns1__GetArchiBoxInDomain(
    ns1__GetArchiBoxInDomain*           ns1__GetArchiBoxInDomain_,	///< Input parameter
    ns1__GetArchiBoxInDomainResponse*   ns1__GetArchiBoxInDomainResponse_	///< Output parameter
);

/**

@page abxWsGestPortBinding Binding "abxWsGestPortBinding"

@section abxWsGestPortBinding_policy_enablers Policy Enablers of Binding  "abxWsGestPortBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section empty Top-level root elements of schema ""

@section empty Top-level root elements of schema ""

@section empty Top-level root elements of schema ""

@section empty Top-level root elements of schema ""

@section ns2 Top-level root elements of schema "http://xml.netbeans.org/schema/abxProtocol"

@section ns3 Top-level root elements of schema "http://xml.netbeans.org/schema/abxDynaminorg"

@section ns4 Top-level root elements of schema "http://xml.netbeans.org/schema/abxCan"

  - <ns4:AbxCan> (use wsdl2h option -g to auto-generate)

@section ns1 Top-level root elements of schema "http://ws.abx/"

  - <ns1:AddDefaultProcess> (use wsdl2h option -g to auto-generate)

  - <ns1:AddDefaultProcessResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddExpression> (use wsdl2h option -g to auto-generate)

  - <ns1:AddExpressionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddFileToSyncByArcCue> (use wsdl2h option -g to auto-generate)

  - <ns1:AddFileToSyncByArcCueResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddLogSDK> (use wsdl2h option -g to auto-generate)

  - <ns1:AddLogSDKResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddMarker> (use wsdl2h option -g to auto-generate)

  - <ns1:AddMarkerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddSign> (use wsdl2h option -g to auto-generate)

  - <ns1:AddSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddUser> (use wsdl2h option -g to auto-generate)

  - <ns1:AddUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AddUserSettings> (use wsdl2h option -g to auto-generate)

  - <ns1:AddUserSettingsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddDigitalSignature> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddDigitalSignatureResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddNewDate> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddNewDateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddNewYear> (use wsdl2h option -g to auto-generate)

  - <ns1:CanAddNewYearResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteData> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteFile> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteLinkFromContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteLinkFromContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:CanDeleteProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanEditProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:CanEditProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertData> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertFile> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkContainerToContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkContainerToContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkContainerToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkContainerToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkDocumentToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertLinkDocumentToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:CanInsertProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyData> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyFile> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyLinkContainerToContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyLinkContainerToContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyLinkContainerToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:CanModifyLinkContainerToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanShowFile> (use wsdl2h option -g to auto-generate)

  - <ns1:CanShowFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CanUseProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:CanUseProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ChangeSDKTaskStatus> (use wsdl2h option -g to auto-generate)

  - <ns1:ChangeSDKTaskStatusResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ChangeSchedulerTaskScheduleStatus> (use wsdl2h option -g to auto-generate)

  - <ns1:ChangeSchedulerTaskScheduleStatusResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_attach> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_attachContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_attachContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_attachResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_document> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckIn_documentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_attach> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_attachContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_attachContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_attachResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_document> (use wsdl2h option -g to auto-generate)

  - <ns1:CheckOut_documentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_getAll> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_getAllResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_insert> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_insertResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_isCombo> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_isComboResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_modify> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_modifyResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_removeAll> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_removeAllResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_removeItem> (use wsdl2h option -g to auto-generate)

  - <ns1:Combo_removeItemResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CopyData> (use wsdl2h option -g to auto-generate)

  - <ns1:CopyDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CopyFile> (use wsdl2h option -g to auto-generate)

  - <ns1:CopyFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateField> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTask> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTaskFieldMapping> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTaskFieldMappingResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTaskWatchFolder> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateSDKTaskWatchFolderResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:CreateTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DelDefaultProcess> (use wsdl2h option -g to auto-generate)

  - <ns1:DelDefaultProcessResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DelExpression> (use wsdl2h option -g to auto-generate)

  - <ns1:DelExpressionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DelMarker> (use wsdl2h option -g to auto-generate)

  - <ns1:DelMarkerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DelSign> (use wsdl2h option -g to auto-generate)

  - <ns1:DelSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DelUserSettings> (use wsdl2h option -g to auto-generate)

  - <ns1:DelUserSettingsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteArchSostRule> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteArchSostRuleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteClasseDocumentale> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteClasseDocumentaleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteData> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteDataWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteDataWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteField> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileContainerVersion> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileContainerVersionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileVersion> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileVersionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFileWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFilter> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteFilterResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteLink> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteLinkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKLog> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKLogResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKTask> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKTaskFieldMapping> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKTaskFieldMappingResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSDKTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSchedulerTask> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSchedulerTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSchedulerTaskSchedule> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteSchedulerTaskScheduleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTPFileByCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTPFileByCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTPFileById> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTPFileByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTranslation> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTranslationByCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTranslationByCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteTranslationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUSFileByCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUSFileByCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUSFileById> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUSFileByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUserByUsername> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteUserByUsernameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteWFFileByCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteWFFileByCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteWFFileById> (use wsdl2h option -g to auto-generate)

  - <ns1:DeleteWFFileByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DestroyContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:DestroyContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DestroyRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:DestroyRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DigitalSign> (use wsdl2h option -g to auto-generate)

  - <ns1:DigitalSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadEndFileWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadEndFileWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileByFileUniqueCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileByFileUniqueCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileContainerUnc> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileContainerUncResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFilePreview> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFilePreviewResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileUnc> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileUncResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileWAByFileUniqueCode> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileWAByFileUniqueCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadFileWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetChunkWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetChunkWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetNext> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetNextResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetNextWA> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadGetNextWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadTPEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadTPEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadTPFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadTPFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSGetChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSGetChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSGetNext> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadUSGetNextResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadWFEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadWFEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadWFFile> (use wsdl2h option -g to auto-generate)

  - <ns1:DownloadWFFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:EditProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:EditProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:EndPermissionSettings> (use wsdl2h option -g to auto-generate)

  - <ns1:EndPermissionSettingsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ExistUserByUsername> (use wsdl2h option -g to auto-generate)

  - <ns1:ExistUserByUsernameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ExtractSDKPDFTemplateTextByArea> (use wsdl2h option -g to auto-generate)

  - <ns1:ExtractSDKPDFTemplateTextByAreaResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_delete> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_deleteResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_modify> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_modifyResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_testConnection> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_DB_testConnectionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_WS_insert> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_WS_insertResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_create> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_createResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecord> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByIndex> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByIndexDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByIndexDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordByIndexResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getAllRecordResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getColumnsName> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getColumnsNameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecord> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecordByDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecordByDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecordByIndexDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecordByIndexDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getCountAllRecordResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getLocalFieldList> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getLocalFieldListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getPars> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getParsAllFk> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getParsAllFkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getParsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteDatabaseList> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteDatabaseListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteFieldList> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteFieldListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteTableList> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteTableListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteViewList> (use wsdl2h option -g to auto-generate)

  - <ns1:Fk_getRemoteViewListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:FullTreePathName> (use wsdl2h option -g to auto-generate)

  - <ns1:FullTreePathNameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAdjacentArchiBox> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAdjacentArchiBoxResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllContainerExpressions> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllContainerExpressionsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllFilter> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllFilterResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllObjectWithSystem> (use wsdl2h option -g to auto-generate)

  - <ns1:GetAllObjectWithSystemResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchSostRules> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchSostRulesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInDomain> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInDomainByMatricola> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInDomainByMatricolaResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInDomainResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInfo> (use wsdl2h option -g to auto-generate)

  - <ns1:GetArchiBoxInfoResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetClasseDocumentale> (use wsdl2h option -g to auto-generate)

  - <ns1:GetClasseDocumentaleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContSign> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContSignByUser> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContSignByUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContainerLinks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetContainerLinksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountDocumentLinks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountDocumentLinksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountFileList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountFileListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountLinksToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:GetCountLinksToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetData> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataById> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataByIdForSecurity> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataByIdForSecurityResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataCountWithPermission> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataCountWithPermissionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataCountWithoutPermission> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataCountWithoutPermissionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileContainerDetail> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileContainerDetailResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileDetail> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileDetailResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListForSecurity> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListForSecurityResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListOnlyLastVersion> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListOnlyLastVersionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListWA> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataFileListWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataLimit> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataLimitResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileDetail> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileDetailResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByName> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByNameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByUsername> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListByUsernameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataTPFileListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileDetail> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileDetailResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileListByUsername> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileListByUsernameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataUSFileListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWAById> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWAByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWFFileDetail> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWFFileDetailResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWFFileList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDataWFFileListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDefaultObjActList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDefaultObjActListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDefaultProcess> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDefaultProcessResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDocumentLinks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDocumentLinksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDomainList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDomainListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByCont> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByContId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByContIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByContResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByData> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByDataId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByDataIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByFilecode> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDownloadDetailByFilecodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDynorgList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDynorgListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDynorgTypeList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetDynorgTypeListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetExpression> (use wsdl2h option -g to auto-generate)

  - <ns1:GetExpressionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetExpressionValue> (use wsdl2h option -g to auto-generate)

  - <ns1:GetExpressionValueResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldProperties> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldPropertiesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldsPropertiesFromTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFieldsPropertiesFromTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileAvailable> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileAvailableResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileListByCode> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileListByCodeForSecurity> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileListByCodeForSecurityResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetFileListByCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetGroupList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetGroupListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetGroupsListByUser> (use wsdl2h option -g to auto-generate)

  - <ns1:GetGroupsListByUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceNameFromLinks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceNameFromLinksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstancePathname> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstancePathnameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceReplication> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceReplicationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceReplicationStatus> (use wsdl2h option -g to auto-generate)

  - <ns1:GetInstanceReplicationStatusResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLanguages> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLanguagesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLinksToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLinksToDocumentFiltered> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLinksToDocumentFilteredResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetLinksToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetListDataWA> (use wsdl2h option -g to auto-generate)

  - <ns1:GetListDataWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetListMarker> (use wsdl2h option -g to auto-generate)

  - <ns1:GetListMarkerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetMethod> (use wsdl2h option -g to auto-generate)

  - <ns1:GetMethodResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetNewProtocolNumber> (use wsdl2h option -g to auto-generate)

  - <ns1:GetNewProtocolNumberResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetObject> (use wsdl2h option -g to auto-generate)

  - <ns1:GetObjectResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolById> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByName> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByNameDesc> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByNameDescResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolByNameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetProtocolListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetQueryParam> (use wsdl2h option -g to auto-generate)

  - <ns1:GetQueryParamResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetRootId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetRootIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKImagesFromPDFTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKImagesFromPDFTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKLogList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKLogListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKRules> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKRulesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskExcelPreview> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskExcelPreviewResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskFieldMapping> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskFieldMappingResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskWatchFolder> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTaskWatchFolderResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTasks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTasksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTextFromTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKTextFromTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKVariables> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKVariablesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKWatchFolderDirectories> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSDKWatchFolderDirectoriesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTaskByTaskTypeId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTaskByTaskTypeIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTasks> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTasksResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTasksToRun> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSchedulerTasksToRunResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSign> (use wsdl2h option -g to auto-generate)

  - <ns1:GetSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTemplateList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTemplateListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTemplateProperties> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTemplatePropertiesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByLabelCode> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByLabelCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByMessageId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByMessageIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByRangeLabelCode> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationByRangeLabelCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationBySourceSuffix> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTranslationBySourceSuffixResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTree> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTreeForSecurity> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTreeForSecurityResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetTreeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByCont> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByContId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByContIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByContResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByData> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByDataId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByDataIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByFilecode> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUploadDetailByFilecodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserDetailByUserId> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserDetailByUserIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserDetailByUsername> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserDetailByUsernameResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserList> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserListActiveDirectory> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserListActiveDirectoryResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserListResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserSettings> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUserSettingsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUsersListByGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:GetUsersListByGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetWorkflowVariables> (use wsdl2h option -g to auto-generate)

  - <ns1:GetWorkflowVariablesResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:GetWsdlVersion> (use wsdl2h option -g to auto-generate)

  - <ns1:GetWsdlVersionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:IfFileExist> (use wsdl2h option -g to auto-generate)

  - <ns1:IfFileExistResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertArchSostRule> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertArchSostRuleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertClasseDocumentale> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertClasseDocumentaleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertData> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertDataWA> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertDataWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFile> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFileWA> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFileWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFilter> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertFilterResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkContainerToContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkContainerToContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkContainerToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkContainerToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkDocumentToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertLinkDocumentToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertSchedulerTask> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertSchedulerTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTPFile> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTPFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslation> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslationCode> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslationCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslationDecimalCode> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslationDecimalCodeResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertTranslationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUSFile> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUSFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUSFileWithUser> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUSFileWithUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUser> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUserConfig> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUserConfigResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUserInGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUserInGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertWFFile> (use wsdl2h option -g to auto-generate)

  - <ns1:InsertWFFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Login> (use wsdl2h option -g to auto-generate)

  - <ns1:LoginResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Logout> (use wsdl2h option -g to auto-generate)

  - <ns1:LogoutResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModDefaultProcess> (use wsdl2h option -g to auto-generate)

  - <ns1:ModDefaultProcessResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModExpression> (use wsdl2h option -g to auto-generate)

  - <ns1:ModExpressionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModSign> (use wsdl2h option -g to auto-generate)

  - <ns1:ModSignResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModUser> (use wsdl2h option -g to auto-generate)

  - <ns1:ModUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModUserSettings> (use wsdl2h option -g to auto-generate)

  - <ns1:ModUserSettingsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyArchSostRule> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyArchSostRuleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyData> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyDataWA> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyDataWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyField> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyFileDescription> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyFileDescriptionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyFilter> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyFilterResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyLinkContainerToContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyLinkContainerToContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyLinkContainerToDocument> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyLinkContainerToDocumentResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySDKTask> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySDKTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySDKTaskWatchFolder> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySDKTaskWatchFolderResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySchedulerTaskSchedule> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifySchedulerTaskScheduleResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyTranslation> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyTranslationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUser> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUserConfig> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUserConfigResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUserPassword> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUserPasswordResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ModifyUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:MoveData> (use wsdl2h option -g to auto-generate)

  - <ns1:MoveDataResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Ping> (use wsdl2h option -g to auto-generate)

  - <ns1:PingResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:Query> (use wsdl2h option -g to auto-generate)

  - <ns1:QueryHeader> (use wsdl2h option -g to auto-generate)

  - <ns1:QueryHeaderResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:QueryResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:QueryTotAttach> (use wsdl2h option -g to auto-generate)

  - <ns1:QueryTotAttachResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:RegenerateDynOrg> (use wsdl2h option -g to auto-generate)

  - <ns1:RegenerateDynOrgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:RemoveUserByAllGroups> (use wsdl2h option -g to auto-generate)

  - <ns1:RemoveUserByAllGroupsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:RemoveUserByGroup> (use wsdl2h option -g to auto-generate)

  - <ns1:RemoveUserByGroupResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ResetUserSessions> (use wsdl2h option -g to auto-generate)

  - <ns1:ResetUserSessionsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SaveChars> (use wsdl2h option -g to auto-generate)

  - <ns1:SaveCharsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SchedulerTaskScheduleProcessed> (use wsdl2h option -g to auto-generate)

  - <ns1:SchedulerTaskScheduleProcessedResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetFileAvailable> (use wsdl2h option -g to auto-generate)

  - <ns1:SetFileAvailableResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetInstanceReplication> (use wsdl2h option -g to auto-generate)

  - <ns1:SetInstanceReplicationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpDownloadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpDownloadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpTPDownloadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpTPDownloadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpTPUploadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpTPUploadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUSDownloadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUSDownloadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUSUploadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUSUploadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUploadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpUploadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpWFDownloadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpWFDownloadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpWFUploadPath> (use wsdl2h option -g to auto-generate)

  - <ns1:SetTmpWFUploadPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ShowProtocol> (use wsdl2h option -g to auto-generate)

  - <ns1:ShowProtocolResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:StartSDKTask> (use wsdl2h option -g to auto-generate)

  - <ns1:StoreSDKVariable> (use wsdl2h option -g to auto-generate)

  - <ns1:StoreSDKVariableResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:TestLettura> (use wsdl2h option -g to auto-generate)

  - <ns1:TestLetturaResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:TestScritturaLettura> (use wsdl2h option -g to auto-generate)

  - <ns1:TestScritturaLetturaResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFileContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFileContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFileWA> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadEndFileWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadPreviewFile> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadPreviewFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadSendChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadSendChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadSendChunkWA> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadSendChunkWAResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadTPEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadTPEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadTPSendChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadTPSendChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSEndFileWithUser> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSEndFileWithUserResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSSendChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadUSSendChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadWFEndFile> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadWFEndFileResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadWFSendChunk> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadWFSendChunkResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ValidateSDKTask> (use wsdl2h option -g to auto-generate)

  - <ns1:ValidateSDKTaskResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ValidateSession> (use wsdl2h option -g to auto-generate)

  - <ns1:ValidateSessionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:VerifyExpression> (use wsdl2h option -g to auto-generate)

  - <ns1:VerifyExpressionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:VerifySDKTaskNameExists> (use wsdl2h option -g to auto-generate)

  - <ns1:VerifySDKTaskNameExistsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateField> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:canCreateTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteField> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:canDeleteTemplateResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyContainer> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyContainerResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyDynorg> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyDynorgResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyField> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyFieldResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyRaccoglitore> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyRaccoglitoreResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyTemplate> (use wsdl2h option -g to auto-generate)

  - <ns1:canModifyTemplateResponse> (use wsdl2h option -g to auto-generate)

*/

/* End of ws.h */
